    1* ls
    2* source ~/.zshrc
    3* clear
    4* vim ~/.zshrc
    5* source $ZSH/oh-my-zsh.sh
    6* exit
    7* chsh -s $(which zsh)
    8* exit
    9* source ~/.zshrc
   10* reboot
   11* ls
   12* sudo su
   13* cd /media/carlos-leonardo/
   14* ls
   15* cd MacUtil/Cursos
   16* ls
   17* cd Git/Gitlab
   18* ls
   19* cat docker-compose.yml
   20* :q!
   21* clear
   22* docker-compose up -d
   23* mkdir -p ~/.docker/cli-plugins/\ncurl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
   24* chmod +x ~/.docker/cli-plugins/docker-compose
   25* docker compose version
   26* docker compose up -d
   27* docker compose up -d .
   28* vim docker-compose.yml
   29* docker compose up -d
   30* vim docker-compose.yml
   31* sudo vim docker-compose.yml
   32* docker ps
   33* docker ps -a
   34* sudo vim docker-compose.yml
   35* cd .. cd...
   36* cd ../..
   37* cd ..
   38* cp -R Cursos ~/Documentos
   39* cd ~/Documentos
   40* cd Cursos
   41* ls
   42* cd Git
   43* cd Gitlab
   44* sudo vim docker-compose.yml
   45* docker compose up -d
   46* docker ps -a
   47* sudo docker exec -it grep 
   48* Password:
   49*  /etc/gitlab/initial_root_password\n: 1717952064:0;sudo docker exec -it grep 'Password:' /etc/gitlab/initial_root_password\n: 1717952071:0;sudo docker exec -it grep "Password:" /etc/gitlab/initial_root_password\n: 1717952089:0;sudo docker exec -it gitlab grep 'Password:' /etc/gitlab/initial_root_password\n: 1717952102:0;sudo docker exec -it 2ee6c78a7c90 grep 'Password:' /etc/gitlab/initial_root_password\n: 1717952522:0;echo "\ue0b0 \u00b1 \ue0a0 \u27a6 \u2718 \u26a1 \u2699"
   50* clear
   51* echo "\ue0b0 \u00b1 \ue0a0 \u27a6 \u2718 \u26a1 \u2699"
   52* sudo apt-get install fonts-powerline\n: 1717952643:0;ls \\n~/.local/share/oh-my-zsh/themes
   53* ls \\n~/.local/oh-my-zsh/themes
   54* ls -a ~/
   55* ls -a ~/.oh-my-zsh
   56* ls -a ~/.oh-my-zsh/themes
   57* clear
   58* sed -i \\n's/_THEME=\"linuxonly\"/_THEME=\"agnoster\"/g' \\n~/.zshrc
   59* source ~/.zshrc
   60* exit
   61* ls
   62* cd Documentos
   63* cat ~/.zshrc
   64* vim ~/.zshrc
   65* source ~/.zshrc
   66* ls
   67* git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
   68* ls ~/.oh-my-zsh/custom
   69* ls ~/.oh-my-zsh/custom/themes
   70* vim ~/.zshrc
   71* source ~/.zshrc
   72* vim ~/.zshrc
   73* source ~/.zshrc
   74* clear
   75* ls
   76* cd Cursos
   77* ls
   78* exit
   79* clear
   80* sudo su
   81* ls
   82* ls .local
   83* ls .oh-my-zsh
   84* cd .oh-my-zsh
   85* exit
   86* cd Downloads
   87* ls
   88* dpkg -i zoom_amd64.deb
   89* sudo dpkg -i zoom_amd64.deb
   90* sudo apt -f install
   91* sudo dpkg -i zoom_amd64.deb
   92* exit
   93* docker ps -a
   94* clear
   95* sudo apt update
   96* systemctl daemon-reload
   97* sudo apt update
   98* clear
   99* exit
  100* docker ps
  101* docker ps -a
  102* lspci
  103* udo add-apt-repository ppa:oibaf/graphics-drivers
  104* sudo add-apt-repository ppa:oibaf/graphics-drivers
  105* sudo apt install xserver-xorg-video-intel
  106* lxinfo | grep "OpenGL version"
  107* glxinfo | grep "OpenGL version"
  108* sudo apt-get install -y gpg-agent wget\nwget -qO - https://repositories.intel.com/graphics/intel-graphics.key | \\n  sudo gpg --dearmor --output /usr/share/keyrings/intel-graphics.gpg\necho 'deb [arch=amd64,i386 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/graphics/ubuntu jammy arc' | \\n  sudo tee  /etc/apt/sources.list.d/intel.gpu.jammy.list
  109* sudo apt-get update\nsudo apt-get -y install \\n    gawk \\n    dkms \\n    linux-headers-$(uname -r) \\n    libc6-dev
  110* sudo apt-get install -y intel-platform-vsec-dkms intel-platform-cse-dkms\nsudo apt-get install -y intel-i915-dkms intel-fw-gpu
  111* sudo apt-get install -y intel-i915-dkms intel-fw-gpu\n: 1718152832:0;exit
  112* cat /etc/os-release
  113* exit
  114* xrandr -q
  115* clear
  116* exit
  117* netstat -tulnp 10.0.0.179
  118* ss -tunelp
  119* nmap 
  120* apt install nmap -y
  121* sudo apt install nmap -y
  122* sudo dpkg --configure -a
  123* apt install nmap -y
  124* sudo apt install nmap -y
  125* clear
  126* exit
  127* minikube start
  128* ls /etc
  129* kubectl get pods
  130* kubectl get nodes
  131* kubectl config --help
  132* kubectl config current-context
  133* kubectl config get-contexts
  134* kubectl config view
  135* exit
  136* minukbe start
  137* minikube start
  138* minikube --ehlp
  139* minikube --help
  140* ls
  141* pk10 configure
  142* clear
  143* ls
  144* ls -a
  145* ls .oh-my-zsh
  146* ls .oh-my-zsh/themes
  147* history
  148* p10k configure
  149* clear
  150* ls
  151* clear
  152* pwd
  153* cd Documentos
  154* ls
  155* clear
  156* ls .oh-my-zsh/themes
  157* cd ..
  158* cd carlos-leonardo/
  159* ls .oh-my-zsh/themes
  160* ls -la .oh-my-zsh/themes
  161* ls -a .oh-my-zsh/themes
  162* ls -a .oh-my-zsh/
  163* ls -a 
  164* clear
  165* ls -a
  166* ls -a Documentos
  167* ls -a Downloads
  168* cat .p10k.zsh
  169* clear
  170* cat .zshrc
  171* clear
  172* ls 
  173* ls -a
  174* ls -a .oh-my-zsh/
  175* ls -a .oh-my-zsh/custom
  176* ls -a .oh-my-zsh/custom/themes
  177* ls -a .oh-my-zsh/custom/themes/powerlevel10k
  178* ls -a .oh-my-zsh/custom/themes/powerlevel10k/config
  179* curl -OL https://github.com/ryanoasis/nerd-fonts/releases/latest/download/JetBrainsMono.tar.xz
  180* ls
  181* tar czf JetBrainsMono.tar.xz
  182* clear
  183* tar -xzf JetBrainsMono.tar.xz
  184* gunzip --help
  185* gunzip JetBrainsMono.tar.xz
  186* sudo apt install xz-utils
  187* apt -f install
  188* sudo apt -f install
  189* dkms remove
  190* dkms remove /var/lib/dkms/intel-platform-vsec-dkms/2023.20.0-21/6.8.0-35-generic/x86_64
  191* dkms remove -m intel-platform-vsec-dkm
  192* dkms remove -m intel-platform-vsec-dkms
  193* sudo dkms status
  194* sudo dkms remove intel-platform-cse-dkms/2023.11.1-36 --all
  195* sudo dkms remove intel-platform-vsec-dkms/2023.20.0-21 --all
  196* sudo apt install xz-utils
  197* ls /var/lib/dkms/
  198* rm -rf /var/lib/dkms/*
  199* sudo rm -rf /var/lib/dkms/*
  200* sudo apt install xz-utils
  201* ls /boot
  202* sudo dkms remove intel-platform-cse-dkms/2023.11.1-36 --all
  203* sudo dkms remove intel-platform-vsec-dkms/2023.20.0-21 --all
  204* sudo apt -f install
  205* ls /var/lib/dkms/
  206* sudo su
  207* sudo apt install xz-utils
  208* ls /var/lib/dkms
  209* ls /etc/kernel
  210* sudo apt-get autoremove --purge intel-linux-graphics-installer
  211* sudo apt-get autoremove --purge intel-graphics-update-tool
  212* source http://theclonker.de/\?p\=89
  213* sudo sh -c 'echo "\nPackage: *\nPin: release a=trusty*\nPin-Priority: 1001\n\nPackage: *\nPin: origin download.01.org\nPin-Priority: -100\n" > /etc/apt/preferences.d/intel-removal'
  214* sudo apt-get dist-upgrade
  215* ls /var/lib/dkms
  216* cd /var/lib/dkms
  217* ls
  218* fd --type=f --exclude=tmp/ --exclude=/run/media/ 88XX | xargs sudo rm
  219* dkms status
  220* sudo dpkg -P intel-platform-cse-dkms/2023.11.1-36 ntel-platform-vsec-dkms/2023.20.0-21
  221* dpkg --help
  222* sudo apt install --reinstall linux-headers-$(uname -r)
  223* sudo apt install --reinstall dkms
  224* cd
  225* exit
  226* ls
  227* tar -xJf JetBrainsMono.tar.xz
  228* ls
  229* ls -a
  230* ls -a .local
  231* ls -a .local/share
  232* ls -a .local/share/fonts
  233* ls /usr/share/fonts
  234* ls /usr/local/share/fonts
  235* mv *.ttf /usr/local/share/fonts
  236* sudo mv *.ttf /usr/local/share/fonts
  237* ls
  238* cat OFL.txt
  239* clear
  240* sudo apt update
  241* sudo apt upgrade
  242* clear
  243* sudp apt dist-upgrade
  244* sudo apt dist-upgrade
  245* sudo dkms status
  246* sudo dkms remove intel-platform-cse-dkms
  247* sudo dkms remove -m intel-platform-cse-dkms -v 2023.11.1-36
  248* sudo dkms remove -m intel-platform-vsec-dkms-v 2023.20.0-21
  249* sudo dkms remove -m intel-platform-vsec-dkms -v 2023.20.0-21
  250* sudo dkms status
  251* sudo dkms remove -m intel-platform-vsec-dkms -v 2023.20.0-21
  252* sudo dkms status
  253* sudo apt-get install fonts-powerline\n: 1718562968:0;sudo su
  254* exit
  255* sudo snap install okular
  256* docker ps -a
  257* ls
  258* rm JetBrainsMono.tar.xz
  259* cd Documentos
  260* ls
  261* cd Cursos
  262* cd Git/Gitlab
  263* ls
  264* ./start.sh
  265* docekr ps -a
  266* docker ps -a
  267* watch docker ps -a
  268* docker exec -it grep 
  269* Password:
  270*  /etc/gitlab/initial_root_password
  271* docker exec -it gitlab | grep 
  272* Password:
  273*  /etc/gitlab/initial_root_password
  274* docker exec -it gitlab-gitlab1 | grep 
  275* Password:
  276*  /etc/gitlab/initial_root_password
  277* docker exec -it gitlab-gitlab1  grep 
  278* Password:
  279*  /etc/gitlab/initial_root_password
  280* docker exec -it gitlab-gitlab1 grep 'Password:' /etc/gitlab/initial_root_password
  281* docker exec -it 6730223b2794 grep 'Password:' /etc/gitlab/initial_root_password
  282* clear
  283* curl -L "https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh" | sudo bash\n: 1718927698:0;apt install gitlab-runner
  284* sudo apt install gitlab-runner
  285* gitlab-runner register  --url http://localhost:8929  --token glrt--cy2gqWGBiReyD24y84h
  286* clear
  287* gitlab-runner run
  288* gitlab-runner exec linux backend
  289* gitlab-runner run
  290* sudo gitlab-runner register
  291* gitlab-runner start
  292* sudo gitlab-runner start
  293* gitlab-runner run
  294* exit
  295* sudo su
  296* whoami
  297* w
  298* cat /etc/group
  299* ls /media
  300* ls /media/carlos-leonardo
  301* ls /media/carlos-leonardo/MacUtil
  302* sudo chown carlos-leonardo:carlos-leonardo /media/carlos-leonardo/MacUtil
  303* chmod
  304* chmod --help
  305* sudo chown -R carlos-leonardo:carlos-leonardo /media/carlos-leonardo/MacUtil
  306* clear
  307* ls /media/carlos-leonardo/MacUtil
  308* sudo su
  309* exit
  310* docker ps
  311* docker restart 6ce7e43d4581
  312* ls
  313* sudo ./localstk.sh
  314* docker ps -a
  315* vim docker-compose.yml
  316* docker rm 6ce7e43d4581
  317* docker ps -a
  318* clear
  319* ls
  320* mkdir Localstack
  321* rmdir Localstack
  322* git clone https://github.com/localstack/localstack.git
  323* cd localstack
  324* ls
  325* cat docker-compose.yml
  326* python3 setup.py
  327* cat README.md
  328* localstack start -d
  329* docker ps -a
  330* localstack status services
  331* clear
  332* docker ps 
  333* export LOCALSTACK_AUTH_TOKEN="ls-wEge6742-BiWa-Zapi-tozA-7808wemE803b"
  334* docker stop 5a0e4a8eef78
  335* sudo yum remove awscli
  336* sudo apt uninstall awscli
  337* clear
  338* ls
  339* sudo apt uninstall awscli
  340* sudo apt remove awscli
  341* clear
  342* ls
  343* curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"\nunzip awscliv2.zip\nsudo ./aws/install
  344* aws --version
  345* clear
  346* sudo pip install awscli-local
  347* sudo pip3 install awscli-local
  348* clear
  349* pip --version
  350* aws --version
  351* ls -lash
  352* ls -lash .local
  353* ls -lash .local/share
  354* ls -lash .local/share/fonts
  355* sudp apt update
  356* sudo apt update
  357* sudo apt upgrade
  358* sudo vim /etc/default/grub
  359* sudo apt upgrade
  360* sudo update-grub
  361* reboot
  362* sudo apt update
  363* sudo apt dist-upgrade
  364* clear
  365* sudo apt install --assume-yes ubuntu-unity-desktop
  366* sudo reboot
  367* sudo apt update -y
  368* sudo apt upgrade
  369* sudo apt dist-upgrade
  370* reboot
  371* sudo su
  372* exit
  373* sudo su
  374* sudo apt update -y
  375* sudo apt dist-upgrade -y
  376* clear
  377* sudo su
  378* gitlab-runner status
  379* sudo su
  380* cat /etc/os-release
  381* sudo su
  382* iwconfig
  383* nslookup
  384* sudo su
  385* exit
  386* sudo su
  387* ls
  388* cd TheK8sBook
  389* minikube start
  390* kubectl run -rm podexample -f pods/pod.yml 
  391* minikube update
  392* minikube update-check
  393* clear
  394* minikube
  395* minikube stop
  396* exit
  397* cd Downloads
  398* git clone https://github.com/ZeoRexDevs/Udeler_GUI.git
  399* cd Udeler_GUI
  400* ls
  401* npm install
  402* cd ..
  403* chmod +x Udeler-1.8.2-linux-x86_x64.AppImage
  404* ./Udeler-1.8.2-linux-x86_x64.AppImage
  405* sudo ./Udeler-1.8.2-linux-x86_x64.AppImage
  406* sudo ./Udeler-1.8.2-linux-x86_x64.AppImage --appimage-extract
  407* ls
  408* cd squashfs-root
  409* ls
  410* cd squashfs-root
  411* sudo ./Udeler-1.8.2-linux-x86_x64.AppImage
  412* sudo apt install FUSE
  413* sudo apt install fuse
  414* sudo ./Udeler-1.8.2-linux-x86_x64.AppImage
  415* ./Udeler-1.8.2-linux-x86_x64.AppImage
  416* sudo su
  417* ./Udeler-1.8.2-linux-x86_x64.AppImage
  418* clear
  419* ls
  420* apt install npm
  421* sudo apt install npm
  422* cd Udeler_GUI
  423* npm run build-linux
  424* npm i -g electron-builder
  425* sudo npm i -g electron-builder
  426* sudo npm fund
  427* npm run build-linux
  428* sudo apt install node.js
  429* sudo apt install nodejs
  430* cd Downloads
  431* sudo ./Udeler-1.8.2-linux-x86_x64.AppImage
  432* w
  433* ./Udeler-1.8.2-linux-x86_x64.AppImage
  434* npm start
  435* sudo npm start
  436* cd Udeler_GUI
  437* npm start
  438* npm run build-linux
  439* npm run build
  440* npm ls electron
  441* npm -g install electron
  442* sudo npm -g install electron
  443* npm fund
  444* npm ls electron
  445* sudo apt update
  446* sudo apt upgrade
  447* clear
  448* exit
  449* sudo su
  450* exit
  451* sudo su
  452* exit
  453* sudo su
  454* exit
  455* ip net ns
  456* ip netns
  457* sudo su
  458* dig zabbixagent.softplan.com.br
  459* dig zabbixpub.softplan.com.br
  460* dig monitorunj.softplan.com.br
  461* exit
  462* telnet pgenet1.pge.am.gov.br 443
  463* curl -v telnet://pgenet1.pge.am.gov.br:443
  464* telnet pgenet1.pge.am.gov.br 443
  465* dig 177.66.10.138
  466* dig pgenet1.pge.am.gov.br
  467* exit
  468* sudo su
  469* npm install\nnpm run electron:serve (Development)\nnpm run electron:build (Production)
  470* [
  471* exit
  472* cd Download
  473* cd Downloads
  474* ls
  475* cd udemy-downloader-1.1.0
  476* ls
  477* npm install
  478* sudo npm install
  479* cd ..
  480* sudo rm -rf udemy-downloader-1.1.0
  481* sudo su
  482* exit
  483* sudo su
  484* exit
  485* sudo su
  486* sudo apt install anydesk
  487* cd Cursos
  488* ls
  489* cd Documentos/Cursos
  490* ls
  491* mkdir Python
  492* cd Python
  493* git clone https://github.com/JeffersonLobato/Curso-Completo-de-Python-no-Youtube.git
  494* ./Udeler-1.8.2-linux-x86_x64.AppImage
  495* ./Udeler-1.8.2-linux-x86_x64.AppImage --no-sandbox
  496* exit
  497* git clone https://github.com/danhpaiva/Udeler_GUI.git
  498* cd Udeler_GUI
  499* ls
  500* cat README.md
  501* npm start
  502* npm start --no-sandbox
  503* ls
  504* ls assets
  505* cat index.
  506* cat index.html
  507* cd ..
  508* wget https://www.udeler.com/extension
  509* wget https://www.udeler.com/extension --no-check-certificate
  510* ./firefox
  511* ls
  512* ./Udeler-1.8.2-linux-x86_x64.AppImage --no-sandbox
  513* ./firefox
  514* clear
  515* cd extension
  516* ls
  517* cd ..
  518* ./Udeler-1.8.2-linux-x86_x64.AppImage --no-sandbox
  519* python -m py_compile
  520* python3 -m py_compile
  521* python3 -m py_compile "%f"
  522* imports this
  523* import this
  524* python3 import this
  525* clear
  526* sudo apt install git p7zip-full python3-pip python3-wxgtk4.0 grub2-common grub-pc-bin parted dosfstools ntfs-3g
  527* ls
  528* cd Download
  529* cd Downloads
  530* git clone https://github.com/WoeUSB/WoeUSB-ng.git
  531* cd WoeUSB-ng
  532* ls
  533* https://github.com/WoeUSB/WoeUSB-ng.git
  534* \tsudo pip3 install WoeUSB-ng
  535* git apply development.patch
  536* sudo pip3 install -e .
  537* sudo apt install gparted
  538* sudo su
  539* cd Downloads
  540* git clone https://github.com/balena-io/etcher.git
  541* ls
  542* sudo spkg -i balena-etcher_1.19.21_amd64.deb
  543* sudo dpkg -i balena-etcher_1.19.21_amd64.deb
  544* sudo spt -f install
  545* sudo apt -f install
  546* sudo spt -f install
  547* sudo dpkg -i balena-etcher_1.19.21_amd64.deb
  548* sudo apt -f install
  549* sudo dpkg -i balena-etcher_1.19.21_amd64.deb
  550* sudo apt-get -f install
  551* sudo spt install balena-etcher_1.19.21_amd64.deb
  552* sudo apt install balena-etcher_1.19.21_amd64.deb
  553* cd etcher
  554* ls
  555* cd ..
  556* chmod +x balenaEtcher-1.19.21-x64.AppImage
  557* ./balenaEtcher-1.19.21-x64.AppImage
  558* sudo ./balenaEtcher-1.19.21-x64.AppImage
  559* sudo ./balenaEtcher-1.19.21-x64.AppImage --no-sandbox
  560* git clone https://github.com/ventoy/Ventoy.git
  561* cd Ventoy
  562* ls
  563* cat doc
  564* cat Dockerfile
  565* cd ..
  566* sudo rm -rf WoeUSB-ng
  567* cd ventoy-1.0.99
  568* ls
  569* sudo su
  570* exit
  571* sudo su
  572* sudo dpkg-reconfigure gdm
  573* sudo apt install gdm
  574* sudo dpkg-reconfigure lightdm
  575* sudo apt install ubuntu-gnome-desktop
  576* sudo add-apt-repository ppa:embrosyn/cinnamon\n: 1725137712:0;sudo apt-get install cinnamon\n: 1725144765:0;sudo add-apt-repository -y ppa:gwendal-lebihan-dev/cinnamon-nightly\n: 1725144815:0;sudo apt-get update\n: 1725144843:0;sudo apt-get install cinnamon\n: 1725144854:0;sudo apt-get reinstall cinnamon\n: 1725144945:0;clear
  577* sudo add-apt-repository universe
  578* sudo apt install cinnamon-desktop-environment
  579* cd /
  580* sudo su
  581* ifconfig
  582* sudo apt install xrdp
  583* sudo su
  584* exit
  585* sudo su
  586* ls
  587* cd Documentos
  588* cd Cursos
  589* ls
  590* cd Devops
  591* ls
  592* cd ..
  593* cd Git
  594* s
  595* l
  596* ls Git
  597* ls Gitlab
  598* ls gitlab-cicd-app-base-main
  599* ls gitrunner
  600* ls gitrunner/app
  601* ls teste
  602* ls teste/app
  603* clear
  604* cd ..
  605* ls
  606* mkdir Gitlab CI/CD
  607* mkdir Gitlab CI_CD
  608* cd Gitlab
  609* cd ..
  610* ls
  611* cd CI_CD
  612* ls
  613* git clone https://github.com/DevopsWorking/gitlab-project.git
  614* git clone https://github.com/DevopsWorking/GitLab-Project-Code.git
  615* ls
  616* exit
  617* sudo vim /etc/apt/sources.list.d/embrosyn-ubuntu-cinnamon-noble.sources
  618* sudo vim /etc/apt/sources.list.d/gwendal-lebihan-dev-ubuntu-cinnamon-nightly-noble.sources
  619* sudo vim /etc/apt/sources.list.d/docker.list
  620* sudo vim /etc/apt/sources.list.d/docker.list.save
  621* sudo apt install locate
  622* sudo apt install locate-db
  623* updatedb
  624* sudo updatedb
  625* locate libreoffice
  626* rm -rf /opt/libreoffice24.2
  627* sudo rm -rf /opt/libreoffice24.2
  628* updatedb
  629* sudo updatedb
  630* sudo locate libreoffice
  631* sudo rm -rf /var/lib/dpkg/info/libreoffice
  632* sudo rm -rf /usr/share/libreoffice/
  633* sudo updatedb
  634* sudo locate libreoffice
  635* sudo rm -rf /var/lib/dpkg/info/libreoffice*
  636* sudo updatedb
  637* sudo locate libreoffice
  638* sudo rm -rf /usr/bin/libreoffice
  639* sudo rm -rf /usr/lib/libreoffice/
  640* sudo updatedb
  641* sudo locate libreoffice
  642* sudo rm -rf /var/spool/libreoffice
  643* /var/lib/libreoffice*
  644* cd /
  645* sudo rm -rf /var/lib/libreoffice/
  646* sudo rm -rf /var/lib/libreoffice*
  647* sudo rm -rf /var/lib/libreoffice
  648* sudo rm -rf /usr/lib/libreoffice/
  649* sudo su
  650* exit
  651* sudo su
  652* traceroute 168.196.215.233
  653* sudo apt install traceroute
  654* traceroute 168.196.215.232
  655* sudo su
  656* ifconfig
  657* sudo su
  658* udo apt-get install python3-pip gpsd gpsd-clients python3-tk python3-setuptools python3-pyqt5.qtchart\nsudo pip3 install QScintilla gps3 dronekit manuf python-dateutil numpy matplotlib\n: 1725815926:0;exit
  659* udo apt-get install python3-pip gpsd gpsd-clients python3-tk python3-setuptools python3-pyqt5.qtchart\nsudo pip3 install QScintilla gps3 dronekit manuf python-dateutil numpy matplotlib\n: 1725815959:0;git clone https://github.com/ghostop14/sparrow-wifi\ncd sparrow-wifi\nvirtualenv --python=python3 $HOME/sparrow\nsource $HOME/sparrow/bin/activate\npip3 install gps3 python-dateutil requests pyqt5 pyqtchart numpy matplotlib\nsudo python3 sparrow-wifi.py
  660* sudo apt install sqlite3-devel
  661* sudo apt install sqlite-devel
  662* sudo apt install libsqlite3-dev
  663* git clone https://github.com/ghostop14/sparrow-wifi\ncd sparrow-wifi\nvirtualenv --python=python3 $HOME/sparrow\nsource $HOME/sparrow/bin/activate\npip3 install gps3 python-dateutil requests pyqt5 pyqtchart numpy matplotlib\nsudo python3 sparrow-wifi.py
  664* sudo apt install sqlite3
  665* git clone https://github.com/ghostop14/sparrow-wifi\ncd sparrow-wifi\nvirtualenv --python=python3 $HOME/sparrow\nsource $HOME/sparrow/bin/activate\npip3 install gps3 python-dateutil requests pyqt5 pyqtchart numpy matplotlib\nsudo python3 sparrow-wifi.py
  666* airflow db init]
  667* airflow db init
  668* ls
  669* virtualenv
  670* python3 -m venv .venv
  671* sudo python3 -m venv .venv
  672* exit
  673* cd sparrow-wifi
  674* virtualenv --python=python3 $HOME/sparrow\nsource $HOME/sparrow/bin/activate\npip3 install gps3 python-dateutil requests pyqt5 pyqtchart numpy matplotlib\nsudo python3 sparrow-wifi.py\n: 1725816417:0;cd ..
  675* cd sparrow-wifi
  676* sudo add-apt-repository ppa:wseverin/ppa
  677* sudo apt update
  678* sudo apt-get install linssid\n: 1725816750:0;sudo apt-get autoclean\n: 1725816759:0;sudo apt-get autoremove\n: 1725816770:0;sudo apt-get clean\n: 1725816830:0;sudo python3 -pip update
  679* pip install --upgrade pip\n: 1725816860:0;sudo pip install --upgrade pip\n: 1725816868:0;sudo pip3 install --upgrade pip\n: 1725816876:0;sudo pip3 install --upgrade pip3\n: 1725816881:0;sudo pip3 install --upgrade pip\n: 1725816889:0;pip3 install --upgrade pip\n: 1725816916:0;pip3 install --upgrade pip
  680* pip install --upgrade pip3\n: 1725816944:0;exit
  681* cd Cursos
  682* ls
  683* cd Documentos/PUCMINAS/
  684* ls
  685* mkdir CICD
  686* cd CICD
  687* git clone https://github.com/aulas-marco/cicd.git
  688* ls
  689* mv cicd/* .
  690* ls
  691* ls cicd
  692* rm -rf cicd
  693* cd unidade\ 01
  694* ls
  695* py --version
  696* python --version
  697* python3 --version
  698* python3 -m pip list
  699* python3 -m pip install --upgrade pip
  700* sudo python3 -m pip install --upgrade pip
  701* pip3 install --upgrade pip
  702* pip install --upgrade pip
  703* conda deactivate
  704* clear
  705* which pip
  706* which python
  707* which python3
  708* sudo vim ~/.zshrc
  709* vim ~/.zshrc
  710* python3 -m venv myenv
  711* source myenv/bin/activate
  712* pip3 install --upgrade pip
  713* pip3 install virtualenv
  714* pwd
  715* clear
  716* exit
  717* pip3 -m install --upgrade pip
  718* python3 -m install --upgrade pip
  719* python3 -m pip install --upgrade pip
  720* ls /usr/local/lib/python3.12
  721* sudo chmod -R 775 /usr/local/lib/python3.12/site-packages
  722* clear
  723* python3 -m pip install --upgrade pip
  724* clear
  725* ls 
  726* cd ~
  727* ls
  728* ls -lah
  729* python3 -m pip3 list
  730* python3 -m pip list
  731* python3 -m pip install
  732* pip help install
  733* clear
  734* pwd
  735* cd Documentos
  736* ls
  737* cd Cursos
  738* ls
  739* cd Python
  740* ls
  741* ls python
  742* ls pythonProject
  743* cd pythonProject
  744* mkdir Ambientes
  745* cd Ambientes
  746* virtualenv projeto01
  747* pip3 -m install virtualenv
  748* pip3 install virtualenv
  749* virtualenv projeto01
  750* python3 - pip3 install virtualenv
  751* cd Documentos/Cursos
  752* cd Python
  753* ls
  754* cd pythonProject
  755* ls
  756* cd Ambientes
  757* ls
  758* python3 -m pip3 install virtualenv
  759* python3 -m pip install virtualenv
  760* virtualenv projeto01
  761* sudo chmod -R 777 /usr/local/lib/python3.12/site-packages
  762* python3 -m pip install virtualenv
  763* virtualenv projeto01
  764* sudo vim ~/.zshrc
  765* cat ~/.bashrc
  766* env
  767* clear
  768* python
  769* python3
  770* sudo vim ~/.zshrc
  771* wich python
  772* which python
  773* which python3
  774* which pip
  775* which pip3
  776* pip
  777* pip3
  778* clear
  779* pip --version
  780* pip --version3
  781* pip3 --version
  782* python3 -m unistall pip
  783* python3 -m pip uninstall
  784* pip uninstall pip\n: 1726187494:0;sudo pip uninstall pip\n: 1726187513:0;python3 -m pip uninstall pip\n: 1726187528:0;sudo python3 -m pip uninstall pip\n: 1726187540:0;sudo python3 -m pip3 uninstall pip\n: 1726187546:0;sudo python3 -m pip uninstall pip3\n: 1726187549:0;pip3
  785* pip
  786* clear
  787* which pip3
  788* which pip
  789* which python
  790* which python3
  791* sudo apt remove python3-pip\n: 1726187616:0;sudo apt remove python3-pip3\n: 1726187620:0;pip
  792* pip3
  793* clear
  794* python3.12 --version\n: 1726187720:0;sudo apt install python3-pip\n: 1726187738:0;apt clean
  795* sudo apt clean
  796* sudo apt autoclean
  797* apt update
  798* sudo apt update
  799* which pip
  800* which pip3
  801* clear
  802* sudo vim ~/.zshrc
  803* which python
  804* which python3
  805* sudo vim ~/.zshrc
  806* sudo source ~/.zshrc
  807* sudo vim ~/.zshrc
  808* sudo source ~/.zshrc
  809* source
  810* source ~/.zshrc
  811* sudo vim ~/.zshrc
  812* vim ~/.zshrc
  813* source
  814* reboot
  815* sudo su
  816* sudo vim ~/.zshrc
  817* source ~/.zshrc
  818* sudo vim ~/.zshrc
  819* source ~/.zshrc
  820* cp ~/.zshrc /home
  821* sudo cp ~/.zshrc /home
  822* sudo rm -f ~/.zshrc
  823* exit
  824* ls
  825* ls -la
  826* pwd
  827* vim .zshrc
  828* cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
  829* source ~/.zshrc
  830* ls
  831* clear
  832* ls ~/.oh-my-zsh/templates/
  833* ls ~/.oh-my-zsh/
  834* curl -sL https://raw.githubusercontent.com/aiktb/dotzsh/master/zsh.sh | bash && zsh
  835* pwd
  836* ls
  837* clear
  838* ls
  839* vim ~/.zshrc
  840* sudo cp ~/.zshrc /home
  841* vim ~/.zshrc
  842* sudo vim ~/.zshrc
  843* which python3
  844* which python
  845* which python3
  846* source ~/.zshrc
  847* python
  848* pip
  849* clear
  850* ls
  851* ls builds
  852* rm -f builds
  853* sudo rm -rf builds
  854* sudo rm -rf sparrow-wifi 
  855* rm -f package-lock.json 
  856* mv localstack-cli-3.5.0-linux-amd64-onefile.tar.gz localstk.sh docker-compose.yml unifi-5.11.39.sh unifi-update.sh Downloads
  857* rm -rf Downloaders
  858* sudo rm -rf Downloaders
  859* ls
  860* clear
  861* ls
  862* ls myenv
  863* sudo rm -rf myenv
  864* sudo su
  865* clear
  866* sudp python -m install virtualenv
  867* sudo python -m install virtualenv
  868* sudo python3 -m install virtualenv
  869* clear
  870* sudo vim ~/.zshrc
  871* source ~/.zshrc
  872* clear
  873* sudo python3 -m install virtualenv
  874* python3 -m install virtualenv
  875* python3
  876* source ~/.zshrc
  877* vim ~/.zshrc
  878* source $ZSH/oh-my-zsh.sh
  879* vim ~/.zshrc
  880* source ~/.zshrc
  881* vim ~/.zshrc
  882* source ~/.zshrc
  883* git clone https://github.com/MichaelAquilina/zsh-you-should-use.git $ZSH_CUSTOM/plugins/you-should-use
  884* source ~/.zshrc
  885* source $ZSH/oh-my-zsh.sh
  886* clear
  887* python3 -m install virtualenv
  888* python -m install virtualenv
  889* python -m install virtualenv install
  890* python -m virtualenv install
  891* python -m pip install virtualenv
  892* python3 -m pip install virtualenv
  893* pip
  894* pip3
  895* python3 -m pip install virtualenv
  896* python3 -m pip3 install virtualenv
  897* sudo apt install python3-pip
  898* sudo apt install --reinstall python3-pip
  899* dpkg --help
  900* clear
  901* apt update
  902* sudo apt update
  903* sudo rm -f /etc/apt/sources.list.d/wseverin-ubuntu-ppa-noble.sources
  904* apt update
  905* sudo apt update
  906* clear
  907* sudo apt upgrade
  908* sudo python3 -m pip install virtualenv
  909* reboot
  910* sudo su
  911* pip3 list
  912* pip list
  913* cd Cursos
  914* ls
  915* cd Documentos/Cursos/Python/pythonProject
  916* cd Ambientes
  917* ls
  918* mkdir projeto01
  919* virtualenv projeto01
  920* sudo /usr/bin/easy_install virtualenv
  921* pip uninstall virtualenv
  922* sudo pip uninstall virtualenv
  923* sudo pip3 uninstall virtualenv
  924* sudo apt install python3-virtualenv
  925* virtualenv projeto01
  926* ls
  927* cd projeto01
  928* ls
  929* clear
  930* ls
  931* ls bin
  932* ls lib
  933* cd bin
  934* cd .. /..
  935* cd ../..
  936* source projeto01/bin/activate
  937* cd projeto01
  938* ls
  939* clear
  940* pip list
  941* pip install numpy
  942* pip install psutil
  943* pip install jupyter-lab
  944* pip install jupyterlab
  945* clear
  946* pip list
  947* clear
  948* cd ..
  949* deactivate
  950* ls
  951* pip list
  952* rm -rf projeto01
  953* virtualenv novo_projeto
  954* novo_projeto/bin/activate
  955* sudo novo_projeto/bin/activate
  956* ls novo_projeto
  957* ls novo_projeto/bin
  958* novo_projeto/bin/activate
  959* sudo novo_projeto/bin/activate
  960* cd novo_projeto/bin/
  961* activ
  962* ls
  963* ./activate
  964* sudo ./activate
  965* sudo
  966* sudo su
  967* cd ../..
  968* ls
  969* novo_projeto/bin/activate
  970* ls -las
  971* ls -lash
  972* rm -rf novo_projeto
  973* mkdir novo_projeto
  974* virtualenv novo_projeto
  975* ls
  976* ls novo_projeto/bin
  977* novo_projeto/bin/activate
  978* rm -rf novo_projeto
  979* virtualenv novo_projeto
  980* source novo_projeto/bin/activate
  981* pip list
  982* pip install psutil
  983* ls
  984* clear
  985* cd Ambientes
  986* ls
  987* cd pythonProject
  988* cd Ambientes
  989* cd novo_projeto
  990* ls
  991* python3 teste.py
  992* sudo su
  993* ls
  994* doc erk image ls
  995* clear
  996* docker image ls
  997* docker image rm 6f936109aa41
  998* ls
  999* ls Documentos
 1000* ls Downloads
 1001* cat Downloads/lock-solid.svg
 1002* rm -f Downloads/lock-solid.svg
 1003* cat Downloads/docker-compose.yml
 1004* cat Downloads/localstk.sh
 1005* ls Documentos/C
 1006* ls Documentos/Cursos
 1007* ls Documentos/Cursos/CI_CD
 1008* ls Documentos/Cursos/Git
 1009* ls Documentos/Cursos/Git/Gitlab
 1010* cat Documentos/Cursos/Git/Gitlab/docker
 1011* cat Documentos/Cursos/Git/Gitlab/docker-compose.yml
 1012* ls Downloads
 1013* ls Documentos
 1014* ls Documentos/Cursos
 1015* ls Documentos/Cursos/CI_CD
 1016* mv Documentos/Git* Documentos/Cursos/CI_CD
 1017* mv Documentos/Git Documentos/Cursos/CI_CD
 1018* mv
 1019* mv --help
 1020* ls Documentos/Cursos/CI_CD
 1021* mv Documentos/Git Documentos/Cursos/CI_CD
 1022* mv Documentos/Cursos/Git Documentos/Cursos/CI_CD
 1023* ls Documentos/Cursos/CI_CD
 1024* mv Documentos/Cursos/Gitlab Documentos/Cursos/CI_CD
 1025* clear
 1026* ls
 1027* cd Documentos/Cursos
 1028* ls
 1029* cd CI_CD
 1030* ls
 1031* ls Git
 1032* ls Gitlab
 1033* ls ~/Downlo
 1034* ls ~/Downloads
 1035* cd Gitlab
 1036* ls
 1037* cd ..
 1038* ls
 1039* ls CI_CD
 1040* ls CI_CD/Git
 1041* ls CI_CD/Git/Git
 1042* ls CI_CD/Git/Gitlab
 1043* mv CI_CD/Git/Gitlab/* CI_CD/Gitlab
 1044* ls CI_CD/Git/Gitlab
 1045* ls CI_CD/Git/Gitlab/
 1046* ls CI_CD/Gitlab
 1047* rm -f CI_CD/Git/Gitlab/
 1048* rm -rf CI_CD/Git/Gitlab/
 1049* ls
 1050* ls CI_CD
 1051* ls CI_CD/Git
 1052* ls CI_CD/Git/pipeline
 1053* ls CI_CD/Git/pipeline/gitlab-cicd-app-base
 1054* clear
 1055* ls
 1056* cd CI_CD
 1057* ls
 1058* cd Gitlab
 1059* ls
 1060* ls builds
 1061* ls builds/-cy2gqWGB
 1062* ls builds/-cy2gqWGB/0/root/lab
 1063* ls builds/-cy2gqWGB/0/root/
 1064* ls builds/-cy2gqWGB/0/root/merge_request
 1065* cat start.sh
 1066* clear
 1067* gitlab-runner status
 1068* gitlab-runner start
 1069* docker ps -a
 1070* docker start 2ee6c78a7c90
 1071* history | grep gitlab-runner
 1072* gitlab-runner run
 1073* sudo su
 1074* gitlab-runner stop
 1075* gitlab-runner restart
 1076* clear
 1077* gitlab-runner status
 1078* gitlab-runner run
 1079* gitlab-runner stop
 1080* @r@
 1081* gitlab-runner stop
 1082* gitlab-runner register  --url http://localhost:8929  --token glrt-4y4UpdRfdKRPf1zm2H8P
 1083* gitlab-runner status
 1084* gitlab-runner start
 1085* gitlab-runner register  --url http://localhost:8929  --token glrt-4y4UpdRfdKRPf1zm2H8P
 1086* gitlab-runner status
 1087* gitlab-runner run
 1088* sudo su
 1089* vim ~/.ssh/authorized_keys
 1090* ssh-keygen
 1091* cat ~/.ssh/id_ed25519.pub
 1092* vim ~/.ssh/authorized_keys
 1093* sudo su
 1094* exit
 1095* sudo su
 1096* exit
 1097* sudo su
 1098* exit
 1099* sudo visudo
 1100* sudo su
 1101* exit
 1102* sudo su
 1103* pwd
 1104* cd Downloads/Openvpn
 1105* ls
 1106* openvpn3 start-session --config fwpge-UDP4-1194-carlos.souza-config.ovpn
 1107* openvpn3 session-start --config fwpge-UDP4-1194-carlos.souza-config.ovpn
 1108* ssh pge@172.19.1.101
 1109* ssh pge@172.19.1.104
 1110* ssh pge@172.19.1.101
 1111* ssh pgeadmin@172.19.1.101
 1112* ssh pgeadmin@172.19.1.114
 1113* ssh pge@172.19.1.114
 1114* ssh pge@172.19.1.100
 1115* ssh pgeadmin@172.19.1.100
 1116* ssh pgeadmin@172.19.1.101
 1117* ssh pgeadmin@172.19.1.104
 1118* ssh pge@172.19.1.104
 1119* ssh pge@172.19.1.114
 1120* ssh pge@172.19.1.104
 1121* xit
 1122* exit
 1123* sudo -
 1124* sudo --help
 1125* sudo su
 1126* cd Downloads/Openvpn
 1127* sudo su
 1128* openvpn3 session-start --config fwpge-UDP4-1194-carlos.souza-config.ovpn
 1129* sudo su
 1130* cd Downloads/Openvpn
 1131* openvpn3 session-start --config fwpge-UDP4-1194-carlos.souza-config.ovpn
 1132* ssh pge@172.19.1.104
 1133* ssh pge@172.19.1.114
 1134* ssh pge@172.19.1.103
 1135* ssh pge@172.19.1.114
 1136* ssh pgeadmin@172.19.1.101
 1137* ssh pge@172.19.1.103
 1138* ssh pgeadmin@172.19.1.104
 1139* ssh pge@172.19.1.104
 1140* ssh pge@172.19.1.105
 1141* ssh pge@172.19.1.103
 1142* ssh pge@172.19.1.104
 1143* ssh pge@172.19.1.114
 1144* ssh pge@172.19.1.103
 1145* ssh pge@172.19.1.104
 1146* ssh pge@172.19.1.103
 1147* ssh pge@172.19.1.104
 1148* ssh pge@172.19.1.114
 1149* ssh pge@172.19.1.103
 1150* ssh pge@172.19.1.104
 1151* ssh pge@172.19.1.103
 1152* ssh pge@172.19.1.114
 1153* ssh pge@172.19.1.103
 1154* ssh pge@172.19.1.114
 1155* ssh pge@172.19.1.103
 1156* ssh pge@172.19.1.104
 1157* ssh pge@172.19.1.113
 1158* exit
 1159* sudo su
 1160* cd Downloads/
 1161* ls
 1162* dpkg -i onenote-desktop-2.2.2-amd64.deb
 1163* sudo dpkg -i onenote-desktop-2.2.2-amd64.deb
 1164* apt -f install
 1165* sudo apt -f install
 1166* sudo dpkg -i onenote-desktop-2.2.2-amd64.deb
 1167* sudo apt install gconf2 gconf-service libappindicator1
 1168* sudo apt search gconf2
 1169* sudo apt search gconf
 1170* snap --help
 1171* snap install onenote-desktop-2.2.2-amd64.snap
 1172* sudo snap install onenote-desktop-2.2.2-amd64.snap
 1173* sudo su
 1174* exit
 1175* sudo su
 1176* history | grep openvpn
 1177* openvpn3 start-session --config fwpge-UDP4-1194-carlos.souza-config.ovpn
 1178* openvpn3 session-start --config fwpge-UDP4-1194-carlos.souza-config.ovpn
 1179* sudo su
 1180* cd 
 1181* rea\ de\ trabalho
 1182* cd jailbreak
 1183* sudo -
 1184* ls
 1185* ./Impactor
 1186* sudo ldconfig
 1187* sudo apt-get install libncurses5
 1188* sudo apt-get install ia32-libs
 1189* sudo apt-get install lib32z1
 1190* ./Impactor
 1191* ls -lah
 1192* sudo ln -s /usr/lib/libncursesw.so.6.0 /usr/lib/libncurses.so.5
 1193* sudo ln -s /usr/lib/libncursesw.so.6.0 /usr/lib/libtinfo.so.5
 1194* ./Impactor
 1195* ln --help
 1196* sudo unlink /usr/lib/libncursesw.so.6.0 /usr/lib/libtinfo.so.5
 1197* rm /usr/lib/libncursesw.so.6.0 /usr/lib/libtinfo.so.5
 1198* ls -n
 1199* ln -s
 1200* ln
 1201* ln --help
 1202* clear
 1203* ls
 1204* ls -lash
 1205* ls /lib/x86_64-linux-gnu/
 1206* clear
 1207* ls
 1208* ls -l
 1209* cat /lib/x86_64-linux-gnu/libudev.so.1
 1210* clear
 1211* ./Impactor
 1212* ls -la /usr/lib64/libncurses*
 1213* ls -l /usr/lib64/libncurses*
 1214* rpm -qi ncurses
 1215* ls -l /usr/lib/libncurses.so.5 
 1216* chmod +x Impactor
 1217* ./Impactor
 1218* cp /usr/lib/libncurses.so.5 .
 1219* ln -s /usr/lib/libncurses.so.6 /usr/lib/libncurses.so.5
 1220* ln -s libncurses.so.6 libncurses.so.5
 1221* ./Impactor
 1222* clear
 1223* ls
 1224* ./Impactor
 1225* LS -L
 1226* ls -l
 1227* rm libudev.so.0 -> /lib/i386-linux-gnu/libudev.so.1\n: 1727216977:0;ls -l
 1228* unlink libudev.so.0 -> /lib/i386-linux-gnu/libudev.so.1\n: 1727217230:0;ls -l -type l
 1229* ls -l --type l
 1230* find . -type l -printf "%p -> %l\n"
 1231* rm libudev.so.0 -> /lib/i386-linux-gnu/libudev.so.1\n: 1727217342:0;unlink libudev.so.0 -> /lib/i386-linux-gnu/libudev.so.1\n: 1727217402:0;clear
 1232* exit
 1233* cd 
 1234* rea\ de\ trabalho/jailbreak
 1235* ls
 1236* ./Impactor
 1237* history | grep openvpn
 1238* cd Downloads/Openvpn
 1239* openvpn3 session-start --config fwpge-UDP4-1194-carlos.souza-config.ovpn
 1240* sudo -
 1241* openvpn3 session-start --config fwpge-UDP4-1194-carlos.souza-config.ovpn
 1242* sudo su
 1243* cd Documentos/Cursos
 1244* ls
 1245* cd ..
 1246* cd PUCMINAS
 1247* ls
 1248* cd CICD
 1249* ls
 1250* cd unidade\ 0
 1251* ls
 1252* cd unidade\ 01
 1253* ls
 1254* docekr ps -a
 1255* clear
 1256* localstack status
 1257* localstack --help
 1258* awscli
 1259* locastack start
 1260* localstack start
 1261* cd ../..
 1262* cd ..
 1263* ls
 1264* cd Cursos/CI_CD
 1265* ls
 1266* cd localstack
 1267* ls
 1268* cd localstack
 1269* localstack start
 1270* localstack config
 1271* localstack config validate
 1272* localstack config show
 1273* ls
 1274* cd ..
 1275* ls
 1276* git clone https://github.com/localstack/awscli-local.git
 1277* sudo git clone https://github.com/localstack/awscli-local.git
 1278* cd awscli-local
 1279* ls
 1280* sudo python2 setup.py
 1281* sudo python3 setup.py
 1282* sudo pip install awscli-local[ver1]
 1283* pip3 install awscli-local
 1284* sudo pip3 install awscli-local
 1285* history
 1286* clear
 1287* sudo pip3 install awscli-local
 1288* cat ~/.config/pip/pip.conf
 1289* sudo python3 setup.py
 1290* pip3 install setuptools import setup
 1291* pip3 install setuptools import setup --break-system-packages
 1292* pip3 install setuptools --break-system-packages
 1293* pip install setuptools --break-system-packages
 1294* sudo pip3 install setuptools --break-system-packages
 1295* sudo pip install awscli-local
 1296* sudo pip install awscli-local --break-system-packages
 1297* sudo pip3 install awscli-local --break-system-packages
 1298* awscli
 1299* awslocal
 1300* localstack start
 1301* docekr ps -a
 1302* docker ps -a
 1303* docker start localstack/localstack
 1304* docker start 17a3d9864b32
 1305* localstack start
 1306* cd ..
 1307* ls
 1308* git clone git@github.com:badtuxx/terraform-101.git
 1309* sudo git clone git@github.com:badtuxx/terraform-101.git
 1310* sudo su
 1311* ls
 1312* sudo su
 1313* exit
 1314* sudo su
 1315* exit
 1316* sudo localstack stop
 1317* docker ps
 1318* docker stop gitlab
 1319* exit
 1320* sudo apt update
 1321* sudo apt upgrade
 1322* clear
 1323* cd Documentos/Cursos/CI_CD/localstack/localstack
 1324* sudo vim docker-compose.yml
 1325* docker ps -a
 1326* localstack start
 1327* docker ps -a
 1328* ping 10.20.241.84\n: 1728350245:0;ping 172.17.0.3
 1329* ping 172.17.0.4
 1330* clear
 1331* curl -s http://localhost:4566/_localstack/info
 1332* localstack stop
 1333* docker ps -a
 1334* sudo vi docker-compose
 1335* sudo vi docker-compose.yml
 1336* clear
 1337* exit
 1338* ifocnfig
 1339* clear
 1340* ifconfig
 1341* docker ps -a
 1342* docker start 6089f9c660be
 1343* docker ps -a
 1344* sudo su
 1345* sudo wget --content-disposition https://www.noip.com/download/linux/latest
 1346* tar xf noip-duc_3.3.0.tar.gz\n: 1728950241:0;cd noip-duc_3.3.0
 1347* cd binaries
 1348* ./noip-duc_3.3.0_amd64.deb
 1349* sudo ./noip-duc_3.3.0_amd64.deb
 1350* sudo dpkg -i noip-duc_3.3.0_amd64.deb
 1351* ls
 1352* noip-duc --help
 1353* noip-duc -g all.ddnskey.com --username tk4m2n3 --password drNvbxXDFtUV
 1354* sudo noip-duc
 1355* systemctl status ssh
 1356* vim /etc/ssh/sshd_config
 1357* ls 
 1358* ls Documentos
 1359* ls /root
 1360* ls
 1361* ls Downloads
 1362* ls 
 1363* pwd
 1364* ls .ssh
 1365* cd Downloads
 1366* ls
 1367* scp -i carlosleosouza-ubuntu-testes-azure.pem ~/.ssh/id_ed25519.pub carlosleosouza@ubuntu-testes-carlosleosouza.brazilsouth.cloudapp.azure.com:/home/carlosleosouza
 1368* chmod 0664 carlosleosouza-ubuntu-testes-azure.pem'
 1369* chmod 0664 carlosleosouza-ubuntu-testes-azure.pem
 1370* scp -i carlosleosouza-ubuntu-testes-azure.pem ~/.ssh/id_ed25519.pub carlosleosouza@ubuntu-testes-carlosleosouza.brazilsouth.cloudapp.azure.com:/home/carlosleosouza
 1371* chmod 600 carlosleosouza-ubuntu-testes-azure.pem
 1372* scp -i carlosleosouza-ubuntu-testes-azure.pem ~/.ssh/id_ed25519.pub carlosleosouza@ubuntu-testes-carlosleosouza.brazilsouth.cloudapp.azure.com:/home/carlosleosouza
 1373* noip-duc -g all.ddnskey.com --username tk4m2n3 --password drNvbxXDFtUV
 1374* clear
 1375* noip-duc -g all.ddnskey.com --username tk4m2n3 --password drNvbxXDFtUV --ip-method dns
 1376* cat /etc/no-ip2.conf
 1377* sudo apt upgrade
 1378* sudo dist-upgrade
 1379* sudo distupgrade
 1380* sudo apt dist-upgrade
 1381* sudo apt distupgrade
 1382* clear
 1383* sudo su
 1384* ls
 1385* docker ps -a
 1386* localstack start
 1387* rm -f /tmp/localstack-cli/localstack-main_container.log
 1388* localstack start
 1389* docker ps -a
 1390* localstack stop
 1391* localstack start
 1392* localstack stop
 1393* vim docker-compose.yml
 1394* ls
 1395* sudo su
 1396* docker start gitlab
 1397* ls
 1398* ls .ssh
 1399* ssh-keygen -t rsa
 1400* ssh-copy-id carlos-leonardo@leo-vostro.ddns.net
 1401* l
 1402* ls .ssh
 1403* ssh-copy-id carlos-leonardo@leo-vostro.ddns.net
 1404* sudo su
 1405* clear
 1406* ls
 1407* scp -i carlosleosouza-ubuntu-testes-azure.pem ~/.ssh/id_rsa.pub carlosleosouza@ubuntu-testes-carlosleosouza.brazilsouth.cloudapp.azure.com:/home/carlosleosouza
 1408* scp ~/.ssh/id_rsa.pub carlosleosouza@ubuntu-testes-carlosleosouza.brazilsouth.cloudapp.azure.com:/home/carlosleosouza/ -i Downloads/carlosleosouza-ubuntu-testes-azure.pem
 1409* scp -i carlosleosouza-ubuntu-testes-azure.pem ~/.ssh/id_rsa.pub carlosleosouza@ubuntu-testes-carlosleosouza.brazilsouth.cloudapp.azure.com:/home/carlosleosouza
 1410* scp -i Downloads/carlosleosouza-ubuntu-testes-azure.pem ~/.ssh/id_rsa.pub carlosleosouza@ubuntu-testes-carlosleosouza.brazilsouth.cloudapp.azure.com:/home/carlosleosouza
 1411* systemctl status openssh-server
 1412* systemctl status openssh
 1413* systemctl status openssh-server
 1414* vim /etc/ssh/sshd_config
 1415* sudo vim /etc/ssh/sshd_config
 1416* systemctl status ssh
 1417* sudo systemctl restart ssh
 1418* sudo apt-get install -y ngrok\n: 1729362459:0;sudo su
 1419* docker ps -a
 1420* vim docker-compose.yml
 1421* cd Cursos/CI_CD
 1422* cd Documentos/Cursos/CI_CD
 1423* cd Gitlab
 1424* ls
 1425* vim docker-compose.yml
 1426* vim /etc/resolv.conf
 1427* vim /etc/hosts
 1428* sudo vim /etc/hosts
 1429* hostname
 1430* sudo vim /etc/hosts
 1431* docker-compose up -d --force-recreate
 1432* ping Ubuntu-Azure-testes
 1433* docker ps -a
 1434* docker-compose up -d --force-recreate
 1435* docker compose up -d --force-recreate
 1436* sudo su
 1437* exit
 1438* sudo su
 1439* sudo apt update
 1440* cd etc/apt/sources.list.d/
 1441* cd /etc/apt/sources.list.d/
 1442* ls
 1443* rm -f openvpn3.list
 1444* sudo rm -f openvpn3.list
 1445* sudo rm -f checkra1n.list
 1446* dpkg --list mongo
 1447* dpkg --help
 1448* dpkg --l mongo*
 1449* dpkg --list mongo*
 1450* dpkg --list docker*
 1451* dpkg -S mongo*
 1452* sudo spt update
 1453* sudo apt update
 1454* sudo apt upgrade
 1455* \nsudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'\nwget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo tee /etc/apt/trusted.gpg.d/pgdg.asc &>/dev/null\nsudo apt update\nsudo apt-get -y install postgresql postgresql-contrib\nsudo systemctl enable postgresql
 1456* sudo passwd postgres
 1457* su - postgres
 1458* update-alternatives --config java\n: 1729674758:0;sudo bash\napt install -y wget apt-transport-https\nmkdir -p /etc/apt/keyrings\nwget -O - https://packages.adoptium.net/artifactory/api/gpg/key/public | tee /etc/apt/keyrings/adoptium.asc\necho "deb [signed-by=/etc/apt/keyrings/adoptium.asc] https://packages.adoptium.net/artifactory/deb $(awk -F= '/^VERSION_CODENAME/{print$2}' /etc/os-release) main" | tee /etc/apt/sources.list.d/adoptium.list\napt update\napt install temurin-17-jdk\nupdate-alternatives --config java\n/usr/bin/java --version\nexit
 1459* sudo su
 1460* exit
 1461* sudo su
 1462* exit
 1463* sudo visudo
 1464* sudo su
 1465* sudo visudo
 1466* sudo vim /etc/sudoers
 1467* sudo -v
 1468* exit
 1469* sudo -v
 1470* sudo vim /etc/sudoers
 1471* sudo -v
 1472* sudo su
 1473* docker start gitlab
 1474* ls
 1475* cd Documentos/Cursos/CI_CD/Gitlab
 1476* ls
 1477* cd gitlab-project
 1478* ls
 1479* cd ..
 1480* cd GitLab-Project-Code
 1481* ls
 1482* sudo su
 1483* sudo -
 1484* sudo --help
 1485* clear
 1486* sudo su
 1487* ls
 1488* cd gitlab-project
 1489* ls
 1490* cp Sonar-Installation ../GitLab-Project-Code
 1491* cd ..
 1492* sudo apt update
 1493* sudo apt install nodejs
 1494* node -v
 1495* sudo apt install npm
 1496* docker ps
 1497* clear
 1498* cd Documentos/Cursos/CI_CD/Gitlab
 1499* ls
 1500* ls pipeline
 1501* ls pipeline/gitlab-cicd-app-base
 1502* mkdir pipeline-tutorial
 1503* cd pipeline-tutorial
 1504* ls
 1505* cd ..
 1506* ls
 1507* cd ..
 1508* ls
 1509* cd ..
 1510* ls 
 1511* cd Cursos/CI_CD/Gitlab
 1512* ls
 1513* mkdir projects
 1514* cd prokects
 1515* cd projects
 1516* ls
 1517* git clone http://leo-vostro:8929/root/pipeline-tutorial.git
 1518* ls
 1519* cd pipeline-tutorial
 1520* ls
 1521* npm init docusaurus
 1522* mv website/* .
 1523* ls
 1524* rm -r website
 1525* \tvim docusaurus.config.js
 1526* git add .
 1527* git commit -m "Add simple generated Docusaurus site"\n: 1729992687:0;git config --global user.email "carlosleosouza@gmail.com"
 1528* git config --global user.name "Carlos Leonardo"
 1529* git commit -m "Add simple generated Docusaurus site"\n: 1729992715:0;git push origin
 1530* gitlab-runner register  --url http://leo-vostro:8929  --token glrt-y6tqmTX9zmwuYcNmy2p9
 1531* gitlab-runner restart
 1532* gitlab-runner run
 1533* sudo su
 1534* ifconfig
 1535* vim docusaurus.config.js
 1536* git commit -m "Altera
 1537* o 1 no dicusaurus.config.js"\n: 1729994096:0;git add .
 1538* git commit -a
 1539* git push origin
 1540* git add .
 1541* git commit -m "Altera
 1542* o 1 no file dicusaurus.config.js"\n: 1729994224:0;git push origin main
 1543* git pull
 1544* git pull origin main
 1545* git fetch --all
 1546* git config pull.rebase false
 1547* git pull --no-rebase
 1548* git push origin main
 1549* clear
 1550* vim docusaurus.config.js
 1551* git add .
 1552* git commit -a
 1553* vim docusaurus.config.js
 1554* git add .
 1555* git commit -a
 1556* git push origin main
 1557* ssh-keygen -t rsa -b 4096 -C "carlosleosouza@leo-vostro"\n: 1729994744:0;ls ~/.ssh
 1558* ls
 1559* mv id_gitlab* ~/.ssh
 1560* ls
 1561* cd ~/.ssh
 1562* eval "$(ssh-agent -s)"
 1563* ssh-add ~/.ssh/id_gitlab
 1564* cat id_gitlab.pub
 1565* cd -
 1566* ls
 1567* git remote set-url origin http://127.0.0.1:8929/root/pipeline-tutorial.git
 1568* docker start gitlab
 1569* gitlab-runner status
 1570* gitlab-runner run
 1571* sudo su
 1572* ping leo-vostro
 1573* sudo vim /etc/hosts
 1574* cat /etc/resolv.conf
 1575* sudo vim /etc/resolv.conf
 1576* cat /etc/resolv.conf
 1577* ping leo-vostro
 1578* curl http://leo-vostro:8929/root/pipeline-tutorial.git/
 1579* cd Documentos/Cursos/CI_CD/Gitlab/projects
 1580* ls
 1581* cd pipeline-tutorial
 1582* cd .git
 1583* ls
 1584* vim config
 1585* gitlab-runner cache-clear
 1586* gitlab-runner
 1587* cd ..
 1588* clear
 1589* histr | grep git
 1590* hist | grep git
 1591* history | grep git
 1592* git remote set-url origin http://172.17.0.1:8929/root/pipeline-tutorial.git
 1593* clear
 1594* ls
 1595* grep -Ri leo-vostro
 1596* gitlab-runner register  --url http://leo-vostro:8929  --token glrt-V-Hhz3YMJSTeXpdmFMfC
 1597* gitlab-runner list
 1598* cat /home/gitlab-runer/.gitlab-runner/config.toml
 1599* cat /home/gitlab-runner/.gitlab-runner/config.toml
 1600* sudo cat /home/gitlab-runner/.gitlab-runner/config.toml
 1601* locate config.toml
 1602* ls /etc/gitlab-runner
 1603* sudo ls /etc/gitlab-runner
 1604* sudo vim /etc/gitlab-runner/config.toml
 1605* sudo su
 1606* ls
 1607* clear
 1608* ls
 1609* cd terraform-course
 1610* ls
 1611* terraform init
 1612* terraform plan
 1613* terraform apply
 1614* git commit -a
 1615* cd ..
 1616* ls
 1617* git commit -a
 1618* ls .git
 1619* git add .
 1620* git commit -a
 1621* ls
 1622* git add .
 1623* git commit -a
 1624* ls
 1625* chmod -R u+rwX .git
 1626* sudo chmod -R u+rwX .git
 1627* sudo su
 1628* cd ..
 1629* git clone https://gitlab.com/fbiopereira/gitlab-pipeline-movies-api.git
 1630* ls
 1631* sudo su
 1632* sudo apt update -y
 1633* sudo apt dist-upgrade -y
 1634* apt --fix-broken install
 1635* sudo apt --fix-broken install
 1636* sudo apt dist-upgrade -y
 1637* dpkg --list | grep linux-image
 1638* sudo update-grub
 1639* uname -r
 1640* sudo su
 1641* exit
 1642* sudo su
 1643* minikube start
 1644* kubectl get nodes
 1645* minikube --help
 1646* minikube addons
 1647* minikube addons list
 1648* minikube status
 1649* minikube start --nodes 2
 1650* kubectl get nodes
 1651* clear
 1652* kubectl get nodes
 1653* minikube cluster
 1654* minikube --help
 1655* minikube config
 1656* minikube config view
 1657* minikube options
 1658* minikube config
 1659* clear
 1660* apt install k3d
 1661* sudo apt install k3d
 1662* sudo minikube stop
 1663* minikube stop
 1664* minikube start --nodes 2 -p multinode
 1665* minikube start --help
 1666* minikube delete --all
 1667* minikube status
 1668* docker ps -a
 1669* docker rm --force e166aa0b4c74
 1670* docker rm --force 68ad0e56d267
 1671* docker ps -a
 1672* which minikube
 1673* dpkg -l | minikube
 1674* dpkg -l | grep minikube
 1675* sudo dpkg --purge minikube
 1676* wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash
 1677* k3d --help
 1678* k3d cluster create meu-cluster --servers 3 --agents 3
 1679* ls
 1680* cd Documentos/Cursos/Devops
 1681* ls
 1682* cd Desafios
 1683* ls
 1684* cd conversao-distancia
 1685* ls
 1686* mkdir k8s
 1687* sudo mkdir k8s
 1688* sudo -
 1689* sudo -a
 1690* sudo --help
 1691* sudo -u
 1692* sudo --
 1693* sudo -n
 1694* sudo su
 1695* cd k8s
 1696* ls
 1697* history
 1698* history | grep k3d
 1699* k3d delete cluster meu-cluster
 1700* k3d delete
 1701* k3d --help
 1702* k3d cluster delete meu-cluster
 1703* k3d cluster create meu-cluster --servers 1 --agents 2
 1704* ls
 1705* kubectl create -f deployment.yaml
 1706* kubectl get pods
 1707* clear
 1708* kubectl get pods
 1709* docker ps -a
 1710* docker image ls
 1711* kubectl port-forward conversaodistancia-6dc996c488-5m78h 8080:5000
 1712* kubectl apply -f deployment.yaml
 1713* kubectl get all
 1714* kubectl logs -f conversaodistancia-6dc996c488-m44vl
 1715* docker ps -a
 1716* kubectl get pods
 1717* clear
 1718* kubectl get all
 1719* cat service.yaml
 1720* kubectl get pods
 1721* vim service.yaml
 1722* sudo apt upgrade
 1723* git config --list
 1724* gcf
 1725* clear
 1726* git config --global core.editor vscode
 1727* g
 1728* git config --global core.editor --help
 1729* git config --global core.editor 
 1730* git config --global core.editor .code
 1731* git config --global core.editor vscode
 1732* gcf
 1733* git config --global init.defaultBranch main
 1734* gcf
 1735* clear
 1736* pwd
 1737* mkdir repo
 1738* cd repo
 1739* git init
 1740* touch arquivo.txt
 1741* git status
 1742* git add arquivo.txt
 1743* git status
 1744* git reset
 1745* git status
 1746* git add .
 1747* git status
 1748* git commit
 1749* git commit -a
 1750* git commit -m "Primeiro commit"
 1751* g
 1752* clear
 1753* git status
 1754* vim arquivo.txt
 1755* git status
 1756* git add .
 1757* git commit -m "Segundo commit"
 1758* git status
 1759* git log
 1760* git log -p arquivo.txt
 1761* git config --global core.editor code
 1762* clear
 1763* ls
 1764* cat arquivo.txt
 1765* git status
 1766* clear
 1767* git branch feature/novo_arquivo
 1768* git branch
 1769* git branch --list
 1770* git checkout feature/novo_arquivo
 1771* git branch
 1772* clear
 1773* echo "teste" >> arquivo.tx
 1774* echo "teste" >> arquivo.txt
 1775* ls
 1776* rm -f arquivo.tx
 1777* git checkout main
 1778* ls
 1779* git checkout feature/novo_arquivo
 1780* cat arquivo.txt
 1781* echo "git feature" >> arquivo.txt
 1782* git commit -m "Commit na nova branch"
 1783* git add .
 1784* git commit -m "Commit na nova branch"
 1785* git checkout main
 1786* cat arquivo.txt
 1787* git status
 1788* git checkout feature/novo_arquivo
 1789* git status
 1790* git branch -m feature_novo_arquivo_texto
 1791* git checkout main
 1792* git branch
 1793* git branch -d feature_novo_arquivo_texto
 1794* git branch -D feature_novo_arquivo_texto
 1795* git branch
 1796* clear
 1797* git checkout -b feature/arquivo_xpto
 1798* git branch
 1799* echo "branch feature/arquivo_xpto" >> arquivo_xpto.txt
 1800* git add .
 1801* git commit -m "Adicionando arquivo_xpto.txt"
 1802* git log
 1803* git status
 1804* git checkout main
 1805* echo "testetetststst" >> arquivo.txt
 1806* git add .
 1807* git commit -m "Adicionando linha ao arquivo.txt"
 1808* git status
 1809* git log
 1810* git checkout feature/arquivo_xpto
 1811* git log
 1812* clear
 1813* git checkout main
 1814* git merge
 1815* git merge feature/arquivo_xpto
 1816* ls
 1817* code .
 1818* git log
 1819* git branch
 1820* git checkout -b feature/arquivo_rebase
 1821* echo "Adicionando o arquivo_rebase.txt" >> rebase.txt
 1822* git status
 1823* git add .
 1824* git commit -m "Adicionando arquivo rebase.txt"
 1825* git log
 1826* git checkout main
 1827* clear
 1828* echo "Adicionando o arquivo main.txt" >> main.txt
 1829* git status
 1830* git add .
 1831* gti commit -m "Adicionando o arquivo main.txt"
 1832* git commit -m "Adicionando o arquivo main.txt"
 1833* git status
 1834* git log
 1835* clear
 1836* git checkout feature/arquivo_rebase
 1837* ls
 1838* echo "Nova linha no arquivo rebase.txt" >> rebase.txt
 1839* cat rebase.txt
 1840* git add .
 1841* git commit -m "Adicionando nova linha rebase.txt"
 1842* git statis
 1843* git status
 1844* git log
 1845* git checkout main
 1846* ls
 1847* git rebase feature/arquivo_rebase
 1848* ls
 1849* git log
 1850* clear
 1851* git branch -d feature/arquivo_rebase
 1852* git log
 1853* ls
 1854* git log
 1855* git branch -b feature/arquivo_novo
 1856* clear
 1857* git checkout -b feature/arquivo_novo
 1858* echo "Arquivo novo" >> novo_arquivo.txt
 1859* ls
 1860* git add .
 1861* git commit -m "Adicionando novo arquivo txt"
 1862* clear
 1863* git branch
 1864* git checkout main
 1865* ls
 1866* git checkout -b hotfix
 1867* git branch
 1868* echo "Arquivo corre
 1869* o" >> hotfix.txt
 1870* ls
 1871* cat hotfix.txt
 1872* git add .
 1873* git commit -m "Adicionando arquivo corre
 1874* git status
 1875* git log
 1876* clear
 1877* git status
 1878* gti log
 1879* clear
 1880* git log
 1881* git branch
 1882* git status
 1883* git log
 1884* clear
 1885* git branch
 1886* git checkout arquivo_novo
 1887* git branch
 1888* git checkout feature/arquivo_novo
 1889* git cherry-pick 335d20c78c9cbf7dd1a4b549aecbe9d4aee0ab93
 1890* ls
 1891* git log
 1892* sudo su
 1893* ls
 1894* cd repo
 1895* git branch
 1896* code .
 1897* cd ~/
 1898* cd Downloads
 1899* sudo dpkg -i code_1.95.3-1731513102_amd64.deb
 1900* cd -
 1901* clear
 1902* cd ~
 1903* cd repo
 1904* ls
 1905* code .
 1906* git checkout main
 1907* git branch
 1908* git branch -d feature/nova_branch_arquivo_texto
 1909* git branch -D feature/nova_branch_arquivo_texto
 1910* git branch
 1911* clear
 1912* git checkout -b feature/arquivo_xpto2
 1913* git branch
 1914* echo "Branch feature/arquivo_xpto2" >> arquivo_xpto2.txt
 1915* ls
 1916* git add .
 1917* git commit -m "Adicionando arquivo_xpto2.txt"
 1918* clear
 1919* git log
 1920* git checkout main
 1921* l
 1922* echo "Foi criado o arquivo_xpto2.txt na Branch feature/arquivo_xpto2" >> arquivo.txt
 1923* cat arquivo.txt
 1924* git status
 1925* git commit -m "Adicionando linha no arquivo.txt na Branch main"
 1926* git add .
 1927* git commit -m "Adicionando linha no arquivo.txt na Branch main"
 1928* git log
 1929* clear
 1930* git checkout feature/arquivo_xpto2
 1931* git log
 1932* git checkout main
 1933* git merge feature/arquivo_xpto2
 1934* ls
 1935* cat arquivo_xpto2.txt
 1936* git log
 1937* clear
 1938* git branch -d feature/arquivo_xpto2
 1939* git log
 1940* git checkout -b feature/arquivo_rebase2
 1941* ls
 1942* git log
 1943* echo "Foi criada a Branch feature/arquivo_rebase2 e o arquivo_rebase2.txt" >> arquivo_rebase2.txt
 1944* git status
 1945* git add .
 1946* git commit -m "Foi criada a Branch feature/arquivo_rebase2 e o arquivo_rebase2.txt"
 1947* git status
 1948* git log
 1949* clear
 1950* git checkout main
 1951* echo "Adicionando arquivo main2.txt" >> main2.txt
 1952* ls
 1953* git status
 1954* git add .
 1955* git commit -m "Adicionando arquivo main2.txt"
 1956* git status
 1957* git log
 1958* clear
 1959* git branches
 1960* git branch
 1961* git checkout feature/arquivo_rebase2
 1962* ls
 1963* echo "Adicionando nova linha no arquivo rebase2.txt" >> rebase2.txt
 1964* cat rebase2.txt
 1965* git add .
 1966* git commit -m "Adicionando nova linha no arquivo rebase2.txt"
 1967* ls
 1968* cat main2.txt
 1969* cat rebase2.txt
 1970* git checkout main
 1971* ls
 1972* git branch
 1973* git rebase feature/arquivo_rebase2
 1974* ls
 1975* cat rebase2.txt
 1976* clear
 1977* git log
 1978* clear
 1979* git branch
 1980* git branch -d feature/arquivo_rebase
 1981* git branch -d feature/arquivo_rebase2
 1982* git branch
 1983* git branch -d feature/arquivo_xpto2
 1984* git branch
 1985* git branch -d feature/arquivo_xpto
 1986* git branch
 1987* git log
 1988* clear
 1989* git checkout -b feature/arquivo_novo2
 1990* echo "Arquivo novo 2" >> arquivo_novo2.txt
 1991* ls
 1992* git add .
 1993* git commit -m "Adicionando novo arquivo_novo2.txt"
 1994* clear
 1995* git status
 1996* git branch
 1997* git checkout main
 1998* l
 1999* git checkout hotfix
 2000* ls
 2001* cat hotfix.txt
 2002* echo "Arquivo corre
 2003* o arquivo_novo2 que t
 2004*  na branch feature/arquiov_novo2" >> hotfix.txt
 2005* cat hotfix.txt
 2006* git add .
 2007* git commit -m "Adicionando corre
 2008* o no hotfix.txt da branch hotfix para arquivo_novo2.txt que est
 2009*  na branch feature/arquivo_novo2"
 2010* git log
 2011* git branch
 2012* git checkout arquivo_novo2
 2013* git checkout feature/arquivo_novo2
 2014* git cherry-pick 47cd4010a7d1e3cdfa08cd69bd0bc8965de2c418 
 2015* ls
 2016* cat hotfix.txt
 2017* git cherry-pick --continue
 2018* git add .
 2019* git commit -a
 2020* ls
 2021* cat hotfix.txt
 2022* git log
 2023* clear
 2024* git tag
 2025* git checkout main
 2026* clear
 2027* git log
 2028* git tag -a v2.0 -m "Vers
 2029* o 2.0"
 2030* git log
 2031* git tag -a v1.0 -m "Vers
 2032* o 1.0" 051877bf13ae3327a18a532709fe83de1ec8ee44
 2033* git tag
 2034* git show v2.0
 2035* git log
 2036* ls ~/.ssh
 2037* cat ~/.ssh/id_gitlab.pub
 2038* clear
 2039* git remote add origin git@github.com:carlosleosouza/devopsprocarlosleosouza.git\ngit branch -M main\ngit push -u origin main
 2040* ls
 2041* cd ..
 2042* ls
 2043* rm -rf repo
 2044* sudo rm -rf repo
 2045* git clone https://github.com/carlosleosouza/devopsprocarlosleosouza.git
 2046* ls
 2047* cd devopsprocarlosleosouza
 2048* ls
 2049* git checkout -b novabranch
 2050* gcb
 2051* git branch
 2052* git log
 2053* echo "Nova linha repo remoto" >> main.txt
 2054* git status
 2055* git add .
 2056* git commit -a
 2057* git log
 2058* git commit -m "Nova linha repo remota"
 2059* git push
 2060* git push --set-upstream origin novabranch
 2061* git log
 2062* cat main2.txt
 2063* cat main.txt
 2064* clear
 2065* git branch main
 2066* git checkout main
 2067* git log
 2068* cat main.txt
 2069* git pull
 2070* cat main.txt
 2071* git merge novabranch
 2072* git push
 2073* vim main.txt
 2074* git merge novabranch
 2075* git add .
 2076* git commit -m "Nova linha repo local"
 2077* git add .
 2078* git merge novabranch
 2079* git push
 2080* echo "Nova linha no arquivo main.txt" >> main.txt
 2081* ls
 2082* cat main.txt
 2083* git commit -m "Nova linha no main.txt"
 2084* git push
 2085* git pull
 2086* git push
 2087* cat arquivo.txt
 2088* git pull
 2089* cat arquivo.txt
 2090* git branch
 2091* cat arquivo.txt
 2092* echo "Linha adicionada reposit
 2093* rio local main.txt" >> main.txt
 2094* git commit -a -m "Nova linha no main.txt repo local"
 2095* git status
 2096* git log
 2097* cat arquivo.txt
 2098* clear
 2099* git push
 2100* git pull
 2101* git config pull.rebase false
 2102* clear
 2103* git pull
 2104* git log
 2105* git push
 2106* cat arquivo
 2107* cat arquivo.txt
 2108* echo "Estou trabalhando local neste arquivo" >> main2.txt
 2109* cat main2.txt
 2110* git add .
 2111* git commit -a -m "Altera
 2112* o local"
 2113* git pull
 2114* code .
 2115* git add .
 2116* git commit -a -m "Merge resolvendo conflito"
 2117* git log
 2118* git push
 2119* echo "Nova altera
 2120* o local no main2.txt" >> main2.txt
 2121* git commit -a -m "Nova altera
 2122* o fetch"
 2123* git fetch origin
 2124* cat main2.txt
 2125* git branch
 2126* git branch -r
 2127* git checkout origin/main
 2128* git fetch origin/main
 2129* cat main2.txt
 2130* git diff main origin/main
 2131* git checkout main
 2132* git merge origin/main
 2133* code .
 2134* git commit -a -m "Novo merge local e remoto"
 2135* git push
 2136* cat main2.txt
 2137* clear
 2138* git log stat
 2139* git log --stat
 2140* git log --oneline
 2141* git log -p
 2142* git log --graph
 2143* git log --graph --oneline
 2144* git log --help
 2145* sudo apt update -y
 2146* sudo apt upgrade -y
 2147* reboot
 2148* unshare
 2149* unshare --pid --fork --mount-proc /bin/bash
 2150* sudo unshare --pid --fork --mount-proc /bin/bash
 2151* ps -ef --forest
 2152* ls
 2153* pwd
 2154* mkdir container
 2155* cd container
 2156* chroot .
 2157* sudo chroot .
 2158* l
 2159* sudo apt update && sudo apt install debootstrap
 2160* uname -a
 2161* cat /etc/os-release
 2162* sudo debootstrap noble .
 2163* ls
 2164* clear
 2165* ls
 2166* sudo chroot .
 2167* sudo su
 2168* ls
 2169* ls home
 2170* ps
 2171* sudo unshare --pid --fork --mount-proc chroot . /bin/bash
 2172* ps -aux
 2173* ps -ef --forest
 2174* clear
 2175* htop
 2176* apt install htop -y
 2177* sudo apt install htop -y
 2178* htop
 2179* cd ..
 2180* ls
 2181* ls /sys/fs/cgroup
 2182* cat /sys/fs/cgroup/cpu.pressure
 2183* sudo su
 2184* cd ..
 2185* rm -rf container
 2186* sudo rm -rf container
 2187* sudo rm -rf /sys/fs/cgroup/auladocker
 2188* chroot --help
 2189* history
 2190* sudo unshare --help
 2191* mount
 2192* umount /home/carlos-leonardo/container/proc
 2193* sudo umount /home/carlos-leonardo/container/proc
 2194* pwd
 2195* ls
 2196* rm -rf container
 2197* clear
 2198* sudo su
 2199* sudo apt upgrade -y
 2200* sudo apt update
 2201* sudo apt dist-upgrade -y
 2202* exit
 2203* curl -f http://localhost/ || exit 1
 2204* docker ps
 2205* k3s
 2206* history
 2207* k3d
 2208* k3s cluster
 2209* k3d cluster
 2210* k3d cluster list
 2211* k3d cluster delete meu-cluster
 2212* k3d stop
 2213* k3d cluster stop
 2214* clear
 2215* k3d
 2216* history
 2217* k3d
 2218* docker ps
 2219* docker ps -a
 2220* clear
 2221* exit
 2222* ls
 2223* sudo su
 2224* @R@
 2225* sudo su
 2226* exit
 2227* sudo su
 2228* cd Documentos/PUCMINAS/app-helloworld-aws
 2229* ls
 2230* code .
 2231* cat ~/.aws/config
 2232* clear
 2233* aws
 2234* aws help
 2235* aws config
 2236* aws configure
 2237* cat ~/.aws/config
 2238* clear
 2239* cat ~/.aws/credentials
 2240* ls
 2241* ls -lt terraform
 2242* ls -lt
 2243* cd ..
 2244* ls
 2245* ls -lt
 2246* chown -R carlos-leonardo carlos-leonardo
 2247* chown -R * carlos-leonardo:carlos-leonardo
 2248* sudo chown -R * carlos-leonardo:carlos-leonardo
 2249* chown
 2250* chown --help
 2251* sudo chown -R carlos-leonardo:carlos-leonardo *
 2252* ls -lt
 2253* clear
 2254* cat ~/.aws/credentials
 2255* cat ~/.aws/config
 2256* ls
 2257* cd app-helloworld-aws
 2258* ls
 2259* cd terraform
 2260* ls
 2261* terraform init
 2262* terraform plan
 2263* terraform validate
 2264* terraform plan
 2265* aws login
 2266* clear
 2267* terraform init
 2268* terraform plan
 2269* aws sts get-caller-identity --profile default
 2270* cat ~/.aws/credentials
 2271* vim ~/.aws/credentials
 2272* aws sts get-caller-identity --profile default
 2273* clear
 2274* terraform init
 2275* terraform plan
 2276* terraform plan tfplan
 2277* terraform plan -out tfplan
 2278* terraform apply tfplan
 2279* terraform plan destroy -out tfplan
 2280* terraform plan -destroy -out tfplan
 2281* terraform apply tfplan
 2282* cd Documentos/PUCMINAS
 2283* git clone https://github.com/kledsonhugo/app-staticsite-storage-aws
 2284* cd app-staticsite-storage-aws
 2285* ls
 2286* ls terraform
 2287* sudo apt-get install inxi
 2288* \tinxi -b
 2289* sudo apt-get install bluetooth
 2290* sudo apt install blueman
 2291* sudo apt update
 2292* sudo apt upgrade
 2293* sudo apt dist-upgrade
 2294* cd Documentos/PUCMINAS
 2295* git clone https://github.com/kledsonhugo/app-dynamicsite-lb-aws-modules.git
 2296* curl -v mpce.mp.br
 2297* curl -Lkv mpce.mp.br
 2298* exit
 2299* cd Documentos/Cursos
 2300* ls
 2301* mkdir Devops\ Pro
 2302* ls
 2303* cd Devops\ Pro
 2304* ls
 2305* mkdir Projetos
 2306* cd Projetos
 2307* git clone https://github.com/KubeDev/kube-news
 2308* code .
 2309* sudo apt dist-upgrade
 2310* sudo su
 2311* cd Documentos/Cursos
 2312* ls
 2313* cd Scripting
 2314* ls
 2315* cd CursoShellScript
 2316* ls
 2317* cd Exercicios
 2318* ls
 2319* vim PrimeiroScript.sh
 2320* ls
 2321* clear]
 2322* ls
 2323* clear
 2324* ls
 2325* cat soma.sh
 2326* cat SomaValores.sh
 2327* cat RelatorioMaquina.sh
 2328* cat /proc/cpuinfo |grep "model name"|wc -l
 2329* cat /proc/cpuinfo |grep "model name"|head -n1
 2330* cat /proc/cpuinfo |grep "model name"|head -n1|cut -c14-
 2331* cat /proc/meminfo
 2332* cat /proc/meminfo | grep MemTotal
 2333* cat /proc/meminfo |grep MemTotal|tr -d ' '
 2334* cat /proc/meminfo |grep MemTotal|tr -d ' '|cut -d: -f2
 2335* cat /proc/meminfo |grep MemTotal|tr -d ' '|cut -d: -f2|tr -d kB
 2336* clear
 2337* ls
 2338* ./RelatorioMaquina.sh
 2339* clear
 2340* ls
 2341* cat ListaUsuarios.sh
 2342* clear
 2343* ls
 2344* cat RelatorioUsuario.sh
 2345* cd Documentos/Cursos
 2346* ls
 2347* cd Devops\ Pro
 2348* ls
 2349* cd Projetos
 2350* ls
 2351* cd kube-news
 2352* ls
 2353* code .
 2354* ls
 2355* cd src
 2356* ls
 2357* docker login
 2358* docker build -t carlosleosouza/kube-news:v1
 2359* docker build -t carlosleosouza/kube-news:v1 -f .
 2360* docker build -t carlosleosouza/kube-news:v1 .
 2361* docker image ls
 2362* docker push carlosleosouza/kube-news:v1
 2363* docker tag carlosleosouza/kube-news:v1 carlosleosouza/kube-news:latest
 2364* docker image ls
 2365* docker push carlosleosouza/kube-news:latest
 2366* docker network create kube-news
 2367* docker net ls
 2368* docker network ls
 2369* docker network inspect 73aca30a0ef5
 2370* ipa 
 2371* ip a
 2372* clear
 2373* ls
 2374* docker volume ls
 2375* docker volume create kubenews_volume
 2376* docker volume ls
 2377* docker run -d -p 5432:5432 --name kubenews_db -e POSTGRES_PASSWORD=kubenews -e POSTGRES_USER=kubenews -e POSTGRES_DB=kubenews
 2378* docker nwtwork ls
 2379* docker network ls
 2380* docker run -d -p 5432:5432 --name kubenews_db -e POSTGRES_PASSWORD=kubenews -e POSTGRES_USER=kubenews -e POSTGRES_DB=kubenews --network kube-news --mount type=volume,source=kubenews_volume,target=/var/lib/postgresql/data postgres:12.17\n: 1736810645:0;docker ps -a
 2381* ps aux | grep 5432
 2382* ps -ef | grep 5432
 2383* kill 55741
 2384* kill 24696
 2385* docker run -d -p 5432:5432 --name kubenews_db -e POSTGRES_PASSWORD=kubenews -e POSTGRES_USER=kubenews -e POSTGRES_DB=kubenews --network kube-news --mount type=volume,source=kubenews_volume,target=/var/lib/postgresql/data postgres:12.17\n: 1736810704:0;docke rps -a
 2386* clear
 2387* docker ps -a
 2388* docker start 109c1bbc1140
 2389* systemctl status postgre
 2390* systemctl --list-nits
 2391* systemctl --list-units
 2392* systemctl list-units
 2393* systemctl stop postgresql
 2394* systemctl stop postgresql@17-main
 2395* ps -ef | grep postgre
 2396* systemctl status postgresql
 2397* systemctl status postgresql@17-main
 2398* systemctl stop postgresql@17-main
 2399* sudo systemctl stop postgresql@17-main
 2400* sudo systemctl stop postgresql
 2401* sudo systemctl stop postgresql@17-main
 2402* sudo systemctl status postgresql@17-main
 2403* docker run -d -p 5432:5432 --name kubenews_db -e POSTGRES_PASSWORD=kubenews -e POSTGRES_USER=kubenews -e POSTGRES_DB=kubenews --network kube-news --mount type=volume,source=kubenews_volume,target=/var/lib/postgresql/data postgres:12.17\n: 1736810947:0;dpkg -l 
 2404* dpkg -l | grep postgre
 2405* dpkg --remove postgre*
 2406* dpkg --purge postgre*
 2407* dpkg --purge postgresql*
 2408* dpkg --purge postgresql
 2409* sudo dpkg --purge postgresql*
 2410* sudo dpkg --purge postgresql
 2411* sudo dpkg --list | grep postgresql
 2412* dpkg
 2413* dpkg --help
 2414* dpkg --help | more
 2415* dpkg -r postgre*
 2416* dpkg -r postgresql
 2417* sudo dpkg -r postgresql
 2418* sudo dpkg -l | grep postgresql
 2419* sudo dpkg -r postgresql-17
 2420* sudo dpkg --purge postgresql-17
 2421* apt remove postgresql
 2422* sudo apt remove postgresql
 2423* sudo apt remove postgresql-17
 2424* sudo dpkg -l | grep postgresql
 2425* sudo apt remove postgresql*
 2426* sudo apt remove postgresql-17
 2427* sudo apt remove postgresql-client-17
 2428* sudo apt remove postgresql-17
 2429* sudo apt remove postgresql-client-17
 2430* sudo apt remove postgresql-client-common
 2431* sudo apt remove postgresql-common
 2432* apt autoremove
 2433* sudo apt autoremove
 2434* sudo apt clean
 2435* sudo dpkg -l | grep postgresql
 2436* sudo dpkg --purge postgresql-17
 2437* sudo dpkg --purge postgresql-client-common
 2438* sudo dpkg --purge postgresql-common
 2439* dpgk --help
 2440* dpkg --help
 2441* sudo dpkg -l | grep postgresql
 2442* clear
 2443* docker run -d -p 5432:5432 --name kubenews_db -e POSTGRES_PASSWORD=kubenews -e POSTGRES_USER=kubenews -e POSTGRES_DB=kubenews --network kube-news --mount type=volume,source=kubenews_volume,target=/var/lib/postgresql/data postgres:12.17\n: 1736811448:0;docker rm 109c1bbc11
 2444* docker run -d -p 5432:5432 --name kubenews_db -e POSTGRES_PASSWORD=kubenews -e POSTGRES_USER=kubenews -e POSTGRES_DB=kubenews --network kube-news --mount type=volume,source=kubenews_volume,target=/var/lib/postgresql/data postgres:12.17\n: 1736811457:0;docker ps
 2445* clear
 2446* docker ps
 2447* dpkg -i ~/Downloads/dbeaver-ce_24.3.2_amd64.deb
 2448* sudo dpkg -i ~/Downloads/dbeaver-ce_24.3.2_amd64.deb
 2449* docker network ls
 2450* clear
 2451* docker run -d -p 8080:8080 -e DB_DATABASE=kubenews -e DB_USERNAME=kubenews -e DB_PASSWORD=kubenews -e DB_HOST=kubenews_db --network kube-news carlosleosouza/kube-news:latest 
 2452* docker ps
 2453* docker build -t carlosleosouza/kube-news:v2 .
 2454* docker tag carlosleosouza/kube-news:v2 carlosleosouza/kube-news:latest
 2455* docker push carlosleosouza/kube-news:latest
 2456* docker ps
 2457* docker rm 89a72d35af05
 2458* docker rm -f 89a72d35af05
 2459* docker run -d -p 8080:8080 -e DB_DATABASE=kubenews -e DB_USERNAME=kubenews -e DB_PASSWORD=kubenews -e DB_HOST=kubenews_db --network kube-news carlosleosouza/kube-news:latest 
 2460* sudo su
 2461* pwd
 2462* cd Documentos/Cursos/Docker
 2463* code .
 2464* cd ..
 2465* ls ltr
 2466* ls -ltr
 2467* chmod -R carlos-leonardo:carlos-leonardo .
 2468* chmod -R carlos-leonardo:carlos-leonardo Docker
 2469* chown -R carlos-leonardo:carlos-leonardo Docker
 2470* chown -R carlos-leonardo Docker
 2471* sudo chown -R carlos-leonardo Docker
 2472* ls -ltr
 2473* sudo chown -R carlos-leonardo:carlos-leonardo Docker
 2474* ls -ltr
 2475* cd app-nodejs
 2476* ls
 2477* clear
 2478* docker login
 2479* docker build -t carlosleosouza/app-nodejs:v1 .
 2480* docker image ls
 2481* clear
 2482* docker image ls
 2483* clear
 2484* sudo apt update -y
 2485* sudo apt upgrade -y
 2486* sudo apt dist-upgrade -y
 2487* clear
 2488* cd Documentos/Cursos/Docker
 2489* ls
 2490* cd app-nodejs
 2491* ls
 2492* docker image ls
 2493* docker run app-nodejs
 2494* docker run carlosleosouza/app-nodejs
 2495* docker run carlosleosouza/app-nodejs:v1
 2496* clear
 2497* docker image l
 2498* clear
 2499* docker image ls
 2500* ls
 2501* code .
 2502* docker build -t carlosleosouza/app-nodejs:v2 .
 2503* docker login
 2504* docker push carlosleosouza/app-nodejs:v2
 2505* docker image rm carlosleosouza/app-nodejs:v2
 2506* docker image ls
 2507* docker build -t carlosleosouza/app-nodejs:v2 .
 2508* docker image rm carlosleosouza/app-nodejs:v2
 2509* docker build -t carlosleosouza/app-nodejs:v2 .
 2510* docker tag carlosleosouza/app-nodejs:v2 carlosleosouza/app-nodejs:latest
 2511* docker image ls
 2512* docker run -p 3000:3000 carlosleosouza/app-nodejs
 2513* docker ps -a
 2514* docker rm 3aef38d40014 91d02a886afc 1e4c9af3df8d 294bb9c1af52 
 2515* docker rm -f 3aef38d40014 91d02a886afc 1e4c9af3df8d 294bb9c1af52 
 2516* docker rm
 2517* docker rm --help
 2518* docker ps -a
 2519* clear
 2520* cd Documentos/Cursos/Docker
 2521* ls
 2522* cd app-nodejs
 2523* ls
 2524* docker login
 2525* cd ~/Downloads
 2526* ls
 2527* sudo tar xzvf master-pdf-editor-4.3.89_qt4.amd64.tar.gz /opt
 2528* sudo tar xzvf master-pdf-editor-4.3.89_qt4.amd64.tar.gz -C /opt
 2529* ls
 2530* cd /opt
 2531* ls
 2532* cd master-pdf-editor-4
 2533* ls
 2534* ./masterpdfeditor4
 2535* ls -ltr
 2536* sh masterpdfeditor4
 2537* cp masterpdfeditor4.desktop ~/.local/share/applications/
 2538* vim ~/.local/share/applications/masterpdfeditor4.desktop
 2539* update-desktop-database ~/.local/share/applications/
 2540* sudo cp masterpdfeditor4 /usr/local/bin/
 2541* masterpdfeditor4\n: 1737073235:0;sudo apt update\nsudo apt install libx11-6 libxext6 libxrender1 libxrandr2 libxcb1\n: 1737073277:0;sudo apt autoremove
 2542* masterpdfeditor4\n: 1737073315:0;sudo apt update\nsudo apt install libqt4-svg\n: 1737073366:0;wget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/q/qt4-x11/libqt4-svg_4.8.7+dfsg-18_amd64.deb\ncd ~/Downloads
 2543* cd ~/Downloads
 2544* wget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/q/qt4-x11/libqt4-svg_4.8.7+dfsg-18_amd64.deb\n: 1737073386:0;sudo dpkg -i libqt4-svg_*.deb\n: 1737073393:0;uname -m
 2545* sudo apt -f install
 2546* masterpdfeditor4\n: 1737073455:0;sudo apt install libqtcore4 libqtgui4
 2547* wget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/q/qt4-x11/libqtcore4_4.8.7+dfsg-18_amd64.deb\nwget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/q/qt4-x11/libqt\n: 1737073500:0;sudo dpkg -i libqtcore4_*.deb\n: 1737073505:0;sudo dpkg -i libqtgui4_*.deb\n: 1737073510:0;ls
 2548* wget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/q/qt4-x11/libqtgui4_4.8.7+dfsg-18_i386.deb
 2549* sudo dpkg -i libqtgui4_*.deb\n: 1737073570:0;wget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/q/qt4-x11/libqtgui4_4.8.7+dfsg-18_amd64.deb\n: 1737073597:0;sudo dpkg -i libqtgui4_*_amd64.deb\n: 1737073606:0;apt -f install
 2550* sudo apt -f install
 2551* sudo dpkg -i libqtgui4_*_amd64.deb\n: 1737073629:0;sudo apt -f install
 2552* sudo dpkg -i libqtgui4_*_amd64.deb\n: 1737073637:0;sudo apt -f install
 2553* sudo dpkg -i libqtgui4_*_amd64.deb\n: 1737073646:0;sudo apt -f install -y
 2554* sudo dpkg -i libqtgui4_*_amd64.deb\n: 1737073655:0;sudo apt -f install -y
 2555* sudo dpkg -i libqtgui4_*_amd64.deb\n: 1737073700:0;sudo apt update\nsudo apt install libjpeg62-turbo libmng1 libtiff5\n: 1737073742:0;wget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/libj/libjpeg-turbo/libjpeg62-turbo_1.5.2-2+b1_amd64.deb\nwget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/libm/libmng/libmng1_1.0.10+dfsg-3.1+b5_amd64.deb\nwget http://snapshot.debian.org/archive/debian/20190701T000000Z/pool/main/t/tiff/libtiff5_4.0.10-4_amd64.deb\n: 1737073761:0;sudo dpkg -i libjpeg62-turbo_*.deb\nsudo dpkg -i libmng1_*.deb\nsudo dpkg -i libtiff5_*.deb\n: 1737073781:0;sudo apt install libwebp6 -y
 2556* sudo apt -f install -y
 2557* sudo dpkg -i libjpeg62-turbo_*.deb\nsudo dpkg -i libmng1_*.deb\nsudo dpkg -i libtiff5_*.deb\n: 1737073822:0;exit
 2558* sudo rm -rf /opt/master-pdf-editor-4
 2559* cd Downloads
 2560* cd packages
 2561* ls
 2562* dpkg -i cinnamon-common_6.4.6_all.deb
 2563* sudo dpkg -i cinnamon-common_6.4.6_all.deb
 2564* dpkg -i cinnamon*.deb
 2565* sudo dpkg -i cinnamon*.deb
 2566* apt -f install
 2567* sudo apt -f install
 2568* sudo dpkg -i cinnamon*.deb
 2569* sudo apt -f install
 2570* sudo dpkg -i cinnamon*.deb
 2571* sudo apt -f install
 2572* sudo dpkg -i cinnamon*.deb
 2573* sudo apt -f install -y
 2574* sudo dpkg -i cinnamon*.deb
 2575* sudo apt -f install -ysudo apt update
 2576* sudo apt update -y
 2577* sudo apt install cinnamon-control-center-dbg libcinnamon-desktop-dbg libcinnamon-menu-3-0-dbg libcjs-dbg libcvc-dbg muffin-dbg nemo-dbg\n: 1737205261:0;sudo apt -f install -ysudo apt update
 2578* sudo apt -f install -y
 2579* sudo dpkg -i cinnamon*.deb
 2580* sudo vim /etc/apt/sources.list
 2581* sudo vim /etc/apt/sources.list.d/ubuntu.sources
 2582* sudo apt update -y
 2583* sudo vim /etc/apt/sources.list.d/ubuntu.sources
 2584* sudo apt update -y
 2585* sudo vim /etc/apt/sources.list.d/ubuntu.sources
 2586* sudo apt update -y
 2587* sudo apt install cinnamon-control-center-dbg libcinnamon-desktop-dbg libcinnamon-menu-3-0-dbg libcjs-dbg libcvc-dbg muffin-dbg nemo-dbg cinnamon-dbg\n: 1737205625:0;apt -f install
 2588* sudo apt -f install
 2589* sudo -
 2590* sudo root
 2591* sudo su -
 2592* cd ..
 2593* cd Documentos/Cursos/Docker
 2594* cd app-nodejs
 2595* ls
 2596* code .
 2597* ls
 2598* cat Dockerfile
 2599* vim Dockerfile
 2600* sudo su
 2601* cinnamon --version
 2602* sudo apt update && sudo apt upgrade -y\n: 1737230039:0;sudo apt full-upgrade
 2603* sudo apt upgrade --allow-downgrades
 2604* sudo apt install --only-upgrade grub-common grub-efi-amd64 grub-efi-amd64-bin grub-efi-amd64-signed grub-pc-bin grub2-common python3-distupgrade ubuntu-release-upgrader-core ubuntu-release-upgrader-gtk\n: 1737230155:0;sudo nano /etc/apt/apt.conf.d/99force-no-phase
 2605* sudo apt update && sudo apt full-upgrade\n: 1737230198:0;cp /dev/null /etc/apt/apt.conf.d/99force-no-phase
 2606* sudo cp /dev/null /etc/apt/apt.conf.d/99force-no-phase
 2607* apt update
 2608* sudo apt update
 2609* sudo apt upgrade
 2610* clear
 2611* sudo nano /etc/apt/sources.list.d/official-package-repositories.list
 2612* sudo apt update\n: 1737230315:0;sudo gpg --keyserver keyserver.ubuntu.com --recv-keys A6616109451BBBF2\nsudo gpg --export --armor A6616109451BBBF2 | sudo tee /etc/apt/trusted.gpg.d/linuxmint.gpg
 2613* sudo apt update
 2614* sudo wget -qO- https://packages.linuxmint.com/keyring.gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/linuxmint.gpg
 2615* sudo apt install --only-upgrade cinnamon
 2616* sudo wget -qO- https://packages.linuxmint.com/keyring.gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/linuxmint.gpg
 2617* sudo apt update
 2618* sudo rm /etc/apt/trusted.gpg.d/linuxmint.gpg
 2619* wget -qO - https://packages.linuxmint.com/keyring.gpg | sudo tee /usr/share/keyrings/linuxmint.gpg
 2620* sudo su
 2621* cd Documentos/Cursos/Devops\ Pro
 2622* ls
 2623* cd Projetos
 2624* ls
 2625* mkdir docker-compose
 2626* cd docker-compose
 2627* code .
 2628* vim docker-compose.yml
 2629* docekr compose up
 2630* docker compose up
 2631* docker ps -a
 2632* docker compose up -d
 2633* docker compose down; docker compose up -d
 2634* docker ps -a
 2635* docker compose down; docker compose up -d
 2636* docker ps
 2637* docker ps -
 2638* docker ps -a
 2639* docker compose down; docker compose up -d
 2640* docker login
 2641* docker compose down; docker compose up -d
 2642* docker ps -a
 2643* pwd
 2644* docker compose down; docker compose up -d
 2645* ls
 2646* sudo ls
 2647* docker ps 
 2648* docker compose down
 2649* sudo docker compose down
 2650* ls
 2651* sudo vim docker-compose.yml
 2652* docker compose up -d --force-recreate
 2653* sudo docker compose up -d --force-recreate
 2654* ls
 2655* sudo ls -ltr
 2656* cd ..
 2657* ls
 2658* chown -R carlos-leonardo .
 2659* sudo chown -R carlos-leonardo .
 2660* ls -ltr
 2661* cd docker-compose
 2662* ls
 2663* docke ps -a
 2664* docker ps -a
 2665* ls  /home/carlos-leonardo/Documentos/data
 2666* sudo ls /home/carlos-leonardo/Documentos/data
 2667* docker compose down
 2668* sudo docker compose up -d --force-recreate
 2669* ls
 2670* docker volume ls
 2671* docker ps 
 2672* ls /var/lib/docker
 2673* sudo ls /var/lib/docker
 2674* sudo ls /var/lib/docker/volumes
 2675* docker volume create postgre_sql_vol
 2676* sudo docker compose up -d --force-recreate
 2677* docker ps -a
 2678* docker inspect 781985e58b95 | grep -i volume
 2679* docker inspect 781985e58b95
 2680* clear
 2681* docker image ls
 2682* docker image inspect carlosleosouza/kube-news:latest
 2683* ls
 2684* cd ..
 2685* ls
 2686* cd kube-news
 2687* ls
 2688* ls src
 2689* cat src/Dockerfile
 2690* cat src/server.js
 2691* ls
 2692* cd src
 2693* ls -l
 2694* cat package
 2695* cat package.json
 2696* clear
 2697* cd ../..
 2698* ls
 2699* cd docker-compose
 2700* sudo docker compose up -d --force-recreate
 2701* docker ps -a
 2702* docker run carlosleosouza/kubenews:latest
 2703* docker run carlosleosouza/kube-news:latest
 2704* docker ps
 2705* sudo docker compose up -d --force-recreate
 2706* docker ps
 2707* docker ps -a
 2708* docker logs -f 93a5bb36696b
 2709* docker ps
 2710* docker image ls
 2711* docker image rmi node
 2712* docker image rmi 0e2248b4b4c1
 2713* clear
 2714* docker image ls
 2715* docker image rmi e5b4d52b9496 e5b4d52b9496 883842c06da4 883842c06da4 a33ac4f1069a
 2716* docker image rmi -f e5b4d52b9496 e5b4d52b9496 883842c06da4 883842c06da4 a33ac4f1069a
 2717* docker ps -a
 2718* sudo docker compose up -d --force-recreate
 2719* docker compose up -d --force-recreate
 2720* docker network create
 2721* docker network create --help
 2722* docker network create --help -d bridge
 2723* docker network create knew_network --help -d "bridge"
 2724* docker network create knew_network -d "bridge"
 2725* docker network ls
 2726* docker compose up -d --force-recreate
 2727* ls
 2728* docker compose up -d --force-recreate -f .
 2729* docker compose up -d --force-recreate
 2730* docekr ps -a
 2731* docker ps
 2732* docker rm nginx
 2733* docker rm -f nginx
 2734* docker compose up -d --force-recreate
 2735* docekr ps
 2736* docker ps
 2737* docker image ls
 2738* docker compose up -d --force-recreate
 2739* docker ps
 2740* docker compose down
 2741* docker compose up -d -e DB_USERNAME=kubenews -e DB_PASWORD=kubenews -e DB_DATABASE=kubenews -e DB_HOST=postgresql
 2742* docker compose up -d --env DB_USERNAME=kubenews -env DB_PASWORD=kubenews -env DB_DATABASE=kubenews -env DB_HOST=postgresql
 2743* clear
 2744* docker compose up -d
 2745* docker ps
 2746* docker ps -a
 2747* docker logs -f docker-compose-kubenews-1
 2748* docker compose down
 2749* docker compose up -d
 2750* docker ps -a
 2751* docker logs -f docker-compose-kubenews-1
 2752* docker ps
 2753* exit
 2754* cd Documentos/Cursos/Devops\ Pro
 2755* ls
 2756* cd Projetos
 2757* ls
 2758* cd docker-
 2759* cd docker-compose
 2760* ls
 2761* code .
 2762* ls
 2763* cd ..
 2764* ls
 2765* mv docker-postgresql-multiple-databases .
 2766* mv docker-postgresql-multiple-databases docker-compose
 2767* sudo mv docker-postgresql-multiple-databases docker-compose
 2768* ls
 2769* cd docker-compose
 2770* ls
 2771* docker image ls
 2772* clear
 2773* docker ps -a
 2774* docker rm -f 97d5ff572f57 7aa8da7f4d1f c08f4f6c5302
 2775* clear
 2776* docker ps -a
 2777* clear
 2778* docker compose up -d
 2779* docker ps -a
 2780* docker logs -f docker-compose-kubenews-1
 2781* clear
 2782* cd docker-postgresql-multiple-databases
 2783* ls
 2784* vim init-multiple-databases.sh
 2785* sudo vim init-multiple-databases.sh
 2786* chmod +x init-multiple-databases.sh
 2787* sudo chmod +x init-multiple-databases.sh
 2788* docker ps
 2789* docker compose down
 2790* cd ..
 2791* docker ps
 2792* docker ps -a
 2793* docker rm 271f7a46412c
 2794* clear
 2795* ls
 2796* docker compose up -d
 2797* docker compose down
 2798* docker compose up -d
 2799* docker ps
 2800* docker compose down
 2801* docker ps -a
 2802* docker compose up -d
 2803* docker ps -a
 2804* docker logs -f docker-compose-kubenews-1
 2805* docker logs -f kubedevnews
 2806* docker ps -a
 2807* docker compose up -d
 2808* docker ps -a
 2809* docker logs -f 49c7aa389ac4
 2810* ls docker-postgresql-multiple-databases
 2811* docker compose down
 2812* docker ps -a
 2813* docker compose up -d
 2814* docker ps
 2815* docker ps -a
 2816* cp docker-compose.yml docker-compose.yml.bkp
 2817* code .
 2818* clear
 2819* ls
 2820* mkdir initdb
 2821* cd initdb
 2822* ls
 2823* cp ../docker-postgresql-multiple-databases/init-multiple-databases.sh .
 2824* ls
 2825* cd ..
 2826* ls
 2827* docker compose up -d
 2828* docker compose down
 2829* docker ps -a
 2830* docker rm -f 78ec9b57d8fd
 2831* docker compose up -d
 2832* docker ps -a
 2833* docker logs -f 26bb57291d24
 2834* docker compose down
 2835* docker compose up -d
 2836* docker ps -a
 2837* docker rm 26bb57291d24
 2838* docker ps -a
 2839* docker exec -it postgres_service /bin/bash
 2840* ls
 2841* mv init-multiple-databases.sql initdb
 2842* ls
 2843* docker compose down
 2844* docker ps -a
 2845* docker compose up -d
 2846* docker ps -a
 2847* docker exec -it postgres_service /bin/bash
 2848* ls
 2849* docker compose down
 2850* docker ps -a
 2851* ls -ltr
 2852* chown -R carlos-leonardo docker-postgresql-multiple-databases
 2853* sudo chown -R carlos-leonardo docker-postgresql-multiple-databases
 2854* docker compose up -d
 2855* docker ps -a
 2856* docker logs -f 8e08f7d08b0c
 2857* ls
 2858* rm -f docker-postgresql-multiple-databases
 2859* rm -rf docker-postgresql-multiple-databases
 2860* rm -rf docker-post-multiple-databases
 2861* ls initdb
 2862* clear
 2863* docker ps -a
 2864* docker compose down
 2865* docker ps -a
 2866* docker compose up -d
 2867* docker ps
 2868* docker ps -a
 2869* docker logs -f b834a0b0701f
 2870* docker compose down
 2871* docker compose up -d
 2872* docker ps -a
 2873* docker compose down
 2874* docker compose up -d
 2875* docker ps -a
 2876* docker logs -f postgres_service
 2877* docker compose down
 2878* docker compose up -d
 2879* docker ps -a
 2880* docker exec -it postgres_service /bin/bash
 2881* docker compose down
 2882* clear
 2883* docker ps -a
 2884* docker compose up -d
 2885* docker ps -a
 2886* docker logs -f postgres_service
 2887* docker compose down
 2888* clear
 2889* docekr ps -a
 2890* docker ps -a
 2891* docker compose up -d
 2892* docker ps -a
 2893* docker exec -it postgres_service /bin/bash
 2894* docker ps -a
 2895* docker compose down
 2896* docker ps -a
 2897* docker compose up -d
 2898* docker ps -a
 2899* docker logs -f postgres_service
 2900* docker compose down
 2901* docker compose up -d
 2902* docker logs -f postgres_service
 2903* ls
 2904* vim postgresql.conf
 2905* ls
 2906* vim pg_hba.conf
 2907* docekr compose down
 2908* docker compose down
 2909* docker compose up -d
 2910* docker logs -f postgres_service
 2911* docker exec -it postgres_service /bin/bash
 2912* docker logs -f postgres_service
 2913* docker compose down
 2914* docker compose up -d
 2915* docker ps -a
 2916* docker logs -f postgres_service
 2917* ps -ef | grep 5432
 2918* docker compose down
 2919* ps -ef | grep 5432
 2920* kill 10238
 2921* ps -ef | grep 5432
 2922* kill 96873
 2923* dpkg -l postgre
 2924* dpkg --list postgresql
 2925* netstat -tulnp | grep 5432
 2926* sudo netstat -tulnp | grep 5432
 2927* sudo netstat -tulnp | grep postgre
 2928* ps -ef | grep 5432
 2929* docker compose up -d
 2930* docker logs -f postgres_service
 2931* docker compose down
 2932* docker compose up -d
 2933* docker logs -f postgres_service
 2934* docker compose down
 2935* docker compose up -d
 2936* docker logs -f postgres_service
 2937* docker compose down
 2938* docker volume ls
 2939* docker volume rm kubenews_volume postgre_sql_vol docker-compose_pg_data docker-compose_postgres_docker_vol
 2940* docker volume ls
 2941* docker compose up -d
 2942* docker logs -f postgres_service
 2943* docker compose down
 2944* docker image ls
 2945* docker volume ls
 2946* docker volume rm docker-compose_pg_data
 2947* docker ps -a
 2948* docker compose up -d
 2949* docker ps -a
 2950* docker logs -f postgres_service
 2951* docker compose down
 2952* docker compose up -d
 2953* docker logs -f postgres_service
 2954* docker compose down
 2955* docker compose up -d
 2956* docker logs -f postgres_service
 2957* docker exec -it postgres_service /bin/bash
 2958* docker ps -a
 2959* docker compose down
 2960* clear
 2961* docker compose up -d
 2962* docker ps -a
 2963* docker logs -f postgres_service
 2964* docker compose down
 2965* docker compose up -d
 2966* docker compose down
 2967* docker ps -a
 2968* docker compose up -d
 2969* docker compose down
 2970* docker compose up -d
 2971* docker logs -f postgres_service
 2972* docker exec -it postgres_service /bin/bash
 2973* docker compose down
 2974* docker volume ls
 2975* docker compose up -d
 2976* docker logs -f postgres_service
 2977* docker exec -it postgres_service /bin/bash
 2978* docker compose down
 2979* docker compose up -d
 2980* docker exec -it postgres_service /bin/bash
 2981* docker ps -a
 2982* docker compose down
 2983* docker pa -a
 2984* clear
 2985* docker ps -a
 2986* docker compose up -d
 2987* docker ps -a
 2988* docker logs -f 34c156c70405
 2989* docker compose down
 2990* docker ps -a
 2991* docker compose up -d
 2992* docker ps -a
 2993* docker compose down
 2994* docker ps -a
 2995* docker compose up -d
 2996* docker ps -a
 2997* docker logs -f postgres_service
 2998* docker compose down
 2999* docker ps -a
 3000* docker compose up -d
 3001* docker ps -a
 3002* docker exec -it postgres_service /bin/bash
 3003* docker compose up -d
 3004* docker exec -it postgres_service /bin/bash
 3005* docker compose up -d
 3006* docker exec -it postgres_service /bin/bash
 3007* docker compose down
 3008* docker ps -a
 3009* docker compose up -d
 3010* docker exec -it postgres_service /bin/bash
 3011* docker compose down
 3012* docker ps -a
 3013* docker compose up -d
 3014* docker exec -it postgres_service /bin/bash
 3015* docker ps -a
 3016* docker compose down
 3017* docker compose up -d
 3018* docker ps -a
 3019* docker logs -f postgres_service
 3020* docker compose down
 3021* clear
 3022* docker compose up -d
 3023* docker ps -a
 3024* docker logs -f postgres_service
 3025* docker compose down
 3026* docker ps -a
 3027* docker compose up -d
 3028* docker ps -a
 3029* docker logs -f postgres_service
 3030* docker compose down
 3031* docker ps -a
 3032* docker compose up -d
 3033* docker ps -a
 3034* docker exec -it postgres_service /bin/bash
 3035* docker compose down
 3036* exit
 3037* sudo apt remove libreoffice
 3038* sudo apt remove libre-office
 3039* sudo su
 3040* exit
 3041* sudo su
 3042* ls
 3043* cd SimulacaoLabs
 3044* ls
 3045* docker compose down
 3046* docker compose up -d
 3047* docker ps
 3048* docker compose down
 3049* docker compose up -d
 3050* docker compose down
 3051* docker compose up -d
 3052* docker ps
 3053* docker compose down
 3054* docker ps
 3055* docker compose down
 3056* sudo su
 3057* exit
 3058* sudo su
 3059* ls
 3060* cd Downloads
 3061* for i in libreoffice.txt; do dpkg -i i; done
 3062* for i in libreoffice.txt; do sudo dpkg -i i; done
 3063* for i in "libreoffice.txt"; do sudo dpkg -i i; done
 3064* for i in "libreoffice.txt"; do sudo dpkg -i $i; done
 3065* for i in libreoffice.txt; do sudo dpkg -i $i; done
 3066* for linha in $(cat libreoffice.txt); do dpkg --purge "$linha" done
 3067* for linha in $(cat libreoffice.txt); do dpkg --purge "$linha"; done
 3068* for linha in $(cat libreoffice.txt); do sudo dpkg --purge "$linha"; done
 3069* dpkg --purge
 3070* for linha in $(cat libreoffice.txt); do sudo dpkg --purge "$linha"; done
 3071* sudo su -
 3072* sudo su
 3073* cd ..
 3074* cd Documentos/Cursos/Devops\ Pro
 3075* ls
 3076* cd Projetos
 3077* ls
 3078* ls desafiosdevopspro
 3079* mkdir -p ci-cd-k8s/app
 3080* ls
 3081* ls ci-cd-k8s
 3082* mkdir -p ci-cd-k8s/k8s
 3083* touch ci-cd-k8s/app/app.py
 3084* touch ci-cd-k8s/Dockerfile
 3085* touch ci-cd-k8s/.gitlab-ci.yaml
 3086* touch ci-cd-k8s/k8s/deployment.yaml
 3087* touch ci-cd-k8s/k8s/service.yaml
 3088* touch ci-cd-k8s/README.md
 3089* cd ci-cd-k8s
 3090* ls
 3091* echo "# ci-cd-k8s" >> README.md
 3092* git init
 3093* ls
 3094* git add README.md
 3095* git remote add origin git@github.com:carlosleosouza/ci-cd-k8s.git
 3096* git branch -M main
 3097* git add .
 3098* git push -u origin main
 3099* git branch
 3100* git checkout -b main
 3101* git branch
 3102* git commit -M "Primeiro commit"
 3103* git commit -m "Primeiro commit"
 3104* git push -u origin main
 3105* ls
 3106* vim app/app.py
 3107* vim app/requiriments.txt
 3108* mv app/requiriments.txt app/requirements.txt
 3109* ls
 3110* vim Dockerfile
 3111* ls
 3112* l
 3113* git remote add origin https://gitlab.com/carlosleosouza/ci-cd-k8s.git
 3114* cd ..
 3115* cp -R ci-cd-k8s ci-cd-k8s-gitlab
 3116* cd ci-cd-k8s-gitlab
 3117* rm -rf .git
 3118* git remote add origin https://gitlab.com/carlosleosouza/ci-cd-k8s.git
 3119* git init
 3120* git remote add origin https://gitlab.com/carlosleosouza/ci-cd-k8s.git
 3121* git branch -M main
 3122* git branch
 3123* git push -u origin main
 3124* git checkout -b main
 3125* git commit -m "Primeiro commit"
 3126* git add .
 3127* git commit -m "Primeiro commit"
 3128* git push -u origin main
 3129* rm -rf .git
 3130* git init
 3131* git remote add origin https://gitlab.com/carlosleosouza/ci-cd-k8s-gitlab.git
 3132* git add .
 3133* git commit -m "Primeiro commit"
 3134* git checkout -b main
 3135* git push -u origin main
 3136* git remote add origin https://gitlab.com/carlosleosouza/ci-cd-k8s-gitlab.git\ngit branch -M main\ngit push -uf origin main\n: 1739135223:0;ls
 3137* git status
 3138* gti add .
 3139* git add .
 3140* git commit -m "Corre
 3141* o do Dockerfile e README"
 3142* git push -u origin main
 3143* git commit -m "Cria
 3144* o Deployments e Services"
 3145* git add .
 3146* git commit -m "Cria
 3147* o Deployments e Services"
 3148* git push -u origin main
 3149* git add .
 3150* git commit -m "Cria
 3151* o pipeline CI/CD"
 3152* git push -u origin main
 3153* minikube status
 3154* minikube start
 3155* minikube update
 3156* minikube update-check
 3157* minikube-update
 3158* minikube --help
 3159* clear
 3160* gitlab-runner status
 3161* gitlab-runner register  --url https://gitlab.com  --token glrt-t3_yK-DKQDYXYEC-bTT4By_
 3162* gitlab-runner run
 3163* sudo su
 3164* ls
 3165* ls -a
 3166* mv .gitlab-ci.yaml .gitlab-ci.yml
 3167* git add .gitlab-ci.yml
 3168* git commit -m "Corre
 3169* o arquivo de pipeline"
 3170* git push -u origin main
 3171* git add .gitlab-ci.yml
 3172* git commit -m "Corre
 3173* o 2 arquivo de pipeline"
 3174* git add .
 3175* git commit -m "Corre
 3176* o 2 arquivo de pipeline"
 3177* git push -u origin main
 3178* git add .
 3179* git commit -m "Corre
 3180* o 3 arquivo de pipeline"
 3181* git push -u origin main
 3182* docker ps -a
 3183* git add .
 3184* git commit -m "Corre
 3185* o 4 arquivo de pipeline"
 3186* git push -u origin main
 3187* git commit -m "Corre
 3188* o 4 arquivo de pipeline"
 3189* git push -u origin main
 3190* git add .
 3191* git commit -m "Corre
 3192* o 4 arquivo de pipeline"
 3193* git push -u origin main
 3194* git pull --rebase origin main\n: 1739141133:0;git push -u origin main
 3195* git add .
 3196* git commit -m "Corre
 3197* o requirements.txt"
 3198* git push -u origin main
 3199* git add .
 3200* git commit -m "Corre
 3201* o 6 pipeline"
 3202* git push -u origin main
 3203* clear
 3204* docker ps -a
 3205* docker image ls
 3206* git add .
 3207* git commit -m "Corre
 3208* o docker registry"
 3209* git push -u origin main
 3210* docker login
 3211* git commit -m "Corre
 3212* o 2 docker registry"
 3213* git add .
 3214* git push -u origin main
 3215* git add .
 3216* git commit -m "Corre
 3217* o 3 docker registry"
 3218* git push -u origin main
 3219* docker ps
 3220* sudo su
 3221* cd Documentos/Cursos/Devops\ Pro
 3222* ls
 3223* cd Projetos
 3224* ls
 3225* cd ci-cd-k8s-gitlab
 3226* ls
 3227* git add .
 3228* git commit -m "Corre
 3229* o gitlab CI"
 3230* git status
 3231* git push -u origin main
 3232* gitlab-runner run
 3233* docker
 3234* docker ps -a
 3235* docker image ls
 3236* git add .
 3237* git commit -m "Corre
 3238* o gitlab CI 2"
 3239* git push -u origin main
 3240* git add .
 3241* git rm --cached builds/t3_yK-DKQ/0/carlosleosouza/ci-cd-k8s-gitlab
 3242* git add .
 3243* git commit -m "Corre
 3244* o gitlab CI 3"
 3245* git push -u origin main
 3246* docker login
 3247* git add .
 3248* git commit -m "Corre
 3249* o gitlab CI 4"
 3250* git push -u origin main
 3251* docker image ls
 3252* docker ps -a
 3253* docker init
 3254* docker --version
 3255* docker ps
 3256* docker stop
 3257* docker image l
 3258* docker image ls
 3259* docker image rm 3f64a2c8b9ff 3f64a2c8b9ff 660f7f57ff97 00100d310b9d 00100d310b9d 88c755e4a916 9bea9f2796e2 5eac2c73de97 04faa32c7d29 
 3260* docker image ls
 3261* docker image rm 3f64a2c8b9ff 3f64a2c8b9ff 00100d310b9d 00100d310b9d 
 3262* docker image rm -f 3f64a2c8b9ff 3f64a2c8b9ff 00100d310b9d 00100d310b9d 
 3263* docker image ls
 3264* docker image rm 600c4539e5f7 3357132d6ece
 3265* clear
 3266* docker image ls
 3267* docker ps -a
 3268* clear
 3269* sudo apt-get install jq
 3270* jq
 3271* docker version
 3272* clear
 3273* curl --unix-socket /var/run/docker.sock http://localhost/version
 3274* curl --unix-socket /var/run/docker.sock http://localhost/version | jq .
 3275* curl --unix-socket /var/run/docker.sock http://localhost/info | jq .
 3276* curl --unix-socket /var/run/docker.sock http://localhost/infoclear | jq .
 3277* clear
 3278* curl --unix-socket /var/run/docker.sock
 3279* -X POST 
 3280* d '{"Image":"nginx"}' -H "Content-Type: application/json" http://localhost/images/create ?fromImage=nginx:latest
 3281* curl --unix-socket /var/run/docker.sock
 3282* -X POST 
 3283* d '{"Image":"nginx"}' -H "Content-Type: application/json" http://localhost/images/create?fromImage=nginx:latest
 3284* curl --unix-socket /var/run/docker.sock
 3285* -X POST http://localhost/images/create?fromImage=nginx:latest
 3286* curl --unix-socket /var/run/docker.sock
 3287* -X POST "http://localhost/images/create?fromImage=nginx:latest"
 3288* curl --unix-socket /var/run/docker.sock
 3289* -X POST http://localhost/images/create?fromImage=nginx:latest
 3290* sudo su
 3291* sudo curl --unix-socket /var/run/docker.sock
 3292* -X POST http://localhost/images/create?fromImage=nginx:latest
 3293* sudo curl --unix-socket /var/run/docker.sock
 3294* -X POST http://localhost/v1.47/images/create?fromImage=nginx:latest
 3295* clear
 3296* curl --unix-socket /var/run/docker.sock -X POST "http://localhost/v1.47/images/create?fromImage=nginx:latest"\n: 1739474749:0;docker image ls
 3297* docker image rm nginx
 3298* docker image ls
 3299* curl --unix-socket /var/run/docker.sock -X POST "http://localhost/v1.47/images/create?fromImage=nginx:latest"\n: 1739474788:0;docker image ls
 3300* docker image rm n
 3301* docker image rm nginx
 3302* curl --unix-socket /var/run/docker.sock -X POST "http://localhost/images/create?fromImage=nginx:latest"\n: 1739475014:0;curl --unix-socket /var/run/docker.sock -X POST -d '{"Image":"nginx"}' -H "Content-Type: application/json" http://localhost/containers/create\n: 1739475019:0;docker ps
 3303* docker ps -a
 3304* curl --unix-socket /var/run/docker.sock -X POST -d '{"Image":"nginx"}' -H "Content-Type: application/json" http://localhost/containers/c02a5799fd1f/start\n: 1739475140:0;docker ps
 3305* docker ps -a
 3306* curl --unix-socket /var/run/docker.sock -X POST http://localhost/containers/c02a5799fd1f/start\n: 1739475172:0;docker ps
 3307* curl --unix-socket /var/run/docker.sock -X GET http://localhost/containers/json\n: 1739475313:0;curl --unix-socket /var/run/docker.sock -X GET http://localhost/containers/json | jq .\n: 1739475425:0;curl --unix-socket /var/run/docker.sock -X GET "http://localhost/containers/json?all=true" | jq .
 3308* clear
 3309* curl --unix-socket /var/run/docker.sock -X POST -d '{"Image":"nginx", "HostConfig": {"PortBindings": {"80/tcp": [{"HostIP": "0.0.0.0", "HostPort": "8080"}]}}}' http://localhost/containers/create
 3310* curl --unix-socket /var/run/docker.sock -X POST -d @chamada.json http://localhost/containers/create
 3311* ls 
 3312* cd Documentos/Cursos/Devops\ Pro/Projetos/ci-cd-k8s-gitlab
 3313* ls
 3314* cd k8s
 3315* ls
 3316* curl --unix-socket /var/run/docker.sock -X POST -d @chamada.json http://localhost/containers/create
 3317* curl --unix-socket /var/run/docker.sock -X POST -d @chamada.json "http://localhost/containers/create"
 3318* curl --unix-socket /var/run/docker.sock -X POST -d @chamada.json -H "Content-Type: application/json" http://localhost/containers/create"
 3319* curl --unix-socket /var/run/docker.sock -X POST -d @chamada.json -H "Content-Type: application/json" http://localhost/containers/create
 3320* curl --unix-socket /var/run/docker.sock -X POST http://localhost/containers/71af4462a85c7ead075a2d3b80be59d59e5dafa905ec932e6ffdcbfac3796fd9/start\n: 1739476446:0;docker ps -a
 3321* curl --unix-socket /var/run/docker.sock -X DELETE http://localhost/containers/71af4462a85c7ead075a2d3b80be59d59e5dafa905ec932e6ffdcbfac3796fd9
 3322* curl --unix-socket /var/run/docker.sock -X DELETE http://localhost/containers/71af4462a85c7ead075a2d3b80be59d59e5dafa905ec932e6ffdcbfac3796fd9/stop
 3323* docker stop 71af4462a85c
 3324* docker stop c02a5799fd1f
 3325* curl --unix-socket /var/run/docker.sock -X DELETE http://localhost/containers/71af4462a85c7ead075a2d3b80be59d59e5dafa905ec932e6ffdcbfac3796fd9/stop
 3326* curl --unix-socket /var/run/docker.sock -X DELETE http://localhost/containers/71af4462a85c7ead075a2d3b80be59d59e5dafa905ec932e6ffdcbfac3796fd9
 3327* curl --unix-socket /var/run/docker.sock -X DELETE http://localhost/containers/c02a5799fd1f
 3328* docker ps
 3329* docker ps -a
 3330* clear
 3331* hist
 3332* history
 3333* history | grep curl
 3334* sudo su
 3335* terrafoem
 3336* terraform
 3337* sudo su
 3338* git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt" --depth=1\n: 1739658896:0;sudo su
 3339* pwd
 3340* vim .zshrc
 3341* exec $SHELL
 3342* exit
 3343* zsh
 3344* pyenv
 3345* reboot
 3346* sudo su
 3347* ls
 3348* sudo su
 3349* vim .zsh
 3350* vim .zshrc
 3351* zsh
 3352* pyenv
 3353* ls
 3354* sudo su
 3355* ls
 3356* zsh
 3357* typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet
 3358* zsh
 3359* p10k configure
 3360* clear
 3361* sudo su
 3362* pwd
 3363* sudo apt-get install fonts-powerline\n: 1739661061:0;ls
 3364* git clone https://github.com/powerline/fonts.git --depth=1
 3365* cd fonts
 3366* ./install.sh
 3367* cd ..
 3368* rm -rf fonts
 3369* ls ~/.config/fontconfig/conf.d
 3370* ls ~/.config/
 3371* ls ~/.config/fontconfig/conf.d
 3372* find / -name fontconfig
 3373* sudo find / -name fontconfig
 3374* mkdir -p .config/fontconfig
 3375* mkdir -p ~/.config/fontconfig
 3376* ls
 3377* ls .config
 3378* ls ~/.config/fontconfig/
 3379* cd ~/.config/fontconfig/
 3380* mkdir conf.d
 3381* cd conf.d
 3382* cp ~/Downloads/50-enable-terminess-powerline.conf .
 3383* ls
 3384* fc-cache -vf
 3385* sudo su
 3386* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Devops Pro/Projetos/ci-cd-k8s-gitlab/builds/t3_yK-DKQ/0/carlosleosouza/ci-cd-k8s-gitlab/app/app.py"
 3387* pyenv
 3388* history | grep pyenv
 3389* ls
 3390* curl -fsSL https://pyenv.run | bash
 3391* git clone https://github.com/pyenv/pyenv.git ~/.pyenv
 3392* ls
 3393* ls -a
 3394* ls .pyenv
 3395* cd ~/.pyenv && src/configure && make -C src
 3396* pyenv
 3397* vim .zshrc
 3398* sudo vim .zshrc
 3399* ls
 3400* ls -a
 3401* pwd
 3402* cd ..
 3403* ls
 3404* vim .zshrc
 3405* exec "$SHELL"
 3406* pyenv update
 3407* pwd
 3408* cd Downloads
 3409* ls
 3410* dpkg -i code_1.97.0-1738713410_amd64.deb
 3411* sudo dpkg -i code_1.97.0-1738713410_amd64.deb
 3412* clear
 3413* exit
 3414* sudo apt update
 3415* sudo apt upgrade -y
 3416* sudo su
 3417* cd Documentos/Cursos/Python
 3418* ls
 3419* ls Python\ 3+\ Completo
 3420* mv *.pdf Python\ 3+\ Completo
 3421* mv *.py Python\ 3+\ Completo
 3422* ls
 3423* mkdir Python\ 3\ Udemy
 3424* ls
 3425* cd Python\ 3\ Udemy
 3426* ls
 3427* git clone https://github.com/luizomf/cursopython2023.git
 3428* ls
 3429* cd cursopython2023
 3430* ls
 3431* cd ..
 3432* git clone https://github.com/argentinaluiz/my-vscode-settings.git
 3433* cd my-vscode-settings
 3434* ls
 3435* ./install-extensions.sh
 3436* sudo sh ./install-extensions.sh
 3437* wget https://raw.githubusercontent.com/argentinaluiz/my-vscode-settings/main/vscode-settings/extensions.txt\nwget -O - https://raw.githubusercontent.com/argentinaluiz/my-vscode-settings/main/install-extensions.sh | bash
 3438* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula2.py"
 3439* cd Documentos/Cursos/Python
 3440* ls
 3441* cd Python\ 3\ Udemy
 3442* ls
 3443* rm -rf *
 3444* ls
 3445* rm -rf .git
 3446* git clone git@github.com:carlosleosouza/cursopython2023.git
 3447* ls
 3448* cd cursopython2023
 3449* ls
 3450* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula2.py"
 3451* cat .zshrc
 3452* cat .zshrc | more
 3453* pk10 configure
 3454* p10k configure
 3455* vim .zshrc
 3456* exit
 3457* ls
 3458* cd Documentos/Cursos/Python
 3459* cd Python\ 3\ Udemy
 3460* ls
 3461* cd Python\ 3\ Udemy
 3462* cd cursopython2023
 3463* clear
 3464* ls
 3465* clear
 3466* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula2.py"
 3467* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula4.py"
 3468* clear
 3469* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula4.py"
 3470* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula5.py"
 3471* clear
 3472* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula6.py"
 3473* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula7.py"
 3474* clear
 3475* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula9.py"
 3476* clear
 3477* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula9.py"
 3478* clear
 3479* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula11.py"
 3480* clear
 3481* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula12.py"
 3482* clear
 3483* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula12.py"
 3484* clear
 3485* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula13.py"
 3486* clear
 3487* sudo apt update && sudo apt full-upgrade\n: 1740312227:0;clear
 3488* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula17.py"
 3489* clear
 3490* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula19.py"
 3491* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula20.py"
 3492* clear
 3493* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula20.py"
 3494* clear
 3495* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula25.py"
 3496* clear
 3497* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula26.py"
 3498* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula20.py"
 3499* /usr/local/bin/python Untitled-1
 3500* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/Exerc
 3501* cios/arrayletras.py"
 3502* clear
 3503* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/Exerc
 3504* cios/arrayletras.py"
 3505* clear
 3506* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/Exerc
 3507* cios/arrayletras.py"
 3508* sudo su
 3509* clear
 3510* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula30.py"
 3511* clear
 3512* cd Downloads
 3513* dpkg -i warp-terminal_0.2025.02.19.08.02.stable.05_amd64.deb
 3514* sudo dpkg -i warp-terminal_0.2025.02.19.08.02.stable.05_amd64.deb
 3515* ls
 3516* sudo apt update -y
 3517* sudo apt upgrade -y
 3518* sudo apt autoremove -y
 3519* sudo apt full-upgrade -y
 3520* apt list --upgradable
 3521* sudo apt upgrade -y
 3522* sudo apt full-upgrade -y
 3523* sudo apt autoremove -y
 3524* clear
 3525* sudo apt update && sudo apt install warp-terminal && warp_finish_update zuv2bzv
 3526* sudo su
 3527* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula31.py"
 3528* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio.py"
 3529* clear
 3530* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio.py"
 3531* clear
 3532* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio.py"
 3533* clear
 3534* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio1.py"
 3535* clear
 3536* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio1.py"
 3537* clear
 3538* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio1.py"
 3539* clear
 3540* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio1.py"
 3541* clear
 3542* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio1.py"
 3543* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula32exercicio2.py"
 3544* sudo spt update -y
 3545* sudo apt update -y
 3546* sudo apt upgrade -y
 3547* sudo apt autoremove -y
 3548* clear
 3549* sudo dpgk -i Downloads/anydesk_6.4.2-1_amd64.deb 
 3550* sudo dpkg -i Downloads/anydesk_6.4.2-1_amd64.deb
 3551* sudo apt update -y
 3552* sudo apt upgrade -y
 3553* sudo apt autoremove -y
 3554* clear
 3555* ls
 3556* sudo su
 3557* clear
 3558* chsh -s $(which zsh)
 3559* echo $SHELL
 3560* $SHELL --version
 3561* clear
 3562* cd .oh-my-zsh
 3563* ls
 3564* ./oh-my-zsh.sh
 3565* sudo ./oh-my-zsh.sh
 3566* sudo sh ./oh-my-zsh.sh 
 3567* ls tools
 3568* cd tools
 3569* ls
 3570* ./upgrade.sh
 3571* clear
 3572* sudo chsh -s $(which zsh)
 3573* echo $SHELL
 3574* cat /etc/shells
 3575* which zsh
 3576* chsh
 3577* clear
 3578* sudo su
 3579* clear
 3580* pip install thefuck
 3581* pip3 install thefuck
 3582* apt install pip
 3583* pip install thefuck
 3584* pip3 install thefuck
 3585* pip install thefuck --break-system-packages
 3586* exit
 3587* ls /boot/vmlinuz-*
 3588* apt install vim
 3589* sudo vim /etc/default/grub
 3590* ls /boot/vmlinuz-*
 3591* grep -i "menuentry" /boot/grub/grub.cfg
 3592* sudo grep -i "menuentry" /boot/grub/grub.cfg
 3593* clear
 3594* sudo grep -i "menuentry" /boot/grub/grub.cfg
 3595* sudo vim /etc/default/grub
 3596* sudo update-grub
 3597* sudo grub2-mkconfig -o /boot/grub2/grub.cfg
 3598* sudo grub-mkconfig -o /boot/grub2/grub.cfg
 3599* reboot
 3600* sudo su
 3601* clear
 3602* uname -r
 3603* sudo vim /etc/default/grub
 3604* sudo update-grub
 3605* reboot
 3606* sudo su
 3607* history | grep xargs
 3608* sudo xargs -a 
 3609* rea\ de\ trabalho/programs.txt sudo apt install -y 
 3610* apt install git -y
 3611* apt install gitlab-runner -y
 3612* kubectl
 3613* clear
 3614* cat 
 3615* rea\ de\ trabalho
 3616* cat 
 3617* rea\ de\ trabalhoprogr
 3618* cat 
 3619* rea\ de\ trabalho/programs.txt
 3620* vim 
 3621* rea\ de\ trabalho/programs.txt
 3622* sudo xargs -a 
 3623* rea\ de\ trabalho/programs.txt sudo apt install -y 
 3624* vim 
 3625* rea\ de\ trabalho/programs.txt
 3626* sudo xargs -a 
 3627* rea\ de\ trabalho/programs.txt sudo apt install -y 
 3628* sudo wm control -M
 3629* curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh
 3630* pwd
 3631* sudo apt update -y
 3632* ls -la /etc/apt/sources.list.d/
 3633* cat /etc/apt/sources.list.d/docker.list
 3634* sudo rm /etc/apt/sources.list.d/docker.list
 3635* sudo apt update
 3636* ls -la /etc/apt/sources.list.d/
 3637* sudo apt update -y
 3638* apt list --upgradable
 3639* sudo apt upgrade thermald
 3640* sudo apt autoremove
 3641* sudo apt clean
 3642* cd Downloads
 3643* ls
 3644* curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh
 3645* vim /etc/apt/sources.list.d/docker.list 
 3646* sudo vim /etc/apt/sources.list.d/docker.list
 3647* curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh
 3648* wget https://get.docker.com -o get-docker.sh
 3649* vim get-docker.sh 
 3650* ls
 3651* vim get-docker.sh 
 3652* sudo apt update -y
 3653* cd /etc/apt/sources.list.d/
 3654* l
 3655* cat docker.list
 3656* vim docker.list
 3657* sudo vim docker.list
 3658* sudo apt update -y
 3659* curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh
 3660* cd Down
 3661* cd Downloads
 3662* curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh
 3663* cd ~/Downloads
 3664* curl -fsSL https://get.docker.com -o get-docker.sh\nsh get-docker.sh
 3665* sudo vim /etc/apt/sources.list.d/docker.list
 3666* sudo apt install docker
 3667* sudo for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done
 3668* sudo su
 3669* exit
 3670* clear
 3671* /usr/local/bin/python "/home/carlos-leonardo/Documentos/Cursos/Python/Python 3 Udemy/cursopython2023/aula33exercicio.py"
 3672* ls /mnt
 3673* ls /mnt/disk_sda2/
 3674* mkdir /home/carlos-leonardo/UTILDISK
 3675* mount /mnt/disk_sda2/ /home/carlos-leonardo/UTILDISK/
 3676* sudo mount /mnt/disk_sda2/ /home/carlos-leonardo/UTILDISK/
 3677* sudo fdisk -l
 3678* sudo mount /dev/sda2 /home/carlos-leonardo/UTILDISK/
 3679* sudo chown -R carlos-leonardo carlos-leonardo /home/carlos-leonardo/UTILDISK/
 3680* sudo mount -o remount,rw /home/carlos-leonardo/UTILDISK/
 3681* sudo chown -R carlos-leonardo carlos-leonardo /home/carlos-leonardo/UTILDISK/
 3682* sudo mount -o remount,rw /home/carlos-leonardo/UTILDISK/
 3683* umount /home/carlos-leonardo/UTILDISK/
 3684* sudo mount -o rw /dev/sda2 /home/carlos-leonardo/UTILDISK/
 3685* dmesg
 3686* fdisk -
 3687* fdisk -l
 3688* sudo fdisk -l
 3689* sudo mount -o rw /dev/sda2 /home/carlos-leonardo/UTILDISK/
 3690* clear
 3691* mount -l\n: 1741650057:0;Como obter uuid do disco
 3692* sudo blkid
 3693* sudo mount -a
 3694* systemctl daemon-reload
 3695* sudo mount -a
 3696* sudo su
 3697* blkid -s UUID -o value
 3698* clear
 3699* sudo apt update -y && sudo apt upgrade -y
 3700* apt list --upgradable
 3701* sudo apt upgrade bluetooth bluez-cups bluez-obexd bluez libbluetooth3 -y
 3702* sudo apt autoremove -y
 3703* sudo apt clean
 3704* clear
 3705* sudo su
 3706* exit
 3707* sudo su
 3708* docker image ls -a
 3709* sudo chmod 777 /var/run/docker.sock
 3710* docker image ls -a
 3711* sudo su
 3712* k3d
 3713* k3s
 3714* k3d
 3715* sudo update-alternatives --config x-terminal-emulator
 3716* clear
 3717* ls
 3718* code .
 3719* git init
 3720* git add .
 3721* git config --global --add safe.directory '/home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/Devops Pro/Projetos/Trilha Devops Leo/Projeto 1'
 3722* git commit -m "Inicializando reposit
 3723* rio"
 3724* git remote add origin git@gitlab.com:carlosleosouza/my-python-app.git
 3725* ls
 3726* docker login
 3727* git config --global credential.helper store
 3728* ls
 3729* ls .ssh/
 3730* cat .ssh/id_gitlab.pub 
 3731* k3d cluster create P1pythonappcluster --servers 1 --agents 2
 3732* kubectl get nodes
 3733* curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bashcurl -L https://packages.gitlab.com/in
 3734* curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo bash curl -L https://packages.gitlab.com/in
 3735* gitlab-runner status
 3736* wget https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh
 3737* ./script.deb.sh 
 3738* curl
 3739* curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | sudo curl -L https://packages.gitlab.com/in
 3740* sudo apt-get install gitlab-runner
 3741* sudo apt-get update
 3742* sudo apt-get install gitlab-runner
 3743* ls
 3744* git add .
 3745* git commit -m "Inicializando reposit
 3746* rio"
 3747* docker build -t my-python-app:latest .
 3748* pip install flask --break-system-packages
 3749* docker build -t my-python-app:latest .
 3750* how i solve this problem?\n > [5/5] RUN pip install --no-chache-dir -r requirements.txt:                                                                                              \n2.277                                                                                                                                                      \n2.277 Usage:                                                                                                                                               \n2.277   pip install [options] <requirement specifier> [package-index-options] ...                                                                          \n2.277   pip install [options] -r <requirements file> [package-index-options] ...                                                                           \n2.277   pip install [options] [-e] <vcs project url> ...\n2.277   pip install [options] [-e] <local project path> ...\n2.277   pip install [options] <archive url/path> ...\n2.277 \n2.277 no such option: --no-chache-dir\n------\nDockerfile:5\n--------------------\n   3 |     COPY requirements.txt .\n   4 |     COPY app.py .\n   5 | >>> RUN pip install --no-chache-dir -r requirements.txt\n   6 |     EXPOSE 5000\n   7 |     CMD ["python", "app.py"]   \n--------------------\nERROR: failed to solve: process "/bin/sh -c pip install --no-chache-dir -r requirements.txt" did not complete successfully: exit code: 2
 3751* docker build -t my-python-app:latest .
 3752* docker image ls
 3753* clear
 3754* docker build -t my-python-app:latest .
 3755* docker image ls
 3756* curl -L "https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh" | sudo bash
 3757* sudo apt-get install gitlab-runner
 3758* gitlab-runner status
 3759* clear
 3760* docker tag my-python-app:latest carlosleosouza/my-python-app:latest
 3761* docker push carlosleosouza/my-python-app:latest
 3762* clear
 3763* history | grep git
 3764* git push origin main
 3765* git remote add origin git@gitlab.com:carlosleosouza/my-python-app.git
 3766* git add .
 3767* git commit -m "Corrigindo .gitignore"
 3768* git push origin main
 3769* git commit -m "Corrigindo .gitignore"
 3770* git push origin main
 3771* git fetch origin
 3772* git diff origin/main
 3773* git pull origin main
 3774* ls
 3775* ls -
 3776* ls -la
 3777* git status
 3778* git add .
 3779* git commit -m "Updated files"
 3780* git status
 3781* git push origin main
 3782* ls
 3783* clear
 3784* docker image ls
 3785* docker image rmi my-python-app
 3786* docker image ls
 3787* docker image rmi my-python-app
 3788* docker image rmi carlosleosouza/my-python-app
 3789* git add .
 3790* git commit -m "Updated files"
 3791* git push origin main
 3792* clear
 3793* gitlab-runner register  --url https://gitlab.com  --token glrt-t3_onTZWPcx5LzzrVtgq6nq
 3794* gitlab-runner run
 3795* cd ~/Documentos/UTILDISK/Documentos/Cursos/Devops \Pro
 3796* cd ~/Documentos/UTILDISK/Documentos/Cursos/Devops\ Pro
 3797* cd Projetos/Trilha\ Devops\ Leo/Projeto\ 1/
 3798* ls
 3799* git status
 3800* git commit -m "Updated files"
 3801* git commit -a
 3802* git push origin main
 3803* git add .gitlab-ci.yml
 3804* git commit -a
 3805* git add .
 3806* git commit -a -m "Update .gitlab-ci 1"
 3807* git push origin main
 3808* git config --global --add safe.directory /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/Devops Pro/Projetos/Trilha Devops Leo/Projeto 1/builds/t3_onTZWP/0/carlosleosouza/my-python-app
 3809* git config --global --add safe.directory '/home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/Devops Pro/Projetos/Trilha Devops Leo/Projeto 1/builds/t3_onTZWP/0/carlosleosouza/my-python-app'
 3810* git status
 3811* ls
 3812* ls builds/
 3813* ls builds/t3_onTZWP/0/carlosleosouza/my-python-app/
 3814* git commit -a -m "Update .gitlab-ci 2"
 3815* git add .
 3816* git push origin main
 3817* git add .
 3818* clear
 3819* docker ps
 3820* docker image ls
 3821* docker ps
 3822* docker rm c5e6c4e76883
 3823* docker rm -f c5e6c4e76883
 3824* clear
 3825* docker ps -a
 3826* git add .
 3827* git status
 3828* git commit -a -m "Update .gitlab-ci 3"
 3829* git push origin main
 3830* git add .
 3831* git commit -a -m "Update .gitlab-ci 3"
 3832* git push origin main
 3833* git add .
 3834* git commit -a -m "Update .gitlab-ci 4"
 3835* git push origin main
 3836* git add .
 3837* git commit -a -m "Update .gitlab-ci 5"
 3838* git push origin main
 3839* git add .
 3840* git commit -a -m "Update .gitlab-ci 6"
 3841* git push origin main
 3842* git add .
 3843* git commit -a -m "Update .gitlab-ci 7"
 3844* git push origin main
 3845* git add .
 3846* git commit -a -m "Update .gitlab-ci 8"
 3847* git push origin main
 3848* git add .
 3849* git commit -a -m "Update .gitlab-ci 9"
 3850* git push origin main
 3851* git add .
 3852* git commit -a -m "Update .gitlab-ci 10"
 3853* git push origin main
 3854* clear
 3855* docker image ls
 3856* docker image ls -a
 3857* git add .
 3858* git status
 3859* git commit -a -m "Update .gitlab-ci local"
 3860* git push origin main
 3861* docker ps -a
 3862* kubectl get nodes
 3863* kubectl get config
 3864* kubectl get pods --no-pager
 3865* kubectl get pods
 3866* kubectl get all
 3867* echo $KUBECONFIG
 3868* echo "$KUBE_CONFIG"
 3869* clear
 3870* git add .
 3871* git status
 3872* git commit -a -m "deploy in Kubernetes"
 3873* git push origin main
 3874* git add .
 3875* git commit -a -m "deploy in Kubernetes 1"
 3876* git push origin main
 3877* git status
 3878* git add .
 3879* git commit -a -m "Corre
 3880* o do deployment 1"
 3881* git push origin main
 3882* git add .
 3883* git commit -a -m "Corre
 3884* o do service 1"
 3885* git push origin main
 3886* git add .
 3887* git commit -a -m "Corre
 3888* o do service 2"
 3889* git push origin main
 3890* kubectl get pods
 3891* kubectl get service
 3892* docker ps -a
 3893* docker rmi -f 4abba33cb182
 3894* docker ps -a
 3895* docker stop my-python-app-v1
 3896* docker rmi -f 4abba33cb182
 3897* docker rmi -f my-python-app-v1
 3898* kubectl get pods
 3899* kubectl get service
 3900* kubectl get service my-python-app-service -o jsonpath='{.spec.ports[0].nodePort}'
 3901* kubectl get service my-python-app-service -o wide
 3902* kubectl describe service my-python-app-service -o jsonpath='{.spec.ports[0].nodePort}'
 3903* clear
 3904* systemctl stop apache2
 3905* kubectl get service my-python-app-service -o jsonpath='{.spec.ports[0].nodePort}'
 3906* kubectl get service
 3907* kubectl get service my-python-app-v1-service -o jsonpath='{.spec.ports[0].nodePort}'
 3908* k3d cluster list --no-headers | awk '{print $1}' | xargs -I{} k3d cluster start {}
 3909* k3d cluster list
 3910* k3d cluster list --no-headers | awk '{print $1}' | xargs -I{} k3d cluster start {}
 3911* curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
 3912* helm version
 3913* helm repo add istio https://istio-release.storage.googleapis.com/charts
 3914* helm repo update
 3915* helm install istio-base istio/base
 3916* kubectl create namespace istio-system
 3917* helm install istio-base istio/base
 3918* helm install istio-base istio/base --replace
 3919* helm install istiod istio/istiod
 3920* helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
 3921* helm install prometheus prometheus-community/kube-prometheus-stack
 3922* kubectl --namespace default get pods -l "release=prometheus"
 3923* helm repo add argo https://argoproj.github.io/argo-helm
 3924* helm install argo-cd argo/argo-cd
 3925* docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 vault
 3926* docker pull vault && docker images vault --format "{{.Tag}}"
 3927* docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 vault:1.13.3
 3928* docker ps -a
 3929* docker stop vault
 3930* docker ps -a
 3931* docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 -v vault_data:/vault/data vault:1.13.3
 3932* docker rm vault && docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 -v vault_data:/vault/data vault:1.13.3
 3933* docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 -v vault_data:/vault/data vault:1.13.3
 3934* docker rm -f vault && docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 -v vault_data:/vault/data vault:1.13.3
 3935* docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 -v vault_data:/vault/data vault:1.13.3
 3936* pwd
 3937* mkmdir vault
 3938* mkdir vault
 3939* docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 -v vault_data:/vault/data vault:1.13.3
 3940* docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 -v vault_data:$pwd/vault/data vault:1.13.3
 3941* docker ps -a
 3942* docker rmi -f 8f628d962a39
 3943* docker ps -a
 3944* docker stop vault
 3945* docker rmi -f 8f628d962a39
 3946* docker rm -f vault
 3947* docker ps -a
 3948* docker rm -f my-python-app-v1
 3949* docker ps -a
 3950* docker run -d --name vault -e 'VAULT_DEV_ROOT_TOKEN_ID=root' -p 8200:8200 -v vault_data:$pwd/vault/data vault:1.13.3
 3951* ls vault
 3952* kubectl get pods
 3953* kubectl get service
 3954* docker ps -a
 3955* docker start vault
 3956* docker volume ls
 3957* ls
 3958* ls vault/
 3959* code .
 3960* la
 3961* docker built -t app-node-v1:local .
 3962* docker build -t app-node-v1:local .
 3963* npm install
 3964* pip install npm
 3965* sudo apt install npm -y
 3966* docker build -t app-node-v1:local .
 3967* ls
 3968* npm init -y
 3969* ls
 3970* docker build -t app-node-v1:local .
 3971* docker image ls
 3972* docker ps
 3973* kubectl get deployments
 3974* kubectl scale deployment my-python-app-v1 --all
 3975* kubectl scale deployment my-python-app-v1 --replicas=0
 3976* kubectl scale deployment my-python-app-v1 --replica=0
 3977* kubectl scale deployment --help
 3978* kuebctl get ns
 3979* kubectl get ns
 3980* kubectl get pods -n default
 3981* kubectl edit deployments.apps my-app-python-v1
 3982* kubectl get pods -n default
 3983* k3d
 3984* k3s cluster
 3985* k3s cluster --help
 3986* k3d cluster stop
 3987* k3d cluster stop P1pythonappcluster
 3988* docker ps -a
 3989* docker start vault
 3990* docker ps -a
 3991* docker inspect vault
 3992* history 
 3993* history | grep vault
 3994* curl -kv localhost:8200
 3995* vault kv put secret/db-user username=dbuser password=passwd
 3996* docker exec -it vault vault kv put secret/db-user username=dbuser password=passwd
 3997* docker exec -it vault bash
 3998* docker exec -it vault sh
 3999* vault status
 4000* docker exec -it vault vault status
 4001* docker exec -it vault vault kv put -address="http://127.0.0.1:8200" secret/db-user username=dbuser password=passwd
 4002* docker exec -it vault vault kv put -address="https://127.0.0.1:8200" secret/db-user username=dbuser password=passwd
 4003* docker exec -it vault vault kv put -address="http://127.0.0.1:8200" secret/db-user username=dbuser password=passwd
 4004* export VAULT_TOKEN="root"
 4005* docker exec -it vault vault kv put -address="http://127.0.0.1:8200" secret/db-user username=dbuser password=passwd
 4006* sudo docker exec -it vault export VAULT_TOKEN="root"
 4007* sudo docker exec -it vault sh -c 'export VAULT_TOKEN="root"'
 4008* docker exec -it vault vault kv put -address="http://127.0.0.1:8200" secret/db-user username=dbuser password=passwd
 4009* sudo docker exec -it vault vault secrets list
 4010* sudo docker exec -it vault vault secrets list -address="http://127.0.0.1:8200"
 4011* sudo docker exec -it vault vault secrets list --address="http://127.0.0.1:8200"
 4012* sudo docker exec -it vault vault secrets enable -path=secret kv
 4013* sudo docker exec -it vault vault secrets enable -path=secret kv -address="http://127.0.0.1:8200"
 4014* sudo docker exec -it vault vault secrets enable -address="http://127.0.0.1:8200" -path=secret kv
 4015* sudo docker logs vault
 4016* sudo docker exec -it vault vault login token=root && sudo docker exec -it vault vault secrets enable -address="http://127.0.0.1:8200" -path=secret kv
 4017* sudo docker exec -it vault vault login token=root && sudo docker exec -it vault sh -c 'export VAULT_ADDR="http://127.0.0.1:8200" && vault secrets enable -path=secret kv'
 4018* sudo docker exec -it vault sh -c 'export VAULT_ADDR="http://127.0.0.1:8200" && vault login token=root && vault secrets enable -path=secret kv'
 4019* sudo docker exec -it vault vault secrets disable secret/\nsudo docker exec -it vault vault secrets enable -path=secret kv
 4020* sudo docker exec -it vault sh -c 'export VAULT_ADDR="http://127.0.0.1:8200" && vault secrets disable secret && vault secrets enable -path=secret kv'
 4021* sudo docker exec -it vault vault secrets list
 4022* sudo docker exec -it vault sh -c 'export VAULT_ADDR="http://127.0.0.1:8200" && vault secrets list'
 4023* sudo docker exec -it vault vault secrets enable -path=secret kv -address="http://127.0.0.1:8200"
 4024* sudo docker exec -it vault vault secrets enable -address="http://127.0.0.1:8200" -path=secret kv
 4025* docker exec -it vault vault kv put -address="http://127.0.0.1:8200" secret/db-user username=dbuser password=passwd
 4026* docker exec -it vault vault kv get secret/db-user
 4027* docker exec -it vault vault kv get -address="http://127.0.0.1:8200" secret/db-user
 4028* git sytatus
 4029* clear
 4030* git status
 4031* clear
 4032* docker image ls
 4033* docker ps -a
 4034* docker image rmi app-node-v1
 4035* docker image rmi app-node-v1:local
 4036* git add .
 4037* git commit -a -m "Deploy node app 1"
 4038* k3d cluster start P1pythonappcluster
 4039* kubectl get nodes
 4040* kubectl get all
 4041* kubectl get ns
 4042* kubectl get deployments -n kube-system
 4043* git push origin main
 4044* kubetl events
 4045* kubectl events
 4046* gitlab-runner start
 4047* gitlab-runner run
 4048* git add .
 4049* git commit -a -m "Deploy node app 2"
 4050* git push origin main
 4051* kubectl get pods
 4052* kubectl stop argo-cd-argocd-application-controller-0
 4053* kubectl get deploy
 4054* kubectl scale deploy argo-cd-argocd-applicationset-controller --replicas=0
 4055* kubectl scale deploy argo-cd-argocd-dex-server --replicas=0
 4056* kubectl scale deploy argo-cd-argocd-notification-controller --replicas=0
 4057* kubectl scale deploy argo-cd-argocd-notifications-controller --replicas=0
 4058* kubectl scale deploy argo-cd-argocd-redis --replicas=0
 4059* kubectl scale deploy argo-cd-argocd-repo-server --replicas=0
 4060* kubectl scale deploy argo-cd-argocd-server --replicas=0
 4061* clear
 4062* kubectl get deploy
 4063* kubectl scale deploy prometheus-grafana --replicas==0
 4064* kubectl scale deploy prometheus-grafana --replicas=0
 4065* kubectl scale deploy prometheus-kube-prometheus-operator --replicas=0
 4066* kubectl scale deploy prometheus-kube-state-metrics --replicas=0
 4067* clear
 4068* kubectl get deploy
 4069* clear
 4070* kubectl get pods
 4071* kubectl delete pods alertmanager-prometheus-kube-prometheus-alertmanager-0 argo-cd-argocd-appplication-controller-0
 4072* kubectl delete pods alertmanager-prometheus-kube-prometheus-alertmanager-0 argo-cd-argocd-application-controller-0
 4073* kubectl get pods
 4074* kubectl get replicasets
 4075* kubectl delete pod alertmanager-prometheus-kube-prometheus-alertmanager-0
 4076* kubectl get pods
 4077* kubectl get service
 4078* kubectl get all
 4079* kubectl scale statefulset alertmanager-prometheus-kube-prometheus-alertmanager --replica=0
 4080* kubectl scale statefulset alertmanager-prometheus-kube-prometheus-alertmanager --replicas=0
 4081* kubectl scale statefulset statefulset.apps/argo-cd-argocd-application-controller --replicas=0
 4082* kubectl scale statefulset argo-cd-argocd-application-controller --replicas=0
 4083* kubectl scale statefulset prometheus-prometheus-kube-prometheus-prometheus --replicas=0
 4084* clear
 4085* kubectl get all
 4086* kubectl scale deployment istiod --replcias=0
 4087* kubectl scale deployment istiod --replicas=0
 4088* kubectl delete pods prometheus-prometheus-node-exporter-97vhh prometheus-prometheus-node-exporter-f7wq5 prometheus-prometheus-node-exporter-kfdd5
 4089* clear
 4090* kubectl get all
 4091* kubectl scale daemonset prometheus-prometheus-node-exporter --replicas=0
 4092* kubectl scale daemonsets prometheus-prometheus-node-exporter --replicas=1
 4093* clear
 4094* git add .
 4095* git commit -a -m "Deploy node app 3"
 4096* git push origin main
 4097* git add .
 4098* git commit -a -m "Deploy node app 4"
 4099* git push origin main
 4100* npm test --help
 4101* npm help test
 4102* ls
 4103* gti add .
 4104* git add .
 4105* git commit -a -m "Deploy node app 5"
 4106* git push origin main
 4107* git add .
 4108* git commit -a -m "Deploy node app 6"
 4109* git push origin main
 4110* git add .
 4111* git commit -a -m "Deploy node app 7"
 4112* git push origin main
 4113* clear
 4114* docker image ls
 4115* docker image rmi localhost:5000/app-node-v1 carlosleosouza/my-python-app-v1
 4116* docekr image ls
 4117* docker image ls
 4118* docker image rmi 443ccf6f612a
 4119* docker image ls
 4120* git add .
 4121* git commit -a -m "Deploy node app 8"
 4122* git push origin main
 4123* git add .
 4124* git commit -a -m "Deploy node app 9"
 4125* git push origin main
 4126* kubectl get pods
 4127* git add .
 4128* git commit -a -m "Deploy node app 10"
 4129* git push origin main
 4130* kubectl get pods
 4131* kubectl describe pod app-node-v1-6df79c5d4b-5g4b5
 4132* git add .
 4133* git commit -a -m "Deploy node app 11"
 4134* git statuis
 4135* git status
 4136* git push origin main
 4137* kubectl get pods
 4138* docker image ls
 4139* docker image rmi 1092165c5ac7 b02a2ec8b88f 0d8b4d865abc 301feb73bb6a
 4140* docker image rmi -f 1092165c5ac7 b02a2ec8b88f 0d8b4d865abc 301feb73bb6a
 4141* clear
 4142* docker image ls
 4143* git add .
 4144* git status
 4145* git commit -a -m "Deploy node app v1.0_1"
 4146* git push origin main
 4147* docker image ls
 4148* kubectl get pods
 4149* kubectl delete pods app-node-v1-6df79c5d4b-5g4b5 app-node-v1-795484dd78-9fht2 app-node-v1-849f577484-wxcjf
 4150* kubectl get pods
 4151* kubectl describe deploy app-node-v1
 4152* kubectl logs -f app-node-v1-6df79c5d4b-kt2j7
 4153* kubectl get pods
 4154* kubectl logs -f app-node-v1-795484dd78-9m5vl
 4155* docker image ls
 4156* docker image rmi 34021c3e59a3 34021c3e59a3 c2b068399c25 9df3dac7a63b
 4157* docker image rmi -f 34021c3e59a3 34021c3e59a3 c2b068399c25 9df3dac7a63b
 4158* clear
 4159* ls
 4160* docker build -t app-node-v1:local .
 4161* docker image ls
 4162* docker run -d --name test carlosleosouza/app-node-v1:latest
 4163* docker ps -a
 4164* docker logs -f ce3379a05125
 4165* docker image prune -af
 4166* docker image ls
 4167* docker image rmi -f 34021c3e59a3
 4168* kubectl get pods
 4169* git status
 4170* git add .
 4171* git status
 4172* git commit -m "Update files server.js"
 4173* git push origin main
 4174* docker image ls
 4175* kubectl get pods
 4176* docker run -d --name test carlosleosouza/app-node-v1:latest
 4177* docker run -d --name test1 carlosleosouza/app-node-v1:latest
 4178* docker ps -a
 4179* docker logs -f 8662b1ca62f9
 4180* k3d cluster stop P1pythonappcluster
 4181* sudo apt install sublime-text
 4182* sudo vim .zshrc
 4183* vim .zshrc
 4184* sudo vim ~/.zshrc
 4185* cd ..
 4186* ls
 4187* cd Projeto\ 2/
 4188* ls
 4189* git remote add origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 4190* git init
 4191* git remote add origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 4192* git config --global --add safe.directory '/home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/Devops Pro/Projetos/Trilha Devops Leo/Projeto 2'
 4193* git branch -M main
 4194* gitlab-runner start
 4195* gitlab-runner run
 4196* git push -u origin main
 4197* git push -uf origin main
 4198* ls -as
 4199* git push -Uf origin main
 4200* git branch -M main
 4201* git push -uf origin main
 4202* git push -u origin main
 4203* git branch --show-current
 4204* git ls-remote --heads origin
 4205* git remote -v
 4206* git remote set-url origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 4207* git remote add origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 4208* git remote set-url origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 4209* grset origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 4210* gr remote -v
 4211* git remote -v
 4212* git add .
 4213* git status
 4214* git commit -m "Primeiro commit"
 4215* git push -u origin main
 4216* git config --global credential.helper store
 4217* git credential-cache exit
 4218* git push
 4219* git push --set-upstream origin main
 4220* git config --global credential.helper store
 4221* git push --set-upstream origin main
 4222* git remote set-url origin https://oauth2:[REDACTED-GITLAB-TOKEN]@gitlab.com/carlosleosouza/devops-app-v1.git
 4223* gp push --set-upstream origin main
 4224* gp push -u origin main
 4225* git branch -a
 4226* git checkout -b main
 4227* git add .
 4228* git commit -m "Primeiro commit"
 4229* git commit -m "Primeiro commit 1"
 4230* g commit -m "Primeiro commit 1"
 4231* echo "Initial content" > README.md\ng add README.md\ng commit -m "Primeiro commit 1"
 4232* g push
 4233* g push --set-upstream origin main
 4234* g pull origin main
 4235* git config pull.rebase false
 4236* g pull origin main
 4237* g pull origin main --allow-unrelated-histories
 4238* vim README.md
 4239* g add README.md
 4240* g commit -m "Resolved merge conflict in README.md"
 4241* g push origin main
 4242* g status
 4243* kubectl get pods
 4244* k3d cluster create --help
 4245* k3d cluster create devops-app-v1-cluster --agents 2 --servers 1
 4246* kubectl cluster-info
 4247* kubectl get nodes
 4248* git config --global --add safe.directory '/home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/Devops Pro/Projetos/Trilha Devops Leo/Projeto 1/builds/t3_onTZWP/0/carlosleosouza/devops-app-v1'
 4249* git config --global --add safe.directory '/home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/Devops Pro/Projetos/Trilha Devops Leo/Projeto 1/builds/t3_onTZWP/0/carlosleosouza/devops-app-v1'\n: 1742345954:0;git config --global safe.directory '*'\n: 1742345958:0;git config --global safe.directory '*'
 4250* sudo chown -R $USER:$USER '/home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/Devops Pro/Projetos/Trilha Devops Leo/Projeto 1/builds/t3_onTZWP/0/carlosleosouza/devops-app-v1'
 4251* git add .
 4252* git commit -m "Segunda corre
 4253* o pipeline"
 4254* git push --set-upstream origin main
 4255* git add .
 4256* git commit -m "Terceira corre
 4257* o pipeline"
 4258* git push --set-upstream origin main
 4259* docker image ls
 4260* docker image rm -f 29c11afb66c6 1c9929d6ce95 a83c62ebbbbb f666ae920926 
 4261* docker image ls
 4262* git add .
 4263* git commit -m "Quarta corre
 4264* o pipeline"
 4265* git push --set-upstream origin main
 4266* git add .
 4267* docker image ls
 4268* git add .
 4269* git commit -m "Quinta corre
 4270* o pipeline"
 4271* git push --set-upstream origin main
 4272* kubectl get pods
 4273* git commit -m "Corre
 4274* o do deployment"
 4275* git add .
 4276* git commit -m "Corre
 4277* o do deployment"
 4278* git push --set-upstream origin main
 4279* kuebctl get pods
 4280* kubectl get pods
 4281* kubectl logs -f devops-app-v1-deploy-77cf687647-nk7wd
 4282* kubectl describe pod devops-app-v1-deploy-77cf687647-nk7wd
 4283* docker login
 4284* docker pull devops-app-v1:latest
 4285* docker pull carlosleosouza/devops-app-v1:latest
 4286* docker image ls
 4287* docker push carlosleosouza/devops-app-v1:latest
 4288* docker push carlosleosouza/devops-app-v1:local
 4289* docker pull carlosleosouza/devops-app-v1:local
 4290* docker tag devops-app-v1:local carlosleosouza/devops-app-v1:latest
 4291* docker push carlosleosouza/devops-app-v1:latest
 4292* docker image ls
 4293* kubectl get pods
 4294* kubectl get service
 4295* kubectl get pods
 4296* kubectl describe pod devops-app-v1-deploy-5c7f895558-jgjxn
 4297* ping 10.42.0.5
 4298* exit
 4299* kubectl get pods
 4300* clear
 4301* kubectl get all
 4302* gitlab-runner start
 4303* gitlab-runner run
 4304* kubectl get all
 4305* git add .
 4306* git status
 4307* kubectl get all
 4308* k3d cluster
 4309* k3d cluster edit
 4310* k3d cluster edit devops-app-v1-cluster --port 8000:30000@loadbalancer
 4311* k3d cluster edit devops-app-v1-cluster --port-add 8000:30000@loadbalancer
 4312* clear
 4313* kubectl get all
 4314* kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.9/config/manifests/metallb-native.yaml
 4315* vim metalb-config.yaml
 4316* kubectl apply -f metallb-config.yaml
 4317* git add .
 4318* git commit -m "Cria
 4319* o metallb"
 4320* git push --set-upstream origin main
 4321* kubectl apply -f metallb-config.yaml
 4322* kubectl get all
 4323* kubectl get ns
 4324* kubectl get pods -n metallb-system
 4325* clear
 4326* sudo apt install microk8s
 4327* sudo snap install microk8s --classic
 4328* sudo apt install snap
 4329* sudo snap install multipass
 4330* sudo apt install multipass
 4331* sudo apt update && sudo apt install -y lxd\n: 1742517331:0;sudo snap install lxd
 4332* snap
 4333* apt install snap
 4334* snapd
 4335* snap
 4336* sudo apt install snapd
 4337* sudo apt update
 4338* sudo apt install snapd
 4339* sudo apt-get install snapd\n: 1742517514:0;cat /etc/apt/sources.list
 4340* sudo add-apt-repository -y ppa:snappy-dev/snap\nsudo apt-get update\n: 1742517535:0;sudo add-apt-repository -y universe\nsudo apt-get update\nsudo apt-get install -y snapd\n: 1742517548:0;wget https://launchpad.net/ubuntu/+archive/primary/+files/snapd_2.58.3_amd64.deb\nsudo dpkg -i snapd_2.58.3_amd64.deb\nsudo apt-get install -f\n: 1742517555:0;wget http://archive.ubuntu.com/ubuntu/pool/main/s/snapd/snapd_2.58.3_amd64.deb\nsudo dpkg -i snapd_2.58.3_amd64.deb\nsudo apt-get install -f\n: 1742517563:0;sudo add-apt-repository -y ppa:snappy-dev/snap\nsudo apt-get update\nsudo apt-get install -y snapd\n: 1742517593:0;sudo apt-get install flatpak
 4341* clear
 4342* kubectl get pods
 4343* k3d cluster stop devops-app-v1-cluster
 4344* sudo mv /etc/apt/preferences.d/nosnap.pref .
 4345* ls
 4346* mv nosnap.pref ~/Documentos/
 4347* apt update
 4348* sudo apt install snapd
 4349* sudo snap install microk8s --classic\n: 1742518349:0;microk8s.status
 4350* sudo usermod -a -G microk8s carlos-leonardo
 4351* sudo chown -R carlos-leonardo ~/.kube
 4352* microk8s.status
 4353* microk8s status
 4354* sudo usermod -a -G microk8s carlos-leonardo
 4355* cat /etc/group | grep -i micro
 4356* sudo usermod -a -G microk8s carlos-leonardo\nsudo chown -R carlos-leonardo ~/.kube\nnewgrp microk8s\n: 1742518454:0;ls
 4357* microk8s status
 4358* clear
 4359* pwd
 4360* microk8s kubectl get nodes
 4361* kubectl get nodes
 4362* clear
 4363* sudo snap install multipass
 4364* clear
 4365* sudo su
 4366* clear
 4367* sudo apt update && sudo apt install -y lxd
 4368* sudo snap install lxd
 4369* lxd init --auto
 4370* sudo lxd init --auto
 4371* lxc list
 4372* sudo lxc list
 4373* lxc launch ubuntu:22.04 node1 -c limits.cpu=1 -c limits.memory=2GB\nlxc launch ubuntu:22.04 node2 -c limits.cpu=1 -c limits.memory=2GB\nlxc launch ubuntu:22.04 node3 -c limits.cpu=1 -c limits.memory=2GB\n: 1742519094:0;sudo su
 4374* exit
 4375* clear
 4376* sudo su
 4377* exit
 4378* sudo su
 4379* vim ~/.zshrc 
 4380* source ~/.zshrc
 4381* cler
 4382* clear
 4383* docker ps -a
 4384* kubectl get all
 4385* azcli 
 4386* az cli
 4387* clear
 4388* vim ~/.zshrc
 4389* clear
 4390* exit
 4391* vim ~/.zshrc
 4392* sudo su
 4393* source ~/.zshrc
 4394* vim ~/.zshrc
 4395* sudo su
 4396* pwd
 4397* sudo su
 4398* openvpn3
 4399* sudo apt install openvpn3
 4400* sudo apt install openvpn
 4401* openvpn
 4402* ls
 4403* ping 192.168.1.190
 4404* openvpn3 session-start --config /home/carlos-leonardo/VPNs/PGMRECBN/PGMRECBN.ovpn 
 4405* openvpn session-start --config /home/carlos-leonardo/VPNs/PGMRECBN/PGMRECBN.ovpn
 4406* openvpn --config /home/carlos-leonardo/VPNs/PGMRECBN/PGMRECBN.ovpn
 4407* openvpn --config /home/carlos-leonardo/VPNs/PGMRECBN/PGMRECBN.ovpn --data-ciphers AES-256-GCM:AES-128-GCM:CHACHA20-POLY1305
 4408* cd /home/carlos-leonardo/VPNs/
 4409* ls
 4410* cd /home/carlos-leonardo/VPNs/
 4411* ls
 4412* cd PGMRECBN/
 4413* ls
 4414* openvpn
 4415* openvpn --open-session
 4416* openvpn --config PGMRECBN.ovpn
 4417* cd ..
 4418* ls
 4419* cd PGMRECFC/
 4420* openvpn --config PGMRECFC.ovpn 
 4421* chmod 600 filipe.pereira2.key
 4422* openvpn --config PGMRECFC.ovpn 
 4423* sudo openvpn --config PGMRECFC.ovpn 
 4424* microk8s status
 4425* sudo microk8s status
 4426* sudo microk8s enable dashboard
 4427* sudo microk8s kubectl describe secret -n kube-system microk8s-dashboard-token
 4428* sudo microk8s dashboard-proxy
 4429* sudo su
 4430* sudo microk8s enable ingress
 4431* sudo microk8s kubectl get pods --all-namespaces
 4432* sudo usermod -aG microk8s root
 4433* newgrp microk8s
 4434* pip install thefuck --break-system-packages
 4435* sudo pip install thefuck --break-system-packages
 4436* pwd
 4437* exit
 4438* sudo usermod -aG microk8s root
 4439* newgrp microk8s
 4440* alias kubectl='microk8s kubectl'
 4441* exit
 4442* alias kubectl='microk8s kubectl'
 4443* kubectl get all
 4444* kubectl get nodes
 4445* microk8s kubectl get nodes
 4446* sudo microk8s kubectl get nodes
 4447* microk8s enable dns ingress storage metrics-server\n: 1742940643:0;which microk8s\n: 1742940655:0;sudo microk8s enable dns ingress storage metrics-server\n: 1742940677:0;sudo microk8s status --wait-ready
 4448* w
 4449* clear
 4450* w
 4451* sudo su
 4452* sudo usermod -aG microk8s $USER
 4453* sudo chown -R $USER ~/.kube\nmkdir -p ~/.kube\nmicrok8s config > ~/.kube/config\nchmod 600 ~/.kube/config
 4454* sudo chown -R $USER ~/.kube\nsudo mkdir -p ~/.kube\nsudo microk8s config > ~/.kube/config\nsudo chmod 600 ~/.kube/config
 4455* sudo newgrp microk8s
 4456* newgrp microk8s
 4457* kubectl get nodes
 4458* exit
 4459* kubectl get nodes
 4460* cat ~/.zshrc | grep alias
 4461* unalias kubectl
 4462* kubectl get nodes
 4463* kubectl describe nodes
 4464* microk8s status
 4465* sudo microk8s status
 4466* sudo microk8s enable dashboard
 4467* clear
 4468* sudo apt update -y
 4469* sudo apt full-upgrade -y
 4470* sudo apt upgrade -y
 4471* sudo apt autoremove
 4472* exit
 4473* sudo su
 4474* git init
 4475* git status
 4476* git config --global --add safe.directory /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/SRE-LAB
 4477* git status
 4478* git remote add origin https://gitlab.com/carlosleosouza/sre-lab.git
 4479* git branch -M main
 4480* git push -uf origin main
 4481* git add .
 4482* git status
 4483* git commit -m "Initial commit"
 4484* git push -uf origin main
 4485* git remote -v\n: 1743027707:0;git config --global credential.helper cache\n: 1743027713:0;git push -uf origin main\n: 1743027739:0;git push -u origin main\n: 1743027745:0;git pull origin main\n: 1743027753:0;git config pull.rebase true && git pull origin main\n: 1743027760:0;git push -u origin main\n: 1743027820:0;git add .
 4486* git commit -m "Corrigido diret
 4487* ri do ansible"
 4488* git push origin main
 4489* gp origin main
 4490* sudo gitlab-runner start
 4491* gitlab-runner start
 4492* sudo apt install gitlab-runner -y
 4493* sudo gitlab-runner start
 4494* sudo gitlab-runner status
 4495* sudo gitlab-runner run
 4496* gitlab-runner register  --url https://gitlab.com  --token glrt-t3_qHNT7asCC5KFLtMe73B3
 4497* sudo gitlab-runner run
 4498* gitlab-runner register  --url https://gitlab.com  --token glrt-t3_qHNT7asCC5KFLtMe73B3
 4499* sudo gitlab-runner run
 4500* gitlab-runner status
 4501* gitlab-runner start
 4502* gitlab-runner status
 4503* sudo gitlab-runner run
 4504* gitlab-runner stop
 4505* gitlab-runner status
 4506* gitlab-runner start
 4507* gitlab-runner run
 4508* gitlab-runner stop
 4509* sudo su
 4510* gitlab-runner status
 4511* gitlab-runner register  --url https://gitlab.com  --token glrt-t3_sqE3n7nuFDT9yyzdBibB
 4512* gitlab-runner run
 4513* sudo chown -R gitlab-runner:gitlab-runner /home/carlos-leonardo/builds
 4514* sudo chmod -R 755 /home/carlos-leonardo/builds
 4515* gitlab-runner run
 4516* exit
 4517* git config --global --add safe.directory '*'
 4518* g
 4519* clear
 4520* gitlab-runner restart
 4521* gitlab-runner status
 4522* whoami
 4523* gitlab-runner run
 4524* ls
 4525* cd ~/Documentos/UTILDISK/Documentos/Cursos/LABs/SRE-LAB/
 4526* ls
 4527* git add .
 4528* ls
 4529* ls -as
 4530* git add .
 4531* git rm --cached builds/t3_onTZWP/0/carlosleosouza/sre-lab
 4532* git rm --cached ~/builds/t3_onTZWP/0/carlosleosouza/sre-lab
 4533* ls ~
 4534* git rm --cached ~/builds/t3_onTZWP/0/carlosleosouza/sre-lab
 4535* ls -la
 4536* git rm --cached builds/
 4537* git rm --cached ~/builds/
 4538* clear
 4539* git add .
 4540* git rm --cached builds/t3_onTZWP/0/carlosleosouza/sre-lab
 4541* ls -l builds
 4542* git rm --cached builds/t3_sqE3n7/0/carlosleosouza/sre-lab
 4543* git status --porcelain
 4544* ls
 4545* ls builds/
 4546* git rm --cached builds/t3_sqE3n7/0/carlosleosouza/sre-lab
 4547* ls builds/
 4548* ls builds/t3_onTZWP/
 4549* ls builds/t3_onTZWP/0
 4550* ls builds/t3_onTZWP/0/carlosleosouza/
 4551* ls builds/t3_onTZWP/0/carlosleosouza/sre-lab/
 4552* git rm --cached builds/t3_onTZWP/0/carlosleosouza/sre-lab/
 4553* git rm builds/t3_onTZWP/0/carlosleosouza/sre-lab/
 4554* rm -rf builds/
 4555* git add .
 4556* git commit -m "Diret
 4557* rios corrigidos"
 4558* git push -u origin main
 4559* git remote set-url origin https://[REDACTED-GITLAB-TOKEN]@gitlab.com/carlsoleosouza/sre-lab.git
 4560* git push -u origin main
 4561* git remote set-url origin https://oauth:[REDACTED-GITLAB-TOKEN]@gitlab.com/carlsoleosouza/sre-lab.git
 4562* git push -u origin main
 4563* curl --request POST --header "PRIVATE-TOKEN: {{GITLAB_TOKEN}}" \\n     --header "Content-Type: application/json" \\n     --data '{"name": "sre-lab", "visibility": "private"}' \\n     "https://gitlab.com/api/v4/projects"\n: 1743034640:0;echo $GITLAB_TOKEN
 4564* git push -u origin main
 4565* git remote set-url origin https://oauth:[REDACTED-GITLAB-TOKEN]@gitlab.com/carlosleosouza/sre-lab.git
 4566* gp origin main
 4567* k3d
 4568* history | grep k3d
 4569* k3d cluster
 4570* k3d cluster list
 4571* k3d cluster delete P1pythonappcluster
 4572* git add .
 4573* git rm --cached builds/t3_sqE3n7/0/carlosleosouza/sre-lab
 4574* git rm -f --cached builds/t3_sqE3n7/0/carlosleosouza/sre-lab
 4575* git add .
 4576* ga .
 4577* git commit -m "Updated changes"
 4578* git push -u origin main
 4579* k3d cluster list
 4580* k3d cluster delete sre-cluster
 4581* k3d cluster delete devops-app-v1-cluster
 4582* ga .
 4583* git commit -m "Corrigindo diret
 4584* rio kubeconfig"
 4585* git push -u origin main
 4586* git add .
 4587* git commit -m "Corrigindo diret
 4588* rio kubeconfig2"
 4589* git push -u origin main
 4590* git add .
 4591* git commit -m "Corrigindo ansible"
 4592* git push -u origin main
 4593* git add .
 4594* git commit -m "Corrigindo ansible2"
 4595* git push -u origin main
 4596* git add .
 4597* ga .
 4598* git commit -m "Ansible3"
 4599* git push -u origin main
 4600* git add .
 4601* git commit -m "Ansible4"
 4602* git push -u origin main
 4603* kubectl get ns
 4604* kubectl get all
 4605* microk8s stop
 4606* sudo microk8s stop
 4607* kubectl get all
 4608* kubectl get nodes
 4609* k3d status
 4610* k3d cluster list
 4611* k3d
 4612* k3d cluster 
 4613* k3d
 4614* echo $KUBECONFIG
 4615* k3d kubeconfig get sre-cluster > ~/.kube/config
 4616* kubectl config current-context
 4617* kubectl get nodes
 4618* kubectl get pods
 4619* git add .
 4620* git commit -m "Ansible5"
 4621* git push -u origin main
 4622* ps aux | grep ansible-playbook
 4623* pkill ansible-playbook
 4624* pkill -f ansible-playbook
 4625* ps aux | grep ansible-playbook
 4626* kill 668800
 4627* kill 669059
 4628* ps aux | grep ansible-playbook
 4629* pkill -f ansible-playbook
 4630* ps aux | grep ansible-playbook
 4631* git status
 4632* git add .
 4633* git commit -m "Ansible6"
 4634* git push -u origin main
 4635* rm -rf builds/
 4636* git add .
 4637* git commit -m "Ansible7"
 4638* git push -u origin main
 4639* ps aux | grep ansible-playbook
 4640* kubectl get ns
 4641* cd Ansible/
 4642* ls
 4643* ansible-playbook -i inventory.ini playbook.yaml
 4644* git add .
 4645* git commit -m "Ansible8"
 4646* ga .
 4647* git commit -m "Ansible8"
 4648* git commit -m "Ansible9"
 4649* git push -u origin main
 4650* git add .gitlab-ci.yml
 4651* ga .gitlab-ci.yml
 4652* git add .
 4653* git commit -m "Ansible9"
 4654* git commit -a -m "Deploy node app v1.0_1"
 4655* git push -u origin main
 4656* git add .
 4657* git commit -a -m "Corrigido gitlabci"
 4658* git status
 4659* git commit -a
 4660* git push -u origin main
 4661* kubectl get ns
 4662* kubectl get pods
 4663* kubectl get all
 4664* kubectl get nodes
 4665* kubectl get all
 4666* cd ..
 4667* git add .
 4668* git commit -a
 4669* cd Kubernetes/
 4670* kubectl apply -f .
 4671* kubectl get service
 4672* kubectl get deployments.apps 
 4673* kubectl get deployments
 4674* microk8s status
 4675* k3d cluster list
 4676* k3d delete cluster sre-cluster
 4677* sudo k3d cluster delete sre-cluster
 4678* sudo usermod -aG microk8s $USER
 4679* mkdir -p ~/.kube\nsudo chown -R $USER ~/.kube\nsudo chmod -R 700 ~/.kube
 4680* sudo chown -R $USER ~/.kube/config\nsudo chmod 600 ~/.kube/config
 4681* newgrp microk8s
 4682* micrk8s status
 4683* microk8s status
 4684* exit
 4685* microk8s status
 4686* groups
 4687* exit
 4688* microk8s status
 4689* sudo snap install microk8s --classic\n: 1743064764:0;microk8s status
 4690* sudo snap install microk8s --classic\n: 1743064811:0;sudo snap alias microk8s.kubectl kubectl
 4691* kubectl status
 4692* microk8s status
 4693* sudo snap unalias kubectl
 4694* sudo chown -f -R $USER ~/.kube\nsudo chmod -R 700 ~/.kube\nsudo chown -R $USER ~/.kube/config\nsudo chmod 600 ~/.kube/config\n: 1743064910:0;microk8s status --wait-ready
 4695* systemctl status snap.microk8s.daemon-k8s
 4696* microk8s stop
 4697* sudo snap install microk8s --classic
 4698* snap help refresh
 4699* sudo snap refresh\n: 1743065042:0;sudo microk8s stop\nsudo snap remove microk8s\nsudo snap install microk8s --classic\nsudo usermod -aG microk8s $USER\n: 1743065097:0;microk8s status --wait-ready
 4700* sudo microk8s status --wait-ready
 4701* sudo su
 4702* sudo newgrp microk8s
 4703* microk8s status
 4704* sudo find / -name microk8s
 4705* sudo which microk8s
 4706* vim ~/.zshrc
 4707* source ~/.zshrc
 4708* microk8s status
 4709* clear
 4710* microk8s kubectl get nodes
 4711* k3d cluster stop $(k3d cluster list -o json | jq -r '.[].name')\n: 1743065677:0;clear
 4712* kubectl get pods
 4713* kubectl get nodes
 4714* microk8s kubectl get nodes
 4715* sudo snap alias microk8s.kubectl kubectl
 4716* kubectl get nodes
 4717* sudo snap unalias kubectl
 4718* microk8s.status
 4719* microk8s.kubectl get nodes
 4720* sudo alias microk8s.kubectl kubectl
 4721* alias
 4722* vim ~/.zshrc
 4723* echo $ZSH_CUSTOM
 4724* vim $ZSH_CUSTOM/aliases.zsh
 4725* vim ~/.zshrc
 4726* source ~/.zshrc
 4727* echo $ZSH_CUSTOM
 4728* vim ~/.zshrc
 4729* source ~/.zshrc
 4730* echo $ZSH_CUSTOM
 4731* echo $ZSH
 4732* vim ~/.zshrc
 4733* source ~/.zshrc
 4734* vim ~/.zshrc
 4735* source ~/.zshrc
 4736* vim ~/.bashrc 
 4737* alias
 4738* vim ~/.zshrc
 4739* source ~/.zshrc
 4740* kubectl
 4741* kubectl get nodes
 4742* vim ~/.zshrc
 4743* source ~/.zshrc
 4744* microk8s config > ~/.kube/microk8s-config
 4745* KUBECONFIG=~/.kube/microk8s-config kubectl config view --merge --flatten > ~/.kube/config
 4746* kubectl config use-context microk8s\nkubectl get nodes
 4747* clesar
 4748* clear
 4749* exit
 4750* clear
 4751* sudo snap install multipass
 4752* cd ..
 4753* git clone git@github.com:carlosleosouza/girus-cli.git
 4754* ls
 4755* cd girus-cli/
 4756* ls
 4757* # For AMD64 / x86_64\n[ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.27.0/kind-linux-amd64\n# For ARM64\n[ $(uname -m) = aarch64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.27.0/kind-linux-arm64\nchmod +x ./kind\nsudo mv ./kind /usr/local/bin/kind
 4758* sudo mv ./kind /usr/local/bin/kind
 4759* sudo su
 4760* curl -fS https://girus.linuxtips.io | bash
 4761* girus create cluster
 4762* multipass shell master
 4763* sudo multipass shell master
 4764* multipass authenticate
 4765* multipass authenticate --passphrase @nn@cl@r@
 4766* multipass version
 4767* sudo usermod -aG libvirt $(whoami)
 4768* groups
 4769* microk8s
 4770* multipass version
 4771* multipass list
 4772* microk8s status
 4773* microk8s get nodes
 4774* microk8s kubectl get nodes
 4775* microk8s kubectl get nodes | cut -f 1
 4776* microk8s kubectl get nodes | cut -f 1 | tail -n +2
 4777* microk8s kubectl get nodes | cut -f 1 | tail -n +2 | xargs -I {} echo {}
 4778* microk8s kubectl get nodes | cut -d ' '
 4779* microk8s kubectl get nodes | cut -d ' ' -f 1
 4780* microk8s kubectl get nodes | cut -d ' ' -f 2
 4781* microk8s kubectl get nodes | cut -d ' ' -f 1
 4782* microk8s kubectl get nodes | awk '{print $1}'
 4783* microk8s enable prometheus grafana
 4784* microk8s enable observability
 4785* microk8s status --wait-ready --timeout 300
 4786* microk8s enable observability --timeout=300
 4787* microk8s kubectl get pods -A
 4788* microk8s status
 4789* microk8s enable dashboard
 4790* microk8s kubectl describe secret -n kube-system microk8s-dashboard-token > tokendash.txt
 4791* cat tokendash.txt
 4792* mv tokendash.txt ../LAB-Devops/
 4793* cd ../LAB-Devops/
 4794* ls
 4795* clear
 4796* microk8s enable prometheus grafana
 4797* microk8s enable observability --timeout=300
 4798* sudo su
 4799* microk8s enable prometheus
 4800* miccrok8s status
 4801* microk8s status
 4802* kubectl get pods
 4803* kubectl get pods --all-namespaces
 4804* kubectl get services --all-namespaces
 4805* kubectl get all
 4806* kubectl get all --all-namespaces
 4807* microk8s enable dashboard
 4808* microk8s dashboard-proxy
 4809* cd /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 4810* ls
 4811* git remote add origin https://gitlab.com/carlosleosouza/devops-app.git
 4812* ls
 4813* ls -la
 4814* git init
 4815* git remote add origin https://gitlab.com/carlosleosouza/devops-app.git
 4816* git branch -M main
 4817* gti add .
 4818* git add .
 4819* git commit -m "Initial commit"
 4820* git status
 4821* git push -uf origin main
 4822* clear
 4823* sudo su
 4824* git add .
 4825* git commit -m "Corre
 4826* o stage login_docker"
 4827* git push -u origin main
 4828* sudo usermod -aG docker gitlab-runner
 4829* sudo systemctl restart docker\nsudo systemctl restart gitlab-runner
 4830* gitlab-runner status
 4831* gitlab-runner stop
 4832* gitlab-runner start
 4833* gitlab-runner status
 4834* git add .
 4835* git commit -m "Corre
 4836* o requirements.txt"
 4837* git push -u origin main
 4838* git add .
 4839* git status
 4840* git commit -m "Corre
 4841* o retirado stage login_docker"
 4842* git status
 4843* git push -u origin main
 4844* git add .
 4845* git commit -m "Corre
 4846* o retirado needs login docker do build_image stage"
 4847* git push -u origin main
 4848* gitlab-runner status
 4849* gitlab-runner run
 4850* sudo su
 4851* usermod -aG --help
 4852* usermod --help
 4853* usermod -aG root gitlab-runner
 4854* sudo usermod -aG root gitlab-runner
 4855* groups root
 4856* user gitlab-runner
 4857* sudo usermod -aG gitlab-runner root
 4858* groups root
 4859* clear
 4860* docker login
 4861* docker image ls
 4862* git add .
 4863* git commit -m "Corre
 4864* o login docker registry"
 4865* git push -u origin main
 4866* gp -u origin main
 4867* docker push carlosleosouza/devops-app-v1:latest
 4868* docker pull carlosleosouza/devops-app:latest
 4869* docker push carlosleosouza/devops-app:latest
 4870* docker image ls
 4871* docker tag devops-app:latest carlosleosouza/devops-app:latest
 4872* docker image ls
 4873* docker image rm 5f45ac18aae2 322c58bb7e7d 2c3a3a2b277c 0f1fbc3a3490 3d2e55342b4d 14e19793b9dc 463987242c89 edff77f9e04c
 4874* clear
 4875* docker image ls
 4876* docker image rm -f carlosleosouza/devops-app
 4877* docker image ls
 4878* echo $MICROK8S_TOKEN
 4879* microk8s kubectl config view --raw\n: 1743212721:0;multipass info
 4880* sudo usermod -aG multipass gitlab-runner
 4881* sudo snap connect multipass:all
 4882* sudo systemctl restart snap.multipass.multipassd.service\n: 1743212856:0;multipass launch --name test-vm\nmultipass list\n: 1743213039:0;multipass --help
 4883* multipass delete test-vm
 4884* multipass list
 4885* multipass authenticate
 4886* multipass launch --name master --memory 1G --disk 10G --cpus 1 ubuntu
 4887* multipass launch --help
 4888* multipass launch --name master --memory 1G --disk 10G --cpus 1 ubuntu:24.04
 4889* multipass find
 4890* multipass launch --name master --memory 1G --disk 10G --cpus 1 24.04
 4891* multipass list
 4892* multipass delete master
 4893* multipass delete test-vm
 4894* multipass --help
 4895* multipass purge test-vm
 4896* multipass purge master
 4897* multipass purge
 4898* multipass list
 4899* sudo usermod -a -G microk8s gitlab-runner
 4900* ls -ltr ~/.kube
 4901* getent group root
 4902* sudo su
 4903* multipass
 4904* multipass create-token
 4905* sudo snap connect multipass:all
 4906* sudo systemctl restart snap.multipass.multipassd.service\n: 1743214208:0;sudo snap connect multipass:network\n: 1743214240:0;sudo snap remove multipass\nsudo snap install multipass
 4907* multipass create-token
 4908* multipass authenticate
 4909* multipass set local.passphrase
 4910* microk8s kubectl -n kube-system get secret | grep default-token
 4911* microk8s kubectl -n kube-system get secrets
 4912* microk8s kubectl -n kube-system get secret microk8s-dashboard-token -o yaml
 4913* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token
 4914* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | awk '{print $1}'
 4915* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | cut -f 12 -d ''
 4916* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | cut -f 12 -d ' '
 4917* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | cut -f 12 -d ''
 4918* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | cut -f 13
 4919* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | cut -f 22
 4920* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token
 4921* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | grep token
 4922* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | grep -A 2 token
 4923* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | grep -A 3 token
 4924* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | grep -A 4 token
 4925* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | grep token:
 4926* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | grep token: | echo "$token" | sed 's/^token: *//'
 4927* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | echo "$token" | sed 's/^token: *//'
 4928* microk8s kubectl -n kube-system describe secret microk8s-dashboard-token | grep token: | sed 's/^token: *//'
 4929* sudo apt-get install -y expect
 4930* multipass authenticate
 4931* echo "devops" | multipass authenticate
 4932* echo "devops" | multipass authenticate --quiet
 4933* multipass authenticate
 4934* ls
 4935* vim authenticate.sh 
 4936* git add .
 4937* git commit -m "Corre
 4938* o autentica
 4939* o gitlab-ci"
 4940* git push -u origin main
 4941* cat ~/snap/multipass/current/data/multipass-client-certificate/multipass_cert.pem | sudo tee -a /var/snap/multipass/common/data/multipassd/authenticated-certs/multipass_client_certs.pem > /dev/null
 4942* snap restart multipass
 4943* multipass set local.passphrase=devops
 4944* multipass authenticate devops
 4945* multipass info --all
 4946* multipass info
 4947* multipass list
 4948* multipass delete master
 4949* multipass purge
 4950* multipass list
 4951* multipass list | grep "master" |  grep "worker1" | grep "worker2"
 4952* multipass list
 4953* multipass delete master
 4954* multipass purge
 4955* multipass list
 4956* multipass launch --name worker1 --memory 1G --disk 10G --cpus 1 24.04
 4957* multipass list
 4958* multipass launch --name worker2 --memory 1G --disk 10G --cpus 1 24.04
 4959* multipass list
 4960* multipass delete worker 2
 4961* multipass list
 4962* multipass delete worker2
 4963* multipass purge
 4964* multipass list
 4965* multipass shell master -- bash -c "sudo apt update && sudo apt install snapd -y"
 4966* multipass shell master -- bash -c "sudo apt update && sudo apt install snapd"
 4967* multipass shell
 4968* multipass list
 4969* multipass delete primary
 4970* multipass purge
 4971* cat /etc/fstab 
 4972* swapon --show
 4973* free -h
 4974* lsblk
 4975* fdisk -l
 4976* sudo su
 4977* free -m
 4978* multipass exec
 4979* multipass exec --help
 4980* multipass exec master -- bash -c "sudo apt update && sudo apt install snapd -y"
 4981* dpkg --list | grep snap
 4982* multipass exec master -- bash -c "dpkg --list | grep -q "snapd""
 4983* multipass exec master -- bash -c "if dpkg --list | grep -q 'snapd'; then echo 'snapd is installed'; else echo 'snapd is not installed'; fi"
 4984* multipass exec master -- bash -c "dpkg --list | grep snapd"
 4985* multipass exec master -- bash -c "microk8s"
 4986* multipass exec master -- bash
 4987* multipass exec master -- bash -c "dpkg --list | grep snapd"
 4988* multipass exec master -- bash -c "dpkg --list | grep microk8s"
 4989* free -m
 4990* multipass exec worker1
 4991* multipass exec worker1 -- bash
 4992* multipass exec worker1 -- bash -c "sudo snap install microk8s"
 4993* multipass exec worker1 -- bash -c "sudo usermod -aG microk8s \$(whoami) && newgrp microk8s"
 4994* multipass exec master -- bash -c "sudo usermod -aG microk8s \$(whoami) && newgrp microk8s"
 4995* multipass exec master -- bash
 4996* multipass exec worker -- bash
 4997* multipass exec worker1 -- bash
 4998* multipass exec master -- bash -c "microk8s add-node | grep 'microk8s join' | sed 's/.*\(microk8s join.*\)/\1/'"
 4999* clear
 5000* multipass exec master -- bash
 5001* multipass exec worker1 -- bash
 5002* multipass exec master -- bash
 5003* clear
 5004* multipass exec master -- sudo -s echo '$USER ALL=(ALL) NOPASSWD: ALL' | tee /etc/sudoers.d/$USER
 5005* multipass exec master -- sudo bash -c "echo '$USER ALL=(ALL) NOPASSWD: ALL' | tee /etc/sudoers.d/$USER"
 5006* multipass exec master
 5007* multipass exec master -- bash
 5008* multipass exec master -- sudo -s bash -c "echo '$USER ALL=(ALL) NOPASSWD: ALL' | tee /etc/sudoers.d/$USER"
 5009* multipass exec master -- bash
 5010* multipass exec master -- sudo bash -c "echo 'ubuntu ALL=(ALL) NOPASSWD: ALL' | tee /etc/sudoers.d/ubuntu"
 5011* multipass exec master -- bash
 5012* multipass exec worker1 -- bash
 5013* multipass exec master -- bash
 5014* multipass exec worker1 -- bash
 5015* multipass exec master -- bash
 5016* multipass exec master -- bash -c "sudo -n true && echo 'Tem acesso sem senha' || echo 'Precisa de senha'"
 5017* multipass exec master -- microk8s status --wait-ready
 5018* multipass exec master -- microk8s status
 5019* multipass exec master -- bash
 5020* multipass exec master -- sudo systemctl stop snap.microk8s.daemon-k8s-dqlite\nmultipass exec master -- sudo rm -rf /var/snap/microk8s/current/var/kubernetes/backend/\nmultipass exec master -- sudo systemctl restart snap.microk8s.daemon-k8s-dqlite\n: 1743262213:0;multipass exec master -- microk8s stop\nmultipass exec master -- microk8s start\n: 1743262411:0;multipass exec master -- microk8s status
 5021* multipass exec master -- snap remove microk8s\nmultipass exec master -- snap install microk8s --classic\n: 1743262448:0;multipass exec master -- sudo snap remove microk8s --classic
 5022* multipass exec master -- sudo snap remove microk8s
 5023* multipass exec master -- sudo snap refresh
 5024* multipass exec master -- sudo snap install microk8s --classic
 5025* multipass exec master -- microk8s status
 5026* multipass --help
 5027* multipass restart
 5028* multipass restart master
 5029* multipass restart worker1
 5030* multipass list
 5031* multipass exec master -- microk8s status
 5032* multipass exec worker1 -- microk8s status
 5033* multipass exec worker1 -- snap remove microk8s\nmultipass exec worker1 -- snap install microk8s --classic
 5034* multipass exec worker1 -- sudo snap remove microk8s\nmultipass exec worker1 -- sudo snap install microk8s --classic
 5035* multipass exec worker1 -- microk8s status
 5036* multipass exec worker1 -- sudo snap remove microk8s
 5037* multipass exec worker1 -- sudo snap refresh
 5038* multipass --help
 5039* multipass exec worker1 -- microk8s status
 5040* multipass exec worker1 -- bash
 5041* exit
 5042* multipass exec master -- bash
 5043* multipass exec worker1 -- bash
 5044* exit
 5045* sudo multipass delete master worker1
 5046* sudo multipass delete master
 5047* multipass delete worker1
 5048* multipass delete master
 5049* multipas pruge
 5050* multipas purge
 5051* multipass purge
 5052* multipass list
 5053* clear
 5054* microk8s status
 5055* microk8s stop
 5056* microk8s status
 5057* kubectl get nodes
 5058* kubectl get pods
 5059* docker image ls
 5060* docker rmi 95a8b5b39909 c15e00b70656 4c3655eb2546 d57cbee2d81e 9c09306f5bb6 0db5e920b68a c4bf32d77a51 89ba8e13ee06 1ca920949685 f9fdb98b30cc a360b042f7cd 2880fdf7a1dd 
 5061* docker image ls
 5062* docker image rmi -f 5650899bebba 81bca1fcb9b8 53b26a7c808d 59b9a64ffba6 ca8d5ac30fb8 8e6f3e94fa88 f735850da3b0 d91df237f1a2 d38c9abaea88 fc26ab03859a e99afa140e25 9840acddab06 e6ecf382d860 b0e5c73cc36c 91e48d704d5b 32427120bdde 5417778fbe6d
 5063* docker image ls
 5064* docker image rmi -f a7069bfee959 5fe78ad6c5eb 9b13bf945cd4 a3b0225869e1 b1dd982c7eb7 5f45ac18aae2 827dc950ba53 827dc950ba53 827dc950ba53
 5065* clear
 5066* docker image ls
 5067* clesr
 5068* clear
 5069* multipass list
 5070* multipass exec master -- snap list
 5071* multipass exec worker1 -- snap list
 5072* multipass exec master -- snap list
 5073* docker image ls
 5074* multipass exec master -- microk8s.kubectl get nodes
 5075* multipass exec master -- microk8s.kubectl describe node master
 5076* multipass exec master -- microk8s.kubectl get nodes
 5077* multipass exec master -- microk8s.kubectl exec -it nginx-pod -- curl -I http://localhost
 5078* multipass exec master -- microk8s.kubectl get pods
 5079* multipass exec master -- microk8s.kubectl get pods --all-namespaces
 5080* multipass exec master -- microk8s.kubectl get nodes
 5081* multipass exec master -- bash
 5082* multipass reset worker1
 5083* multipass restart worker1
 5084* multipass restart master
 5085* multipass list
 5086* multipass restart master
 5087* multipass list
 5088* multipass exec master -- bash
 5089* multipass
 5090* multipass set
 5091* multipass set --help
 5092* multipass stop master
 5093* multipass stop worker1
 5094* multipass set local.${USER}.master.memory=2G
 5095* multipass set local.worker1.memory=2G
 5096* multipass set local.master.memory=2G
 5097* multipass list
 5098* multipass
 5099* multipass info
 5100* multipass start master
 5101* multipass info
 5102* multipass start worker1
 5103* multipass info
 5104* free -m
 5105* multipass exec master -- microk8s.kubectl get pods
 5106* htop
 5107* microk8s status
 5108* k3d status
 5109* k3d --help
 5110* htop
 5111* cat /etc/fstab 
 5112* ls /home/carlos-leonardo/Documentos/UTILDISK/
 5113* swapon --show
 5114* swapon --help
 5115* swapon -a
 5116* chmod 0600 /home/carlos-leonardo/Documentos/UTILDISK/swapfile
 5117* swapon -a
 5118* sudo swapon -a
 5119* swapon --show
 5120* free -h
 5121* sudo chmod 0600 /home/carlos-leonardo/Documentos/UTILDISK/swapfile
 5122* ls -ltr /home/carlos-leonardo/Documentos/UTILDISK/swapfile
 5123* mount
 5124* mount | grep swap
 5125* mount -a | grep swap
 5126* clear
 5127* sudo su
 5128* free -m
 5129* sudo apt update -y && sudo apt upgrade -y
 5130* sudo add-apt-repository --remove "deb https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main"
 5131* sudo apt update -y && sudo apt upgrade -y
 5132* sudo add-apt-repository --remove "deb https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main"
 5133* sudo apt update -y && sudo apt upgrade -y
 5134* vim /etc/apt/sources.list.d/docker.list 
 5135* ls /etc/apt/sources.list.d/
 5136* sudo cat /etc/apt/sources.list.d/azure-cli.sources
 5137* sudo add-apt-repository --remove "deb https://packages.microsoft.com/repos/azure-cli/ xia main"
 5138* sudo rm /etc/apt/sources.list.d/azure-cli.sources
 5139* sudo apt update -y && sudo apt upgrade -y
 5140* sudo full-upgrade -y
 5141* sudo apt full-upgrade -y
 5142* sudo apt autoremove -y
 5143* sudo apt clean -y
 5144* sudo apt autoclean -y
 5145* exit
 5146* free -m
 5147* multipass list
 5148* kubectl get pods
 5149* microks8 kubectl get pods
 5150* multipass mount
 5151* multipass mount master Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/MountInstances/
 5152* multipass mount --help
 5153* multipass mount ~/.kube Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/MountInstances/
 5154* multipass mount Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/MountInstances/ master
 5155* cd /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5156* ls
 5157* ls MountInstances/
 5158* ls MountInstances
 5159* multipass shell master ls /home/ubuntu
 5160* multipass shell master -- ls /home/ubuntu
 5161* multipass exec master -- ls
 5162* multipass exec master -- ls MountInstances/
 5163* multipass mount --type=classic $(PWD)/MountInstances master:/home/ubuntu/.kube
 5164* echo $PWD
 5165* multipass mount --type=classic MountInstances/ master:/home/ubuntu
 5166* multipass exec master -- bash
 5167* multipass umount Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/MountInstances/ master
 5168* multipass umount MountInstances master
 5169* multipass exec master -- bash
 5170* ls 
 5171* vim config
 5172* ping 10.66.174.219
 5173* export KUBECONFIG=Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/config
 5174* kubectl config view
 5175* multipass transfer master:config ~/leonardo/MountInstances/config
 5176* multipass exec master -- bash
 5177* multipass transfer master:config ~/leonardo/MountInstances/config
 5178* multipass transfer master:config /home/leonardo/MountInstances/config
 5179* multipass transfer master:/home/ubuntu/config /home/leonardo/MountInstances/config
 5180* multipass transfer master:/home/ubuntu/config ~/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/config
 5181* sudo multipass transfer master:/home/ubuntu/config ~/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/config
 5182* multipass authenticate devops
 5183* sudo multipass transfer master:/home/ubuntu/config ~/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/config
 5184* multipass authenticate
 5185* sudo multipass transfer master:/home/ubuntu/config ~/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/config
 5186* sudo su[]
 5187* sudo su
 5188* multipass
 5189* multipass mount
 5190* multipass mount --help
 5191* multipass mount --type classic ~/Documentos/UTILDISK/Documentos/Cursos/LABs/ master
 5192* ls ..
 5193* ls
 5194* ls /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/
 5195* ls /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/
 5196* multipass exec master -- bash
 5197* multipass shell master
 5198* mkdir -p ~/.kube
 5199* sudo mkdir -p ~/.kube
 5200* multipass transfer master:config ~/.kube/config
 5201* sudo multipass transfer master:config ~/.kube/config
 5202* multipass transfer
 5203* multipass transfer --help
 5204* multipass transfer master:/home/ubuntu/config ~/.kube/config
 5205* mkdir -p ~/.kube && chmod 700 ~/.kube && chmod 600 ~/.kube/config\n: 1743467071:0;multipass transfer master:config ~/.kube/config
 5206* sudo multipass transfer master:config ~/.kube/config
 5207* multipass authenticate
 5208* echo "devops" | multipass authenticate
 5209* echo "devops" | multipass authenticate --quiet
 5210* echo "devops" | multipass authenticate
 5211* sudo multipass transfer master:config ~/.kube/config
 5212* kubectl config view
 5213* ls
 5214* multipass transfer ~/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/deployment.yaml master:/home/ubuntu
 5215* multipass transfer ~/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/service.yaml master:/home/ubuntu
 5216* ls /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5217* ls
 5218* multipass transfer ~/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/deployment.yaml master:/home/ubuntu
 5219* multipass transfer ~/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/service.yaml master:/home/ubuntu
 5220* cd ..
 5221* ls
 5222* sudo chmod -R 777 LAB-Devops/
 5223* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5224* sudo chown -R gitlab-runner:gitlab-runner /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5225* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5226* sudo chown -R carlos-leonardo:gitlab-runner /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5227* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5228* sudo chmod 777 /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/service.yaml
 5229* sudo chmod 777 /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/deployment.yaml
 5230* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5231* sudo ls -lah /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5232* sudo chown -R gitlab-runner:gitlab-runner /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5233* sudo ls -lah /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5234* ls
 5235* sudo su
 5236* sudo kill 17408
 5237* sudo lsof /dev/sda1
 5238* sudo kill 10477
 5239* sudo kill 22420
 5240* sudo kill 22421
 5241* sudo umount /dev/sda1
 5242* sudo umount -l /dev/sda1
 5243* fdisk -l
 5244* clear
 5245* sudo fdisk -l
 5246* exit
 5247* sudo su
 5248* cat /etc/fstab fstab    
 5249* cat /etc/fstab
 5250* mount /dev/sda1/ /home/carlos-leonardo/
 5251* sudo mount /dev/sda1/ /home/carlos-leonardo/
 5252* fdisk -l
 5253* sudo fdisk -l
 5254* cat /etc/fstab
 5255* vim /etc/fstab
 5256* sudo vim /etc/fstab
 5257* mkdir /home/carlos-leonardo/UTILDISK
 5258* sudo vim /etc/fstab
 5259* mount -a
 5260* sudo mount -a
 5261* systemctl daemon-reload
 5262* sudo mount -a
 5263* mount
 5264* sudo rsync -av /home/carlos-leonardo/
 5265* rea\ de\ trabalho/Documentos/ /home/carlos-leonardo/UTILDISK/
 5266* cd /home/carlos-leonardo/UTILDISK/
 5267* ls
 5268* ls -l
 5269* cd Cursos/Devops/
 5270* ls
 5271* cd ..
 5272* ls
 5273* cd LABs/
 5274* ls
 5275* cd LAB-Devops
 5276* git add .
 5277* git remote -v
 5278* git add .\ngit commit -m "Ajuste ap
 5279* s mudan
 5280* a de diret
 5281* rio"\ngit push origin main  # ou outra branch\n: 1743471848:0;ls /home/carlos-leonardo/Documentos/
 5282* cd /home/carlos-leonardo/UTILDISK/
 5283* ls
 5284* pwd
 5285* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5286* ls /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5287* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5288* sudo chown -R gitlab-runner:gitlab-runner /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5289* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5290* sudo chmod -R 777 /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5291* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5292* ls -ltr /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5293* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5294* sudo chmod -R o+rX /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5295* ls -ld /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5296* sudo systemctl restart gitlab-runner\n: 1743472457:0;sudo systemctl status gitlab-runner
 5297* sudo -u gitlab-runner ls -lah /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/\n: 1743472539:0;ls -ld /home/carlos-leonardo\nls -ld /home/carlos-leonardo/UTILDISK\nls -ld /home/carlos-leonardo/UTILDISK/Cursos\nls -ld /home/carlos-leonardo/UTILDISK/Cursos/LABs\nls -ld /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops\n: 1743472578:0;ls -ld /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops
 5298* sudo usermod -aG carlos-leonardo gitlab-runner\n: 1743472611:0;sudo systemctl restart gitlab-runner\n: 1743472634:0;sudo -u gitlab-runner ls -lah /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/\n: 1743473188:0;exit
 5299* sudo su
 5300* multipass exec master -- bash -c "kubectl version --short"
 5301* multipass exec master -- bash -c "microk8s kubectl version --short"
 5302* multipass exec master -- bash -c "microk8s kubectl version"
 5303* multipass exec master -- bash -c "kubectl api-resources | grep deployments"
 5304* multipass exec master -- bash -c "mcirok8s kubectl api-resources | grep deployments"
 5305* multipass exec master -- bash -c "microk8s kubectl api-resources | grep deployments"
 5306* multipass exec master -- bash -c "microk8s kubectl get crds"
 5307* multipass exec master -- bash -c "ls /home/ubuntu"
 5308* multipass exec master -- bash -c "microk8s kubectl apply -f /home/ubuntu/deployment.yaml"
 5309* multipass exec master -- bash -c "microk8s.enable dns storage ingress"
 5310* multipass exec master -- bash -c "microk8s kubectl microk8s.kubectl version --short"
 5311* multipass exec master -- bash -c "microk8s kubectl microk8s.kubectl version"
 5312* multipass exec master -- bash -c "microk8s kubectl version --short"
 5313* multipass exec master -- bash -c "microk8s kubectl version"
 5314* multipass exec master -- bash -c "microk8s kubectl enable api"
 5315* multipass exec master -- bash -c "microk8s.kubectl get namespaces"
 5316* multipass exec master -- bash -c "microk8s kubectl enable api"
 5317* multipass exec master -- bash -c "microk8s enable api"
 5318* multipass exec master -- bash -c "microk8s.kubectl api-resources | grep deployments"
 5319* multipass exec master -- bash -c "microk8s.stop"
 5320* multipass exec master -- bash -c "microk8s stop"
 5321* multipass reset master
 5322* multipass restart master
 5323* multipass list
 5324* multipass exec master -- bash -c "microk8s.kubectl api-resources | grep deployments"
 5325* multipass exec master -- bash -c "microk8s start"
 5326* multipass restart worker1
 5327* multipass exec master -- bash -c "microk8s.kubectl api-resources | grep deployments"
 5328* multipass exec master -- bash -c "microk8s kubectl apply -f /home/ubuntu/deployment.yaml"
 5329* multipass exec master -- bash -c "microk8s kubectl get deployments"
 5330* multipass exec master -- bash -c "microk8s kubectl get deployments -n devops-app"
 5331* sudo su
 5332* multipass list
 5333* free -m
 5334* exit
 5335* cat ~/.zshrc
 5336* sudo vim ~/.zshrc
 5337* sudo cp ~/.zshrc ~/zshrc.txt
 5338* sudo echo ~/zshrc.txt > ~/.zshrc
 5339* cat ~/.zshrc
 5340* sudo cp ~/zshrc.txt ~/.zshrc
 5341* sudo vim ~/.zshrc
 5342* source ~/.zshrc
 5343* sudo cat /root/.zshcr
 5344* sudo su
 5345* cd ~
 5346* clear
 5347* w
 5348* which multipas
 5349* which multipass
 5350* vim ~.zshrc
 5351* vim ~/.zshrc
 5352* source ~/.zshrc
 5353* vim ~/.zshrc
 5354* source ~/.zshrc
 5355* vim ~/.zshrc
 5356* source ~/.zshrc
 5357* vim ~/.zshrc
 5358* echo $PYENV_ROOT
 5359* sudo ls -ls /root
 5360* sudo su
 5361* sudo echo ~/.zshrc > /root/zshrc.txt
 5362* sudo sh -c 'echo ~/.zshrc > /root/zshrc.txt'
 5363* sudo su
 5364* cp ~/.zshrc /root/
 5365* sudo cp ~/.zshrc /root/
 5366* sudo su
 5367* sudo apt update
 5368* sudo apt install -y gitstatusd
 5369* git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k && ~/powerlevel10k/gitstatus/install
 5370* ~/powerlevel10k/gitstatus/install
 5371* exec zsh
 5372* ls
 5373* exit
 5374* sudo su
 5375* clear
 5376* sudo apt update && sudo apt install warp-terminal && warp_finish_update Ia3IKb6
 5377* clear
 5378* vim ~/.zshrc
 5379* multipass list
 5380* multipass delete master
 5381* multipass delete worker1
 5382* multipass list
 5383* multipass purge
 5384* multipass list |grep -iv running
 5385* multipass list |grep -i running
 5386* multipass list | grep -qi running | awk '{print $2}'
 5387* multipass list | grep -i running | awk '{print $2}'
 5388* multipass list | awk '{print $2}' | grep -i running
 5389* multipass list | awk '{print $2}' | grep -qi running
 5390* multipass exec master -- bash
 5391* multipass list
 5392* multipass exec master -- bash
 5393* multipass exec worker1 -- bash
 5394* multipass exec worker2 -- bash
 5395* multipass exec master -- bash
 5396* multipass list
 5397* multipass --help
 5398* multipass list | grep -qi master && grep -qi running
 5399* multipass list | awk '{print $1,2}'
 5400* multipass list | awk '{print $1}'
 5401* multipass list | cut -d ' ' -f1
 5402* multipass list | awk '{print $2}'
 5403* multipass list | awk '{print $1, $2}'
 5404* multipass list | awk '{print $1, $2}' | grep -i Running
 5405* multipass info master
 5406* multipass info master | grep -i running
 5407* multipass info master | grep -i running | awk '{print $2}'
 5408* command --help
 5409* command -v ls
 5410* command -v multipass
 5411* multipass exec master -- bash
 5412* multipass exec master -- ls
 5413* multipass exec master -- ls /
 5414* JOIN_CMD=$(multipass exec master -- bash -c "sudo microk8s add-node | grep 'microk8s join' | sed 's/.*\(microk8s join.*\)/\1/'")
 5415* echo $JOIN_CMD
 5416* JOIN_CMD=$(multipass exec master -- bash -c "sudo microk8s add-node | grep 'microk8s join' | sed 's/.*\(microk8s join.*\)/\1/' | head -n1")    
 5417* echo $JOIN_CMD
 5418* estado=$()multipass info $vms | grep -i running | awk '{print $2}')
 5419* estado=$(multipass info $vms | grep -i running | awk '{print $2}')
 5420* echo $estado
 5421* estado=$(multipass info $vms | grep -i running | awk '{print $2}' | head -n1)    
 5422* echo $estado
 5423* echo $vms
 5424* estado=$(multipass info master | grep -i running | awk '{print $2}')
 5425* echo $estado
 5426* estado=$(command -v multipass info $vms | grep -i "running")
 5427* estado=$(multipass info $vms | grep -i "running")
 5428* echo $estado
 5429* estado=$(multipass info master | grep -i "running")    
 5430* echo $estado
 5431* estado=$(multipass info master | grep -i "running" | awk '{print $2}')    
 5432* echo $estado
 5433* estado=$(command -v multipass info worker2 | grep -i "running" | awk '{print $2}')
 5434* echo $estado
 5435* docker image ls
 5436* multipass exec microk8s-master -- microk8s add-node
 5437* multipass exec master -- microk8s add-node
 5438* multipass exec worker1 -- microk8s join 10.66.174.191:25000/dcc568822e639db1f3194205e5841347/c1da04712a1e --worker
 5439* multipass exec master -- microk8s enable dns storage ingress
 5440* multipass exec master -- sudo microk8s enable dns storage ingress
 5441* multipass exec master -- bash
 5442* multipass exec worker1 -- bash
 5443* sudo apt update && sudo apt install warp-terminal && warp_finish_update jPGDXFY
 5444* multipass exec worker1 -- nc -vz 10.66.174.191 25000
 5445* multipass exec worker2 -- nc -vz 10.66.174.191 25000
 5446* multipass exec master -- nc -vz 10.66.174.191 25000
 5447* multipass exec master -- nc -vz 10.66.174.191 16443
 5448* multipass exec master -- microk8s status
 5449* multipass exec master -- microk8s inspect
 5450* multipass exec master -- bash
 5451* multipass --help
 5452* multipass set local.master.memory=4G
 5453* multipass stop master
 5454* multipass set --help
 5455* multipass set local.master.cpu
 5456* multipass set local.master.num_cores=2    
 5457* multipass set local.master.cpu.num_cores=2
 5458* multipass set local.master.cpus=2
 5459* multipass master start
 5460* multipass start master
 5461* multipass info master
 5462* multipass exec master -- bash
 5463* multipass master stop
 5464* multipass stop
 5465* multipass stop master worker1 worker2
 5466* multipass stop master worker1 worker2 --timeout 600000
 5467* multipass stop master
 5468* multipass stop worker1
 5469* multipass stop worker2
 5470* multipass list
 5471* multipass stop worker2
 5472* multipass exec worker2 -- halt
 5473* multipass delete master worker1 worker2
 5474* multipass delete worker2
 5475* multipass purge
 5476* multipass delete master
 5477* multipass delete worker1
 5478* multipass list
 5479* multipass purge
 5480* multipass exec master -- microk8s kubectl get nodes
 5481* multipass list
 5482* multipass exec worker1 -- microk8s kubectl get nodes
 5483* multipass exec master -- microk8s kubectl get nodes
 5484* multipass mount /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/ master:/home/ubuntu
 5485* pwd
 5486* cd /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5487* cd /home/carlos-leonardo/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 5488* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5489* multipass mount /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/ master:/home/ubuntu    
 5490* multipass exec master -- ls /home
 5491* multipass exec master -- ls /home/ubuntu
 5492* multipass transfer /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/*.yaml master:/home/ubuntu
 5493* multipass exec master -- ls /home/ubuntu
 5494* multipass exec master -- rm -f /home/ubuntu/*.yaml
 5495* multipass exec master -- bash -c sudo rm -f /home/ubuntu/*.yaml
 5496* multipass exec master -- ls /home/ubuntu
 5497* multipass shell master -- rm -f /home/ubuntu/*.yaml
 5498* multipass exec master -- rm -f /home/ubuntu/deployment.yaml
 5499* multipass exec master -- rm -f /home/ubuntu/service.yaml
 5500* multipass exec master -- sudo microk8s delete namespace devops-app
 5501* multipass exec master -- sudo microk8s kubectl delete namespace devops-app
 5502* multipass exec master -- sudo microk8s kubectl get pods
 5503* multipass exec master -- sudo microk8s kubectl get pods -n devops-app
 5504* multipass exec master -- sudo microk8s kubectl logs devops-app-85b759758d-xgnv6 -n devops-app
 5505* docker image inspect carlosleosouza/devops-app
 5506* docker image ls
 5507* docker image rmi 1746ea9559c1 e84e8ae50825 135c19311dd0 2b4d8a520d8b
 5508* docker image rmi -f 1746ea9559c1 e84e8ae50825 135c19311dd0 2b4d8a520d8b
 5509* clear
 5510* docker image ls
 5511* multipass exec master -- sudo microk8s kubectl get deploy
 5512* multipass exec master -- sudo microk8s kubectl get deploy -n devops-app
 5513* multipass exec master -- bash -c "sudo microk8s kubectl get deploy -n devops-app | grep -i 'devops-app'"
 5514* docker image ls
 5515* multipass exec master -- bash -c sudo microk8s kubectl get deploy -n devops-app
 5516* multipass exec master -- bash -c "sudo microk8s kubectl get deploy -n devops-app"
 5517* multipass exec master -- bash -c "sudo microk8s kubectl get deploy -n devops-app | grep -i "devops-app" &> /dev/null"
 5518* get_deploy=$(multipass exec master -- bash -c "sudo microk8s kubectl get deploy -n devops-app | grep -i "devops-app" &> /dev/null")
 5519* echo $get_deploy
 5520* get_deploy=$(multipass exec master -- bash -c "sudo microk8s kubectl get deploy -n devops-app | grep -qi "devops-app" &> /dev/null")
 5521* multipass exec master -- bash -c "sudo microk8s kubectl delete deploy devops-app -n devops-app"
 5522* clear
 5523* multipass exec master -- sudo microk8s kubectl get deploy -n devops-app
 5524* multipass exec master - sudo microk8s get ns
 5525* multipass exec master - sudo microk8s kubectl get ns
 5526* multipass exec master -- sudo microk8s kubectl get ns
 5527* multipass exec master -- sudo microk8s kubectl get pods
 5528* multipass exec master -- sudo microk8s kubectl get pods -A
 5529* multipass exec master -- sudo microk8s kubectl get pods -n devops-app
 5530* multipass exec master -- sudo microk8s kubectl delete pods -n devops-app
 5531* multipass exec master -- sudo microk8s kubectl delete pods -n devops-app --all
 5532* multipass exec master -- bash -c "rm -rf ~/.kube/cache"
 5533* multipass exec master -- bash -c "sudo microk8s kubectl apply -f /home/ubuntu --recursive"
 5534* multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app"
 5535* multipass exec master -- bash -c "sudo microk8s kubectl logs -n devops-app devops-app-85b759758d-hclsc"
 5536* find . -name "*.py"
 5537* docker image ls
 5538* docker image rm -f 718de13f7d60 41f36fa97d46 d4f28c1e2169 6c0ae04aa034 c68ac0f161b0 b193bf946303 7f916c121c9d 4f2431d2b28c f7f336a1e71d 90894827e9e7 17bbd7d62230 a6a8db054c57 48821ab8a9d0 5f6eb4143e41
 5539* docker image ls
 5540* multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app"
 5541* multipass exec master -- bash -c "sudo microk8s kubectl describe pods -n devops-app"
 5542* multipass exec master -- bash -c "sudo microk8s kubectl run -n devops-app --image=carlosleosouza/devops-app:latest devops-app-inspect -- sleep infinity"
 5543* multipass exec master -- bash -c "sudo microk8s kubectl exec -n devops-app -it devops-app-inspect -- ls -la /"
 5544* multipass exec master -- bash -c "sudo microk8s kubectl exec -n devops-app -it devops-app-inspect -- ls -la /app"
 5545* multipass exec master -- bash -c "sudo microk8s kubectl exec -n devops-app -it devops-app-inspect -- ls -la /app/app"
 5546* multipass exec master -- bash -c "sudo microk8s kubectl exec -n devops-app -it devops-app-inspect -- cat /app/app/app.py"
 5547* multipass exec master -- bash -c "sudo microk8s kubectl get deployment -n devops-app -o yaml"
 5548* multipass exec master -- bash -c "sudo microk8s kubectl edit deployment -n devops-app devops-app"
 5549* docker image ls
 5550* multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app"
 5551* docker image rm -f 126e20ac8e11 126e20ac8e11 e2a2536406ba 949ca9c57f09 949ca9c57f09
 5552* docker image ls
 5553* multipass exec master -- bash -c "sudo microk8s kubectl delete pods -n devops-app --all"
 5554* docker image ls
 5555* multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app"
 5556* multipass exec master -- bash -c "sudo microk8s kubectl describe pod devops-app-85b759758d-s7rbr -n devops-app"
 5557* multipass exec master -- bash
 5558* exit
 5559* docker image ls
 5560* docker image rm -f 126e20ac8e11 126e20ac8e11
 5561* docker image ls -a
 5562* watch -n 1 docker image ls
 5563* docker image ls
 5564* watch -d -n 1 docker image ls
 5565* multipass exec master -- bash -c "sudo microk8s kubectl delete pods -n devops-app --all"
 5566* multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app"
 5567* multipass exec master -- bash -c "sudo microk8s kubectl describe pod devops-app-85b759758d-fh778 -n devops-app"
 5568* multipass exec master -- bash -c "sudo microk8s kubectl logs devops-app-85b759758d-fh778 -n devops-app"
 5569* multipass exec master -- bash -c "sudo microk8s kubectl delete pods -n devops-app --all"
 5570* multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app"
 5571* multipass exec master -- bash -c "sudo microk8s kubectl logs devops-app-85b759758d-7jwf9 -n devops-app"
 5572* multipass exec master -- microk8s kubectl get service
 5573* multipass exec master -- bash -c "sudo microk8s kubectl describe service devops-app-service"
 5574* multipass list
 5575* multipass info master\n: 1743882412:0;curl http://10.66.174.84:30649
 5576* curl http://10.66.174.84:80
 5577* curl http://10.1.219.64:80
 5578* multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app"
 5579* multipass info master\n: 1743883139:0;curl http://10.1.219.64:30649
 5580* curl http://10.66.174.84:30649
 5581* multipass exec master -- bash -c "sudo microk8s kubectl get service -n devops-app"
 5582* ifconfig
 5583* multipass exec master -- bash -c "sudo microk8s enable metallb"
 5584* multipass exec master -- bash -c "sudo microk8s kubectl apply -f /home/ubuntu/service.yaml"
 5585* multipass exec master -- bash -c "sudo microk8s kubectl get service -n devops-app"
 5586* ping 192.168.1.201
 5587* multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app"
 5588* multipass exec master -- bash -c "sudo microk8s kubectl get service -n devops-app"
 5589* multipass info master\n: 1743884403:0;curl http://10.1.219.64:30649
 5590* curl http://10.1.219.64:30941
 5591* curl http://10.66.174.84:30941
 5592* vim /home/carlos-leonardo/deletepipes.sh
 5593* sudo apt install jq
 5594* chmod +x /home/carlos-leonardo/deletepipes.sh
 5595* ./home/carlos-leonardo/deletepipes.sh
 5596* sh /home/carlos-leonardo/deletepipes.sh
 5597* multipass purge
 5598* multipass list
 5599* multipass delete master
 5600* multipass list
 5601* multipass stop worker1
 5602* multipass stop worker2
 5603* multipass purge
 5604* multipass list
 5605* multipass delete worker1 worker2
 5606* multipass purge
 5607* multipass list
 5608* multipass networks
 5609* multipass networks --format
 5610* multipass networks --format yaml
 5611* ip --br a
 5612* multipass networks 
 5613* sudo apt install netplan
 5614* netplan
 5615* ls /etc/netplan/
 5616* clear
 5617* ip --br a
 5618* nmcli
 5619* ip link show
 5620* cat /etc/fstabos-release
 5621* cat /etc/os-release
 5622* ip addr show
 5623* clear
 5624* multipass list
 5625* sudo apt update && sudo apt upgrade -y
 5626* sudo nmcli connection add type bridge autoconnect yes con-name br0 ifname br0
 5627* sudo nmcli connection add type dummy ifname dummy0 con-name dummy0\nsudo nmcli connection modify dummy0 master br0\n: 1743939141:0;nmcli connection up br0\nnmcli connection up dummy0\n: 1743939171:0;ip a show br0\n: 1743939185:0;ip a show br0
 5628* echo 'net.ipv4.ip_forward=1' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p
 5629* multipass networks
 5630* multipass launch --name teste --memory 2G --disk 20G --cpus 1 --network name=br0 24.04
 5631* multipass launch --name teste --memory 2G --disk 20G --cpus 1 --network br0 24.04
 5632* multipass launch --name teste --memory 2G --disk 20G --cpus 1 --network br0 24.04 --cloud-init cloud-config.yaml
 5633* ls -l cloud-config.yaml
 5634* touch cloud-config.yaml
 5635* multipass launch --name teste --memory 2G --disk 20G --cpus 1 --network br0 24.04 --cloud-init cloud-config.yaml
 5636* multipass launch --name teste --memory 2G --disk 20G --cpus 1 --cloud-init cloud-config.yaml 24.04
 5637* cat cloud-config.yaml
 5638* ls
 5639* cat cloud-config.yaml
 5640* multipass list
 5641* multipass exec teste -- bash
 5642* multipass exec master -- bash
 5643* ip --br a
 5644* ip a
 5645* ip r
 5646* multipass list
 5647* docker image ls
 5648* multipass exec master -- bash
 5649* multipass list
 5650* multipass exec master -- bash
 5651* multipass exec master -- bash -c "sudo microk8s kubectl get svc -n devops-app"\n: 1743948415:0;multipass exec master -- bash -c "sudo microk8s kubectl get pods -n devops-app -o wide"
 5652* multipass exec master -- bash -c "curl -I 127.0.0.1:80"
 5653* multipass exec master -- bash -c "curl -I http://10.66.174.112:80"\n: 1743948503:0;curl -I http://192.168.1.200
 5654* ping 192.168.1.200
 5655* multipass exec master -- bash -c "microk8s kubectl get ep -n devops-app devops-app-service -o wide"\n: 1743948660:0;multipass exec master -- bash -c "microk8s kubectl get configmap config -n metallb-system -o yaml"
 5656* multipass exec master -- bash -c "microk8s kubectl get pods -n metallb-system -o wide"
 5657* kubectl edit configmap config -n metallb-system
 5658* clear
 5659* multipass exec master -- microk8s kubectl -n metallb-system get configmap config -o yaml
 5660* multipass exec master -- microk8s kubectl get configmap -A
 5661* multipass exec master -- microk8s kubectl get configmap -A -o wide
 5662* multipass exec master -- microk8s kubectl -n metallb-system get configmap config -o yaml
 5663* multipass exec master -- microk8s kubectl -n metallb-system get configmap metallb-system -o yaml
 5664* multipass exec master -- microk8s kubectl -n metallb-system edit configmap config
 5665* multipass exec master -- microk8s kubectl -n metallb-system get configmap
 5666* multipass exec master -- microk8s kubectl -n metallb-system get configmap kube-root-ca.crt -o yaml
 5667* multipass exec master -- bash
 5668* curl -I http://192.168.1.200\n: 1743949324:0;microk8s kubectl delete svc -n devops-app devops-app-service\nmicrok8s kubectl apply -f service.yaml\n: 1743949332:0;multipass exec master -- bash
 5669* sudo ufw status
 5670* curl -I http://192.168.1.200
 5671* multipass list
 5672* multipass stop teste
 5673* multipass delete teste
 5674* multipass purge
 5675* multipass list
 5676* ip --br a
 5677* ip br
 5678* ip br0
 5679* sudo ip link add mac0 link wlp0s20f3 type macvlan mode bridge\nsudo ip addr add 192.168.1.249/24 dev mac0\nsudo ip link set mac0 up\n: 1743949749:0;ip link show br0
 5680* ip link set br0 up
 5681* ip --br a
 5682* multipass launch 24.04 --name testvm --network name=mac0@wlp0s20f3
 5683* multipass launch 24.04 --name testvm --network name=mac0
 5684* multipass launch 24.04 --name testvm --network mac0@wlp0s20f3
 5685* multipass launch --name teste --memory 2G --disk 20G --cpus 1 --network name=mac0 24.04
 5686* multipass launch --name teste --memory 2G --disk 20G --cpus 1 --network name=mac0@wlp0s20f3 24.04
 5687* sudo apt update\nsudo apt install bridge-utils
 5688* brctl show\n: 1743950033:0;ip --br a
 5689* sudo vim /etc/netplan/01-network-manager-all.yaml\n: 1743950148:0;sudo netplan apply\n: 1743950162:0;ip a | grep br0
 5690* cd /etc/netplan/
 5691* sudo netplan apply
 5692* ip a show br0\n: 1743950360:0;sudo vim /etc/netplan/bridge.yaml
 5693* sudo netplan apply
 5694* ip -br a\n: 1743950456:0;cd /etc/netplan/
 5695* ls
 5696* rm -f bridge.yaml 01-network-manager-all.yaml
 5697* sudo rm -f bridge.yaml 01-network-manager-all.yaml
 5698* clear
 5699* multipass stop master worker1 worker2 --timeout 1600000
 5700* multipass stop master worker1 worker2
 5701* multipass delete master worker1 worker2
 5702* multipass purge
 5703* cat /etc/os-release
 5704* cd ~/Downloads
 5705* ls
 5706* dpkg -ivh virtualbox-7.1_7.1.6-167084\~Ubuntu\~oracular_amd64.deb
 5707* dpkg -i virtualbox-7.1_7.1.6-167084\~Ubuntu\~oracular_amd64.deb
 5708* sudo dpkg -i virtualbox-7.1_7.1.6-167084\~Ubuntu\~oracular_amd64.deb
 5709* sudo apt install liblzf1 libqt6core6t64 libqt6dbus6 libqt6gui6 libqt6help6 libqt6printsupport6 libqt6statemachine6 libqt6widgets6 libqt6xml6 libtpms0
 5710* sudo apt -f install
 5711* sudo apt install virtualbox-7.1_7.1.6-167084\~Ubuntu\~oracular_amd64.deb --fix-broken
 5712* sudo dpkg -i virtualbox-7.1_7.1.6-167084~Ubuntu~oracular_amd64.deb
 5713* sudo apt-get install -y liblzf1 libqt6core6t64 libqt6dbus6 libqt6gui6 libqt6help6 libqt6printsupport6 libqt6statemachine6 libqt6widgets6 libqt6xml6 libtpms0
 5714* sudo apt --fix-broken install -y
 5715* sudo apt-get install -y liblzf1 libqt6core6t64 libqt6dbus6t64 libqt6gui6t64 libqt6help6 libqt6printsupport6t64 libqt6statemachine6 libqt6widgets6t64 libqt6xml6t64 libtpms0 libb2-1 libts0t64 libqt6sql6t64 qt6-translations-l10n qt6-gtk-platformtheme qt6-qpa-plugins qt6-wayland libsdl-ttf2.0-0
 5716* sudo dpkg -i virtualbox-7.1_7.1.6-167084~Ubuntu~oracular_amd64.deb
 5717* sudo apt-get install -y wget &&\nwget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - &&\nwget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add - &&\necho "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian $(lsb_release -sc) contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list &&\nsudo apt-get update &&\nsudo apt-get install -y virtualbox-7.1
 5718* sudo dpkg --remove virtualbox-7.1 &&\nsudo dpkg -i --force-depends virtualbox-7.1_7.1.6-167084~Ubuntu~oracular_amd64.deb
 5719* sudo /sbin/vboxconfig
 5720* sudo dpkg --purge virtualbox-7.1 &&\nsudo apt-get install -y virtualbox-6.1
 5721* sudo apt-get install -y virtualbox
 5722* mokutil --sb-state
 5723* sudo -s &&\nopenssl req -new -x509 -newkey rsa:2048 -keyout /root/vbox.key -outform DER -out /root/vbox.der -nodes -days 36500 -subj "/CN=VirtualBox/" &&\nmokutil --import /root/vbox.der &&\nexit
 5724* cat /etc/os-release
 5725* sudo su
 5726* ls
 5727* sudo dpkg -i virtualbox-7.1_7.1.6-167084~Ubuntu~oracular_amd64.deb
 5728* sudo dpkg --purge\n: 1743953310:0;sudo dpkg --purge virtualbox-dkms
 5729* sudo apt-get install binutils build-essential dkms linux-headers-$(uname -r) make\n: 1743953581:0;echo -e "deb [arch=amd64 signed-by=/usr/share/keyrings/oracle-virtualbox-2016.gpg] https://download.virtualbox.org/virtualbox/debian noble contrib"|sudo tee /etc/apt/sources.list.d/virtualbox.list\n: 1743953590:0;cd /tmp && wget -O- https://www.virtualbox.org/download/oracle_vbox_2016.asc | sudo gpg --dearmor --yes --output /usr/share/keyrings/oracle-virtualbox-2016.gpg && cd $HOME\n: 1743953601:0;sudo apt update -y
 5730* sudo apt install virtualbox-7.1
 5731* dmesg
 5732* clear
 5733* sudo apt remove virtualbox-7.1
 5734* sudo apt install virtualbox-7.0
 5735* sudo /sbin/vboxconfig
 5736* sudo apt purge virtualbox virtualbox-dkms virtualbox-qt\nsudo rm -rf /usr/lib/virtualbox\nsudo rm -rf /usr/lib/virtualbox-dkms\nsudo rm -rf /etc/vbox /var/lib/virtualbox /usr/share/virtualbox\nsudo apt autoremove --purge\n: 1743953908:0;sudo apt update && sudo apt upgrade -y\n: 1743953933:0;sudo apt install build-essential dkms linux-headers-$(uname -r)\n: 1743953950:0;sudo apt install virtualbox virtualbox-qt\n: 1743953979:0;sudo apt install virtualbox virtualbox-qt
 5737* pkill -f VirtualBox\npkill -f VBoxSVC\npkill -f VBoxNetDHCP\npkill -f VBoxNetNAT\n: 1743954038:0;sudo apt install virtualbox virtualbox-qt
 5738* ps aux | grep -i virtualbox\n: 1743954064:0;sudo dpkg --configure -a\nsudo /sbin/vboxconfig\n: 1743954068:0;sudo apt remove virtualbox-7.0
 5739* sudo reboot\n# ap
 5740* s o reboot:\nsudo /sbin/vboxconfig\n: 1743954217:0;sudo apt purge virtualbox virtualbox-dkms virtualbox-qt\nsudo rm -rf /usr/lib/virtualbox\nsudo rm -rf /usr/lib/virtualbox-dkms\nsudo rm -rf /etc/vbox /var/lib/virtualbox /usr/share/virtualbox\nsudo apt autoremove --purge\n: 1743954229:0;sudo apt update && sudo apt upgrade -y\n: 1743954245:0;sudo apt install build-essential dkms linux-headers-$(uname -r)\n: 1743954251:0;sudo apt install virtualbox virtualbox-qt\n: 1743954266:0;sudo apt install --reinstall virtualbox virtualbox-qt
 5741* sudo apt remove --purge virtualbox-7.0
 5742* sudo dpkg --remove --force-remove-reinstreq virtualbox-7.0
 5743* sudo dpkg --purge --force-all virtualbox-7.0
 5744* sudo apt autoremove
 5745* sudo apt remove --purge virtualbox-7.0
 5746* sudo apt purge virtualbox virtualbox-dkms virtualbox-qt\nsudo rm -rf /usr/lib/virtualbox\nsudo rm -rf /usr/lib/virtualbox-dkms\nsudo rm -rf /etc/vbox /var/lib/virtualbox /usr/share/virtualbox\nsudo apt autoremove --purge\n: 1743954476:0;sudo apt update && sudo apt upgrade -y\n: 1743954490:0;sudo apt install build-essential dkms linux-headers-$(uname -r)\n: 1743954528:0;sudo su
 5747* sudo /sbin/vboxconfig
 5748* ps aux | grep -i virtual
 5749* ps aux | grep -i box
 5750* ps aux | grep -i oracle
 5751* ls
 5752* cd Downloads
 5753* dpkg -i /home/carlos-leonardo/Downloads/virtualbox-7.0_7.0.24-167081~Ubuntu~noble_amd64.deb
 5754* sudo dpkg -i /home/carlos-leonardo/Downloads/virtualbox-7.0_7.0.24-167081~Ubuntu~noble_amd64.deb
 5755* sudo dpkg --remove --force-remove-reinstreq virtualbox-7.0\n: 1743955029:0;sudo rm -f /var/lib/dpkg/info/virtualbox-7.0.*\n: 1743955035:0;sudo dpkg --remove --force-remove-reinstreq virtualbox-7.0\n: 1743955042:0;sudo apt update\nsudo apt --fix-broken install\n: 1743955059:0;sudo apt autoremove --purge\nsudo rm -rf /usr/lib/virtualbox /etc/vbox ~/.config/VirtualBox ~/.VirtualBox\n: 1743955068:0;sudo dpkg -i ~/Downloads/virtualbox-7.0_7.0.24-167081~Ubuntu~noble_amd64.deb\n: 1743955107:0;sudo /sbin/vboxconfig\n: 1743963614:0;wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg\necho "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo apt update && sudo apt install vagrant
 5756* wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
 5757* echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list\nsudo apt update && sudo apt install vagrant
 5758* lsb_release -cs
 5759* cat /etc/upstream-release/lsb-release || echo "No upstream release information found"
 5760* echo "deb [arch=amd64 signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com noble main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
 5761* sudo apt update && sudo apt install vagrant -y
 5762* clear
 5763* vagrant --version
 5764* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 5765* vim Vagrantfile
 5766* ls
 5767* vagrant init
 5768* rm Vagrantfile
 5769* vagrant init
 5770* cat Vagrantfile
 5771* vim Vagrantfile
 5772* ls
 5773* vagrant init
 5774* vagrant up
 5775* vagrant init
 5776* vagrant up
 5777* vagrant ssh master
 5778* vagrant --help
 5779* vagrant up
 5780* vagrant up --provision
 5781* vagrant ssh master
 5782* vagrant list-commands
 5783* vagrant plugin install vagrant-scp
 5784* vagrant ssh master -c "cat /etc/sudoers"
 5785* vagrant ssh master -c "sudo cat /etc/sudoers"
 5786* vagrant ssh master
 5787* vagrant ssh master -c "curl -I http://192.168.1.1"
 5788* vagrant ssh master -c "sudo ping http://192.168.1.1"
 5789* vagrant ssh master -c "sudo ping 192.168.1.1"
 5790* clear
 5791* vagrant status
 5792* vagrant status | grep -i "running" | awk '{print $2}'
 5793* clear
 5794* vagrant status | grep -i "running" | awk '{print $1, $2}'
 5795* vagrant ssh master
 5796* git add .
 5797* git status
 5798* git add .
 5799* git status
 5800* git add .
 5801* git commit -m "Usando vagrant - Primeiro commit"
 5802* git push origin main
 5803* vagrant ssh master -c "sudo echo 'vagrant ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/vagrant"
 5804* vagrant global status
 5805* vagrant global-status
 5806* vagrant ssh master -c "sudo if ! command -v snap &> /dev/null; then sudo apt update && sudo apt install snapd -y; fi"
 5807* vagrant ssh master -c "sudo sh -c 'if ! command -v snap &> /dev/null; then apt update && apt install snapd -y; fi'"
 5808* vagrant global-status
 5809* vagrant global-status | grep -i master
 5810* vagrant global-status | grep -i master | awk {'print $1'}
 5811* VM_MASTER_ID=$(vagrant global-status | grep -i master | awk {'print $1'})
 5812* echo $VM_MASTER_ID
 5813* vagrant global-status | grep -i master | awk {'print $1'}
 5814* vagrant global-status | grep -i "^$vm" | awk '{print $1}'
 5815* vagrant global-status | grep -i "^$vm" 
 5816* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 
 5817* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 | head -n3
 5818* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 | head -n3 | tail -n3
 5819* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 | tail -n1
 5820* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 | tail -n2
 5821* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 
 5822* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 | head -n3
 5823* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 | head -n1
 5824* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 | head -n1 | sed '1-2d'
 5825* vagrant global-status | grep -i "^$vm" | cut -d ' ' -f1 | head -n3
 5826* vagrant global-status | awk '$3 == "running" { print $1, $2 }'\n: 1743984757:0;vagrant global-status
 5827* vagrant global-status | awk '$3 == "running" { print $1, $2 }'
 5828* vagrant global-status | awk '$4 == "running" { print $1, $2 }'
 5829* vagrant global-status | grep -i "^$vm" | awk '{print $1}'
 5830* vagrant global-status | grep -i "^$vm" | awk '$4 == "running" { print $1, $2 }'
 5831* vagrant global-status | grep -i "^$vm" | awk '$4 == "running" {print $1}'
 5832* VM_ID=$(vagrant global-status | grep -i "^$vm" | awk '$4 == "running" {print $1}')
 5833* echo "$VM_ID master" > "vm_master_id.txt"
 5834* echo "$VM_ID worker1" > "vm_worker1_id.txt"
 5835* cat vm_master_id.txt
 5836* cat vm_worker1_id.txt
 5837* echo $VM_ID
 5838* VM_ID=$(vagrant global-status | awk -v name="$vm" '$2 == name && $4 == "running" { print $1 }')
 5839* VM_ID=$(vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" { print $1 }')
 5840* echo $VM_ID
 5841* VM_ID=$(vagrant global-status | awk -v name="$vm" '$2 == name && $4 == "running" { print $1 }')
 5842* echo $VM_ID
 5843* VM_ID=$(vagrant global-status | awk -v name="$vm" '$2 == name && $4 == "running" {print $1}')
 5844* echo $VM_ID
 5845* VM_ID=$(vagrant global-status | awk -v name="$vm" '$2 == name && $4 == "running" { print $1 }')
 5846* VM_ID=$(vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" { print $1 }')
 5847* echo $VM_ID
 5848* VM_ID=$(vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" { print $1 }')
 5849* echo $VM_ID
 5850* clear
 5851* clesar
 5852* clear
 5853* vagrant global-status | awk -v name="$vm" '$2 == name && $4 == "running" { print $1 }'
 5854* vagrant global-status | awk -v name="$VM_ID" '$2 == name && $4 == "running" { print $1 }'
 5855* vagrant global-status | awk -v name="$vm" '$2 == name && $4 == "running" { print $1 }'
 5856* vagrant global-status | awk -v name="$VM_ID" '$2 == name && $4 == "running" && { print $1 }'
 5857* vagrant global-status | awk -v name="$VM_ID" '$2 == name && $4 == "running" { print $2 }'
 5858* clear
 5859* VM_ID=$(vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" {print $1}')
 5860* vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" {print $1}')
 5861* vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" {print $1}'
 5862* vagrant status | grep -i "^$vms" | awk '{print $1, $2}'
 5863* vagrant status | grep -i "^master" | awk '{print $1, $2}'
 5864* vagrant up master
 5865* vagrant status | grep -i "worker running" | awk '{print $1, $2}'
 5866* vagrant status | grep -i "worker1 running" | awk '{print $1, $2}'
 5867* vagrant status | grep -i "master running" | awk '{print $1, $2}'
 5868* vagrant status | grep -i "master running" 
 5869* vagrant status
 5870* vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" { print $2 }'
 5871* vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" { print $3 }'
 5872* vagrant global-status
 5873* vagrant global-status | awk -v name="master" '$2 == name && $4 == "running" { print $4 }'
 5874* vagrant status
 5875* vagrant worker1 up
 5876* vagrant --help
 5877* vagrant up worker1
 5878* vagrant up worker2
 5879* vagrant global-status | awk -v name="master" '$2 == name { print $4 }'
 5880* vagrant global-status | awk -v name="worker1" '$2 == name { print $4 }'
 5881* vagrant global-status | awk -v name="worker2" '$2 == name { print $4 }'
 5882* vagrant global-status\n: 1744065733:0;vagrant global-status | awk '$2 == "master" { print $4 }'\n: 1744065770:0;vagrant global-status | grep -iE "\s+$vms\s+" | awk '{ print $4 }'
 5883* vagrant global-status | grep -iE "\s+master\s+" | awk '{ print $4 }'
 5884* vagrant global-status | awk '{ print $2 }'\n: 1744065856:0;VM_STATE=$(vagrant global-status | grep -iE "\s+$vms\s+" | awk '{ print $4 }')
 5885* echo $VM_STATE
 5886* VM_STATE=$(vagrant global-status | grep -iE "\s+master\s+" | awk '{ print $4 }')
 5887* echo $VM_STATE
 5888* VM_STATE=$(vagrant global-status | grep -iE "\s+worker1\s+" | awk '{ print $4 }')
 5889* echo $VM_STATE
 5890* VM_STATE=$(vagrant global-status | grep -iE "\s+worker2\s+" | awk '{ print $4 }')
 5891* echo $VM_STATE
 5892* VM_STATE=$(vagrant global-status | grep -iE "\s+master\s+" | awk '{ print $4 }')clear
 5893* clear
 5894* vagrant status
 5895* vagrant status | awk -v nome="master" '$1 == nome { print $2 }'
 5896* vagrant status | awk -v nome="master" '$1 == nome { print $2 }' | xargs
 5897* git status
 5898* vagrant stop worker1
 5899* vagrant halt worker1
 5900* vagrant status
 5901* vagrant ssh-config
 5902* vagrant ssh-config master
 5903* vagrant ssh-config worker
 5904* vagrant ssh-config worker1
 5905* vagrant ssh-config worker2
 5906* ping master
 5907* clear
 5908* vagrant ssh master -c "hostname -I"
 5909* ping 192.168.1.150
 5910* vagrant up worker1
 5911* vagrant ssh master
 5912* vagrant status
 5913* vagrant global-status
 5914* history | grep "vagrant global-status"
 5915* vagrant global-status | grep -i master | awk {'print $1'}
 5916* vagrant global-status | awk {'print $1'}
 5917* vagrant global-status | grep -i master | awk {'print $1'} > vagrant-sts.txt
 5918* cat vagrant-sts.txt
 5919* vagrant global-status | grep -i master | awk {'print $1 $2'} > vagrant-sts.txt
 5920* cat vagrant-sts.txt
 5921* vagrant global-status | grep -i worker1 | awk {'print $1'} >> vagrant-sts.txt
 5922* cat vagrant-sts.txt
 5923* cp /dev/null vagrant-sts.txt
 5924* vagrant global-status | grep -i master | awk {'print $1'} > vagrant-sts.txt
 5925* vagrant global-status | grep -i master | awk {'print $1 $2'} > vagrant-sts.txt
 5926* cat vagrant-sts.txt
 5927* vagrant global-status | grep -i "master" | awk '$4 == "running" {print $1 $2}'
 5928* vagrant global-status | grep -i "master" | awk '$4 == "running" {print $1"-"" $2}'
 5929* vagrant global-status | grep -i "master" | awk '$4 == "running" {print $1"-"$2}'
 5930* vagrant global-status 
 5931* vagrant global-status | awk '/virtualbox/ && /running/ && /master|worker1|worker2/' > vms_status.txt
 5932* cat vms_status.txt
 5933* echo $HOME/.vagrant.d
 5934* sudo -u gitlab-runner vagrant global-status
 5935* sudo -u gitlab-runner vagrant status
 5936* cut -d ' ' -f 1,2 ~/Downloads/vms_status.txt
 5937* cut -d ' ' -f 1-2 ~/Downloads/vms_status.txt
 5938* cut -d ' ' -f 1:2 ~/Downloads/vms_status.txt
 5939* cut -d ' ' -f 1,3 ~/Downloads/vms_status.txt
 5940* cut -d ' ' -f1 ~/Downloads/vm_master_id.txt
 5941* cut -d ' ' -f1 ~/Downloads/vm_worker1_id.txt
 5942* ls
 5943* pwd
 5944* vagrant ssh master
 5945* sudo -u gitlab-runner vagrant ssh master
 5946* ls /home/carlos-leonardo/.vagrant.d/
 5947* ls /home/carlos-leonardo/.vagrant.d/boxes/
 5948* ls /home/carlos-leonardo/.vagrant.d/data
 5949* ls
 5950* docker image ls
 5951* clear
 5952* vagrant ssh 94f0c8c 
 5953* sudo --help
 5954* sudo -S --help
 5955* group gitlab-runner
 5956* getent group gitlab-runner
 5957* getent user gitlab-runner
 5958* user gitlab-runner
 5959* sudo usermod --help
 5960* usermod -aG root gitlab-runner
 5961* sudo usermod -aG root gitlab-runner
 5962* passwd gitlab-runner
 5963* sudo passwd gitlab-runner
 5964* clear
 5965* vagrant status
 5966* vagrant global-status
 5967* vagrant --help
 5968* sudo chown -R $USER:$USER ~/.config/VirtualBox
 5969* git status
 5970* vagrant status
 5971* vagrant status | awk -v nome="$vm" '$1 == nome { print $2 }' | xargs
 5972* vagrant status | awk -v nome="master" '$1 == nome { print $2 }' | xargs -r
 5973* vagrant ssh master
 5974* vagrant ssh worker1
 5975* vagrant ssh worker2
 5976* sudo ls -ltr .vagrant/
 5977* sudo chmod -R o+r ~/.vagrant
 5978* ls ~/.vagrant
 5979* ls
 5980* ls -la
 5981* sudo chmod -R o+r .vagrant/
 5982* ls -la
 5983* sudo ln -s /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/.vagrant/ /home/gitlab-runner/.vagrant
 5984* sudo chown -R gitlab-runner:gitlab-runner /home/gitlab-runner/.vagrant
 5985* ls /home/gitlab-runner/
 5986* sudo ls -la /home/gitlab-runner/
 5987* vagrant ssh-config master
 5988* clear
 5989* ssh vagrant@192.168.1.150 -p 2222 -i /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/.vagrant/machines/master/virtualbox/private_key "sudo sh -c '\n          if ! id vagrant | grep -oq microk8s; then\n            sudo usermod -aG microk8s vagrant\n            sudo chown -f -R vagrant /home/vagrant/.kube\n            continue\n          else\n            echo \"Usu
 5990* rio vagrant ja esta no grupo microk8s em $vm\"\n            continue\n          fi'"
 5991* ssh vagrant@master -p 2222 -i /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/.vagrant/machines/master/virtualbox/private_key "sudo sh -c '\n          if ! id vagrant | grep -oq microk8s; then\n            sudo usermod -aG microk8s vagrant\n            sudo chown -f -R vagrant /home/vagrant/.kube\n            continue\n          else\n            echo \"Usu
 5992* rio vagrant ja esta no grupo microk8s em master\"\n            continue\n          fi'"
 5993* ssh vagrant@master -p 22 -i /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/.vagrant/machines/master/virtualbox/private_key "sudo sh -c '\n          if ! id vagrant | grep -oq microk8s; then\n            sudo usermod -aG microk8s vagrant\n            sudo chown -f -R vagrant /home/vagrant/.kube\n            continue\n          else\n            echo \"Usu
 5994* rio vagrant ja esta no grupo microk8s em master\"\n            continue\n          fi'"
 5995* ssh vagrant@127.0.0.1 -p 2222 -i /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/.vagrant/machines/master/virtualbox/private_key "sudo sh -c '\n          if ! id vagrant | grep -oq microk8s; then\n            sudo usermod -aG microk8s vagrant\n            sudo chown -f -R vagrant /home/vagrant/.kube\n            continue\n          else\n            echo \\\"Usu
 5996* rio vagrant ja esta no grupo microk8s em master\\\"\n            continue\n          fi'"
 5997* sssh 
 5998* ssh vagrant@master -p 2222 -i /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/.vagrant/machines/master/virtualbox/private_key
 5999* exit
 6000* sudo gitlab-runner stop
 6001* ls /etc/gitlab-runner/
 6002* find / -name config.tom
 6003* clear
 6004* sudo find / -name config.tom
 6005* sudo find / -name config.toml
 6006* sudo cd /etc/gitlab-runner/
 6007* ls
 6008* sudo cat /etc/gitlab-runner/config.toml
 6009* cp /etc/gitlab-runner/config.toml /home/carlos-leonardo/
 6010* sudo cp /etc/gitlab-runner/config.toml /home/carlos-leonardo/
 6011* cd /home/carlos-leonardo/
 6012* cat config.toml
 6013* sudo su
 6014* sudo -u gitlab-runner bash -l -c 'echo shell funcionando'\n: 1744104785:0;sudo -u carlos-leonardo bash -l -c 'echo shell funcionando'
 6015* sudo -u gitlab-runner bash -l\n: 1744104834:0;sudo -u carlos-leonardo bash -l
 6016* vim /home/carlos-leonardo/.gitlab-runner/config.toml
 6017* sudo vim /etc/gitlab-runner/config.toml
 6018* sudo gitlab-runner restart
 6019* cat /home/gitlab-runner/.bash_logou
 6020* sudo cat /home/gitlab-runner/.bash_logout
 6021* sudo su
 6022* sudo gitlab-runner --debug run
 6023* sudo cat ~/.bashrc
 6024* sudo cat ~/.bash_profile
 6025* sudo cat ~/.bashrc
 6026* sudo vim ~/.bashrc
 6027* bash --noprofile --norc -c "source ~/.bashrc; echo OK"
 6028* cd /home/carlos-leonardo/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 6029* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6030* clear
 6031* vagrant destroy
 6032* ls
 6033* id -nu 1000
 6034* id gitlab-runner
 6035* vagrant up
 6036* vagrant status
 6037* sudo apt-get install gtk2-engines-murrine:i386 libcanberra-gtk-module:i386 libatk-adaptor:i386 libgail-common:i386
 6038* sudo apt update
 6039* sudo apt-get install adobereader-enu
 6040* sudo apt-get update
 6041* sudo apt-get install adobereader-enu
 6042* Explique comando git push
 6043* Explique o comando docker system df
 6044* pwd
 6045* vagrant status
 6046* vagrant up
 6047* vagrant status
 6048* id gitlab-runner
 6049* cd .vagrant/machines/
 6050* ls
 6051* ls master/
 6052* ls master/virtualbox
 6053* cat master/virtualbox/creator_uid
 6054* cat master/virtualbox/id
 6055* vim master/virtualbox/creator_uid
 6056* vim worker1/virtualbox/creator_uid
 6057* vim worker2/virtualbox/creator_uid
 6058* vagrant stop
 6059* vagrant halt worker1
 6060* sudo --help
 6061* sudo -u carlos-leonardo vagrant halt worker1
 6062* sudo -u gitlab-runner vagrant halt worker1
 6063* vim worker1/virtualbox/creator_uid
 6064* vim .vagrant/worker1/virtualbox/creator_uid
 6065* vim .vagrant/machines/virtualbox/worker1/virtualbox/creator_uid
 6066* vim .vagrant/machines/virtualbox/worker1/virtualbox/creator_uid    
 6067* ls
 6068* vim worker1/virtualbox/creator_uid
 6069* sudo -u gitlab-runner vagrant halt worker1
 6070* vim worker1/virtualbox/creator_uid
 6071* echo "997" > worker1/virtualbox/creator_uid
 6072* vim worker1/virtualbox/creator_uid
 6073* cat worker2/virtualbox/creator_uid
 6074* cat master/virtualbox/creator_uid
 6075* cat worker1/virtualbox/creator_uid
 6076* vagrant status
 6077* sudo -u gitlab-runner vagrant halt worker1
 6078* echo "1000" > worker1/virtualbox/creator_uid
 6079* echo "1000" > worker2/virtualbox/creator_uid
 6080* echo "1000" > master/virtualbox/creator_uid
 6081* vagrant status
 6082* vagrant destroy
 6083* vagrant status
 6084* vagrant destroy
 6085* clear
 6086* vagrant status
 6087* cd ..
 6088* ls
 6089* vagrant destroy
 6090* ls
 6091* vagrant status
 6092* rm -f .vagrant/
 6093* rm -rf .vagrant/
 6094* ls
 6095* vagrant update --help
 6096* ls
 6097* vagrant status
 6098* vagrant destroy master
 6099* ls
 6100* ls -la
 6101* rm -rf .vagrant/
 6102* sudo rm -rf .vagrant/
 6103* cat vagrant-sts.txt
 6104* rm -rf vagrant-sts.txt
 6105* rm -rf vms_status.txt
 6106* ls
 6107* ls -l
 6108* ls -la
 6109* sudo gitlab-runner verify
 6110* sudo gitlab-runner list\n: 1744239355:0;ps aux | grep gitlab-runner\n: 1744239939:0;sudo vim ~/.bashrc
 6111* sudo gitlab-runner restart
 6112* sudo gitlab-runner status
 6113* sudo gitlab-runner stop
 6114* sudo gitlab-runner start
 6115* sudo gitlab-runner status
 6116* cat /home/gitlab-runner/.bash_logout
 6117* sudo cat /home/gitlab-runner/.bash_logout
 6118* sudo gitlab-runner register  --url https://gitlab.com  --token glrt-bzoxCnA6MTRycjcxCnQ6Mwp1OmFreXA3JbT5Uq_4GubpwgrMN2bXKhA.1j0niepau
 6119* gitlab-runner run
 6120* gitlab-runner stop
 6121* sudo cp /dev/null /etc/gitlab-runner/config.toml
 6122* sudo cat /etc/gitlab-runner/config.toml
 6123* sudo su
 6124* sudo rm -rf .git
 6125* ls -la
 6126* git init
 6127* ls
 6128* git remote add origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 6129* git branch -M main
 6130* git push -uf origin main
 6131* git push origin main
 6132* git push origin HEAD:main
 6133* git push origin HEAD
 6134* sudo rm -rf .git
 6135* git remote add origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 6136* git init
 6137* git remote add origin https://gitlab.com/carlosleosouza/devops-app-v1.git
 6138* git branch -M main\n: 1744241183:0;git add .
 6139* git rm --cached builds/GSNxU6HzR/0/carlosleosouza/devops-app
 6140* git rm -f --cached builds/GSNxU6HzR/0/carlosleosouza/devops-app
 6141* git commit -m "Remove embedded repository"
 6142* g push
 6143* git push --set-upstream origin main
 6144* git push origin main
 6145* git pull origin main
 6146* git branch
 6147* !
 6148* git status
 6149* rm -rf builds/
 6150* ls
 6151* rm -rf .git
 6152* git init
 6153* git remote add origin https://gitlab.com/carlosleosouza/devops-app-v1.git\n: 1744241362:0;git branch -M main\n: 1744241368:0;git push -uf origin main\n: 1744241374:0;git push -uf origin HEAD
 6154* git add .
 6155* git commit -m "Remove embedded repository"
 6156* git push -u origin main
 6157* ls
 6158* ls -la
 6159* git pull origin main
 6160* git pull --rebase
 6161* git branch
 6162* git branch --set-upstream-to=origin/main main\n: 1744241712:0;git pull --rebase
 6163* git status
 6164* git add .
 6165* git commit -m "Initial commit"
 6166* git push
 6167* gp -u origin main
 6168* gitlab-runner register  --url https://gitlab.com  --token glrt-bzoxCnA6MTR6Z3VnCnQ6Mwp1OmFreXA31BukVVjerBvGhWXJiPyErRA.1j1w2nmwo
 6169* sudo gitlab-runner run
 6170* gitlab-runner restart
 6171* apt remove gitlab-runner
 6172* rm -rf /etc/gitlab-runner/
 6173* sudo rm -rf /etc/gitlab-runner/
 6174* rm -rf /home/carlos-leonardo/.gitlab-runner/
 6175* sudo apt autoremove
 6176* sudo apt clean all
 6177* sudo apt update
 6178* ls -la
 6179* rm -rf config.toml
 6180* apt install gitlab-runner -y
 6181* apt list --upgradable
 6182* sudo apt upgrade -y
 6183* sudo apt full-upgrade -y
 6184* gitlab-runner start
 6185* gitlab-runner register  --url https://gitlab.com  --token glrt-bzoxCnA6MTR6Z3VnCnQ6Mwp1OmFreXA31BukVVjerBvGhWXJiPyErRA.1j1w2nmwo
 6186* gitlab-runner start
 6187* gitlab-runner register  --url https://gitlab.com  --token glrt-bzoxCnA6MTR6Z3VnCnQ6Mwp1OmFreXA31BukVVjerBvGhWXJiPyErRA.1j1w2nmwo
 6188* sudo gitlab-runner register  --url https://gitlab.com  --token glrt-bzoxCnA6MTR6Z3VnCnQ6Mwp1OmFreXA31BukVVjerBvGhWXJiPyErRA.1j1w2nmwo
 6189* gitlab-runner register  --url https://gitlab.com  --token glrt-bzoxCnA6MTR6Z3VnCnQ6Mwp1OmFreXA3zV0SRAsKCfuMj4BVF9jzOxA.1j0rgo3z5
 6190* sudo gitlab-runner run
 6191* sudo gitlab-runner status
 6192* sudo gitlab-runner list
 6193* sudo gitlab-runner verify
 6194* sudo gitlab-runner restart
 6195* sudo gitlab-runner status
 6196* cat /home/gitlab-runner/.bash_logout
 6197* sudo cat /home/gitlab-runner/.bash_logout
 6198* sudo touch /home/gitlab-runner/.bash_logout
 6199* sudo gitlab-runner
 6200* sudo gitlab-runner install
 6201* sudo gitlab-runner install --user carlos-leonardo
 6202* cat /etc/systemd/system/gitlab-runner.service
 6203* sudo gitlab-runner unregister
 6204* sudo gitlab-runner unregister --token glrt-bzoxCnA6MTR6Z3VnCnQ6Mwp1OmFreXA3zV0SRAsKCfuMj4BVF9jzOxA.1j0rgo3z5
 6205* gitlab-runner list
 6206* sudo gitlab-runner unregister --name Leo-Vostro
 6207* sudo gitlab-runner unregister --name Leo-Votro --token glrt-bzoxCnA6MTR6Z3VnCnQ6Mwp1OmFreXA3zV0SRAsKCfuMj4BVF9jzOxA.1j0rgo3z5
 6208* sudo gitlab-runner unregister --name Leo-Vostro --token glrt-bzoxCnA6MTR6Z3VnCnQ6Mwp1OmFreXA3zV0SRAsKCfuMj4BVF9jzOxA.1j0rgo3z5
 6209* sudo gitlab-runner health-check
 6210* sudo gitlab
 6211* sudo su
 6212* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6213* git status
 6214* sudo su
 6215* docker image ls
 6216* docker image rmi 7662d889ebb3 7662d889ebb3 ca4c625fdf02 c074d3195280 8562effc647f 126e20ac8e11
 6217* docker image ls
 6218* docker image rmi -f 7662d889ebb3 8562effc647f
 6219* docker image ls
 6220* clear
 6221* vagrant status
 6222* sudo -u gitlab-runner
 6223* sudo -S gitlab-runner
 6224* su - gitlab-runner
 6225* sudo -u gitlab-runner
 6226* sudo - gitlab-runner
 6227* su - gitlab-runner
 6228* ls /etc/sudoers.d/
 6229* cat /etc/sudoers.d/gitlab-runner
 6230* sudo vim /etc/sudoers.d/gitlab-runner
 6231* su - gitlab-runner
 6232* vagrant status
 6233* su - gitlab-runner
 6234* whois
 6235* who
 6236* vim ~/.zshrc
 6237* pk10 configure
 6238* p10k configure
 6239* ls ~./fonts
 6240* ls ~/.fonts
 6241* ls ls -la ~
 6242* ls /usr/share/fonts
 6243* ls /usr/share/fonts/truetype/
 6244* pwd
 6245* cd ~
 6246* ls
 6247* mkdir ~/.fonts
 6248* wget -P ~/.fonts 'https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/BitstreamVeraSansMono.zip'
 6249* unzip ~/.fonts/BitstreamVeraSansMono.zip -d ~/.fonts
 6250* vim ~/.p10k.zsh\n: 1744390140:0;p10k configure
 6251* ls
 6252* source ~/.zshrc
 6253* clear
 6254* ls
 6255* pwd
 6256* clear
 6257* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6258* who
 6259* sudo cp /home/$USER/.zshrc /root
 6260* ls /root
 6261* sudo ls /root
 6262* sudo ls -la /root
 6263* sudo cp -r /home/$USER/.oh-my-zsh /root/
 6264* sudo vim /root/.zshrc
 6265* exit
 6266* sudo su
 6267* ls
 6268* p10k configure
 6269* clear
 6270* ls
 6271* cp ~/.zshrc /home/gitlab-runner/
 6272* sudo cp ~/.zshrc /home/gitlab-runner/
 6273* sudo cp -R /home/carlos-leonardo/.oh-my-zsh/ /home/gitlab-runner/
 6274* su - gitlab-runner
 6275* cd ~
 6276* p10k configure
 6277* la
 6278* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6279* ls
 6280* cd ~
 6281* cd ~/Downloads
 6282* l
 6283* sudo ls -la /root
 6284* cd ~
 6285* sudo cp /root/.p10k.zsh ~
 6286* cat .p10k.zsh
 6287* vim ~/.zshrc
 6288* clear
 6289* exit
 6290* source ~/.zshrc
 6291* clear
 6292* sudo - gitlab-runner
 6293* sudo gitlab-runner
 6294* su - gitlab-runner
 6295* sudo gitlab-runner start
 6296* sudo gitlab-runner run
 6297* sudo - gitlab-runner
 6298* sudo gitlab-runner run
 6299* sudo - gitlab-runner
 6300* sudo
 6301* sudo - gitlab-runner
 6302* clear
 6303* su - gitlab-runner
 6304* clear
 6305* ls
 6306* sudo usermod -aG gitlab-runner root
 6307* sudo usermod -aG gitlab-runner $USER
 6308* sudo gitlab-runner uninstall\nsudo userdel -r gitlab-runner\n: 1744399954:0;sudo gitlab-runner stop
 6309* sudo gitlab-runner uninstall\nsudo userdel -r gitlab-runner\n: 1744399971:0;ps aux | grep 54018
 6310* exiit
 6311* exit
 6312* sudo gitlab-runner uninstall\nsudo userdel -r gitlab-runner
 6313* sudo gpasswd -d root gitlab-runner
 6314* sudo gpasswd -d carlos-leonardo gitlab-runner
 6315* sudo gitlab-runner uninstall\nsudo userdel -r gitlab-runner
 6316* sudo gitlab-runner uninstall
 6317* gitlab-runner
 6318* sudo apt remove gitlab-runner
 6319* sudo apt install gitlab-runner
 6320* sudo apt remove gitlab-runner --purge && sudo groupdel gitlab-runner || true
 6321* sudo apt install gitlab-runner
 6322* sudo systemctl status gitlab-runner
 6323* gitlab-runner register
 6324* sudo gitlab-runner register --url https://gitlab.com
 6325* sudo gitlab-runner status
 6326* sudo gitlab-runner list
 6327* sudo cat /etc/gitlab-runner/config.toml
 6328* sudo systemctl stop gitlab-runner && sudo cp /etc/gitlab-runner/config.toml /etc/gitlab-runner/config.toml.backup && echo 'concurrent = 1\ncheck_interval = 0\nconnection_max_age = "15m0s"\nshutdown_timeout = 0\n[session_server]\n  session_timeout = 1800\n[[runners]]\n  name = "Leo-Vostro"\n  url = "https://gitlab.com"\n  id = 46954519\n  token = "glrtr-bzoxCnA6MTUwdjhiCnQ6MzleDWUwmh8D_TpOEIX4lvEQ.18012xtlp"\n  token_obtained_at = 2025-04-11T19:46:06Z\n  token_expires_at = 0001-01-01T00:00:00Z\n  executor = "shell"\n  [runners.cache]\n    MaxUploadedArchiveSize = 0' | sudo tee /etc/gitlab-runner/config.toml && sudo systemctl start gitlab-runner
 6329* sudo systemctl status gitlab-runner
 6330* gitlab-runner install --user\ngitlab-runner start
 6331* gitlab-runner install --user carlos-leonardo\ngitlab-runner start
 6332* systemctl --user enable gitlab-runner\n: 1744401135:0;gitlab-runner install
 6333* cat /etc/systemd/system/gitlab-runner.service
 6334* vim /etc/systemd/system/gitlab-runner.service
 6335* sudo vim /etc/systemd/system/gitlab-runner.service
 6336* sudo systemctl restart gitlab-runner
 6337* systemctl daemon-reload
 6338* sudo systemctl restart gitlab-runner
 6339* sudo systemctl status gitlab-runner
 6340* clear
 6341* su - gitlab-runner
 6342* sudo ls /home/gitlab-runner/ 
 6343* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6344* ls
 6345* vagrant status
 6346* sudo apt remove vagrant
 6347* ls
 6348* ls -la
 6349* rm -rf .vagrant/
 6350* sudo rm -rf .vagrant/
 6351* sudo apt install vagrant
 6352* vagrant --version
 6353* vagrant status
 6354* l
 6355* ls -l
 6356* ls -la
 6357* ls .vagrant/
 6358* ls .vagrant/machines/
 6359* ls ~/VirtualBox\ VMs/
 6360* sudo rm -rf .vagrant/machines/master/
 6361* sudo rm -rf .vagrant/machines/worker1
 6362* sudo rm -rf .vagrant/machines/worker2
 6363* vagrant status
 6364* git remote -v
 6365* vboxmanage list vms
 6366* rm -rf builds/
 6367* sudo rm -rf builds/
 6368* vagrant up
 6369* git remote set-url origin https://oauth2:[REDACTED-GITLAB-TOKEN]@gitlab.com/carlosleosouza/devops-project.git
 6370* git remote -v
 6371* git add .\ngit commit -m "Ajuste ap
 6372* s mudan
 6373* a de diret
 6374* rio"\ngit push origin main 
 6375* git pull origin main
 6376* git fetch origin
 6377* git log origin/main --oneline
 6378* git pull origin main --rebase
 6379* git push origin main
 6380* gti status
 6381* git status
 6382* vagrant 
 6383* vagrant ssh worker1 -c "sudo sh -c microk8s add-node | grep 'microk8s join.*--worker' | sed 's/.*\(microk8s join.*--worker\)/\1/'"
 6384* vagrant ssh worker2 -c "sudo sh -c microk8s add-node | grep 'microk8s join.*--worker' | sed 's/.*\(microk8s join.*--worker\)/\1/'"
 6385* vagrant ssh master
 6386* vagrant ssh worker1 -c "sudo sh -c microk8s join 10.0.2.15:25000/be40b6bae03442791d21be139efbb192/e7bde4e68251 --worker"
 6387* vagrant ssh worker1 bash -c "sudo sh -c microk8s join 10.0.2.15:25000/be40b6bae03442791d21be139efbb192/e7bde4e68251 --worker"
 6388* vagrant ssh worker1 sh -c "sudo sh -c microk8s join 10.0.2.15:25000/be40b6bae03442791d21be139efbb192/e7bde4e68251 --worker"
 6389* vagrant ssh worker1 -c "sudo microk8s join 10.0.2.15:25000/be40b6bae03442791d21be139efbb192/e7bde4e68251 --worker"
 6390* vagrant ssh worker1 -c "sudo microk8s join 192.168.1.150:25000/be40b6bae03442791d21be139efbb192/e7bde4e68251 --worker"
 6391* vagrant ssh worker1
 6392* vagrant ssh master
 6393* vagrant ssh worker1
 6394* vagrant ssh worker2
 6395* vagrant ssh worker1
 6396* sudo vagrant ssh worker2
 6397* vagrant ssh worker2
 6398* vagrant ssh master
 6399* vagrant ssh worker1
 6400* vagrant ssh master
 6401* vagrant ssh worker1
 6402* vagrant ssh master
 6403* vagrant ssh worker1
 6404* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6405* vagramt ssh master
 6406* vagrant ssh master
 6407* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6408* vagrant ssh worker2
 6409* htop
 6410* exit
 6411* sudo su
 6412* vagrant ssh worker1
 6413* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6414* vagrant ssh master
 6415* vagrant ssh worker2
 6416* vagrant ssh worker1
 6417* vagrant ssh master
 6418* htop
 6419* systemctl status docker
 6420* systemctl stop docker
 6421* htop
 6422* vim Vagrantfile
 6423* npm install -g multiexec
 6424* sudo npm install -g multiexec
 6425* git clone https://github.com/tmux/tmux.git\ncd tmux\nsh autogen.sh\n./configure && make
 6426* sudo apt-get install automake
 6427* sh autogen.sh
 6428* ./configure && make
 6429* sudo apt-get install libevent-dev
 6430* ./configure && make
 6431* sudo apt-get install bison
 6432* ./configure && make
 6433* sudo apt-get install bison
 6434* sudo apt-get install libncurses-dev
 6435* ./configure && make
 6436* sudo make install
 6437* ./configure && make
 6438* sudo make install
 6439* tmux
 6440* exit
 6441* ls
 6442* sudo npm uninstall  multiexec
 6443* sudo npm uninstall -g multiexec
 6444* rm -rf tmux
 6445* tmux
 6446* ls
 6447* cd ..
 6448* rm -rf tmux
 6449* cd tmux
 6450* exit
 6451* tmux
 6452* exit
 6453* ls
 6454* ls -l
 6455* cd ..
 6456* ls -l
 6457* sudo find / -name tmux
 6458* htop
 6459* nap remove multipass
 6460* snap remove multipass
 6461* snap list
 6462* nap remove microk8s
 6463* snap remove microk8s
 6464* htop
 6465* clear
 6466* la
 6467* vagrant status
 6468* vagrant up
 6469* vagrant ssh master
 6470* vagrant provision master
 6471* vagrant 
 6472* vagrant reload
 6473* vagrant status
 6474* vagrant ssh master
 6475* docker build -t devops-app-green:local .
 6476* docker image ls
 6477* docker tag devops-app-green:local carlosleosouza/devops-app-green:latest
 6478* docker push carlosleosouza/devops-app-green:latest
 6479* docker rmi devops-app-green:local
 6480* docker image ls
 6481* docker image rmi -f devops-app:v1.0
 6482* docker image prune -f
 6483* docker image ls
 6484* docker build -t devops-app-blue:local .
 6485* docker tag devops-app-blue:local carlosleosouza/devops-app-blue:latest
 6486* docker push carlosleosouza/devops-app-blue:latest
 6487* vagrant ssh master
 6488* docker image ls
 6489* docker image rmi devops-app-blue:local
 6490* docker image ls
 6491* vagrant ssh master
 6492* echo "foo www.google.com" >> ~/.hosts
 6493* cat ~/.hosts
 6494* rm ~/.hosts
 6495* cat /etc/nsswitch.conf | grep -v '#' | sed -r '/^\s*$/d'
 6496* systemd-resolv --status
 6497* systemd-resolve --status
 6498* resolvectl status
 6499* resolvectl query google.com
 6500* resolvectl dns wlp0s20f3 1.1.1.1
 6501* resolvectl status
 6502* resolvectl dns wlp0s20f3 1.1.1.1 1.0.0.1
 6503* resolvectl status
 6504* sudo apt update -y && sudo apt upgrade -y && sudo apt full-upgrade -y
 6505* sudo apt dist-upgrade -y
 6506* sudo apt autoremove -y
 6507* vagrant up
 6508* vagrant ssh master
 6509* resolvectl status
 6510* clear
 6511* vagrant up
 6512* resolvectl dns wlp0s20f3  208.67.222.222 208.67.220.220
 6513* resolvectl status
 6514* vagrant up
 6515* vagrant ssh master
 6516* docker image ls
 6517* vagrant up --provision
 6518* vagrant --help
 6519* vagrant halt worker1
 6520* vagrant halt worker2
 6521* vagrant halt master
 6522* vagrant status
 6523* vagrant up --provision
 6524* vagrant ssh master]
 6525* vagrant ssh master
 6526* docker image history carlosleosouza/devops-app-green
 6527* docker image inspect carlosleosouza/devops-app-green
 6528* docker image ls
 6529* docker build -t devops-app-green:local .
 6530* cat app/
 6531* docker tag devops-app-green:local carlosleosouza/devops-app-green:latest
 6532* docker push carlosleosouza/devops-app-green:latest
 6533* docker image ls
 6534* docekr rmi devops-app-green:local
 6535* docker rmi devops-app-green:local
 6536* clear
 6537* vagrant ssh master
 6538* pwd
 6539* cd /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 6540* docekr image ls
 6541* clear
 6542* docker image ls
 6543* docker image rm 5326e16a2435 be401627bbfe
 6544* ls
 6545* cd /home/carlos-leonardo/Documentos/UTILDISK/Documentos/Cursos/LABs/LAB-Devops/
 6546* cd /home/carlos-leonardo/Documentos/UTILDISK/Cursos/LABs/LAB-Devops/
 6547* cd /home/carlos-leonardo/UTILDISK/Cursos/LABs/LAB-Devops/
 6548* clear
 6549* lw
 6550* clear
 6551* ls
 6552* docker image ls
 6553* cat app/app.py
 6554* docker build -t devops-app-green:local .
 6555* docker tag devops-app-blue:local carlosleosouza/devops-app-green:v2
 6556* docker tag devops-app-green:local carlosleosouza/devops-app-green:v2
 6557* docker push carlosleosouza/devops-app-green:v2
 6558* docker image ls
 6559* docker image rm devops-app-green:local
 6560* docker image ls
 6561* docker build -t devops-app-green:v3 .
 6562* docker run -it devops-v3 --image=devops-app-green:v3
 6563* docker run -it --image=devops-app-green:v3 devops-app-green-v3
 6564* docker ima ge ls
 6565* docker image ls
 6566* docker run --help
 6567* docker run -it --image devops-app-green:v3 devops-app
 6568* docker run -it devops-app-green:v3 devops-app
 6569* docker run -it devops-app-green:v3 devops-app bash
 6570* docker run -d -p 5001:5001 --name app-green devops-app-green:v3
 6571* docker ps
 6572* docker exec -it ac9b11fdfc50 bash
 6573* vagrant ssh master
 6574* clear
 6575* vagrant status
 6576* vagrant ssh master
 6577* vagrant status master
 6578* vagrant globa
 6579* vagrant global-status
 6580* vagrant global-status --prune
 6581* vagrant global-status
 6582* vagrant ssh master
 6583* vagrant halt master
 6584* docker image ls
 6585* docker tag devops-app-green:v3 carlosleosouza/devops-app-green:v3
 6586* docker push carlosleosouza/devops-app-green:v3
 6587* docker image rmi devops-app-blue:v3
 6588* docker image ls
 6589* docker image rmi devops-app-green:v3
 6590* docker ps
 6591* docker rm ac9b11fdfc50
 6592* docker rm -f ac9b11fdfc50
 6593* clear
 6594* docker ps -a
 6595* vagrant ssh worker1
 6596* vagrat up master
 6597* vagrant up master
 6598* docker image ls
 6599* vagrant ssh master
 6600* vagrant status
 6601* vagrant ssh master
 6602* ls
 6603* docker image ls
 6604* docker image rmi c8a9b832f40d 5326e16a2435 af3f36b5bf96 7389b4851077
 6605* docker image rmi -f c8a9b832f40d 5326e16a2435 af3f36b5bf96 7389b4851077
 6606* clear
 6607* docker ps
 6608* docker ps -a
 6609* clear
 6610* docker image ls
 6611* ls
 6612* ping 192.168.1.241
 6613* ping 192.168.1.240
 6614* ping 192.168.1.100
 6615* ping 192.168.1.120
 6616* ping 192.168.1.110
 6617* ping 192.168.1.1010
 6618* ping 192.168.1.101
 6619* ping 192.168.1.102
 6620* ping 192.168.1.103
 6621* ping 192.168.1.104
 6622* ping 192.168.1.105
 6623* vim metalb-config.yaml
 6624* ls
 6625* vim metallb-addresses.yaml
 6626* vagrant ssh master
 6627* vagrant halt master
 6628* docker build -t devops-app-blue:local -f Dockerfile-blue
 6629* docker build-f Dockerfile-blue -t Dockerfile-blue
 6630* ls
 6631* docker build -f Dockerfile-blue -t devops-app-blue:local .
 6632* docker build -f Dockerfile-green -t devops-app-green:local .
 6633* docker tag devops-app-green:local carlosleosouza/devops-app-green:v5
 6634* docker push carlosleosouza/devops-app-green:v5
 6635* docker tag devops-app-blue:local carlosleosouza/devops-app-blue:v5
 6636* docker push carlosleosouza/devops-app-blue:v5
 6637* vagrant up master
 6638* vagrant ssh master
 6639* ping 192.168.1.100
 6640* ping 192.168.1.101
 6641* ping 192.168.1.100
 6642* ping 192.168.1.101
 6643* nc -vz 192.168.1.100 81
 6644* nc -vz 192.168.1.101 80
 6645* vagrant ssh master
 6646* curl http://192.168.1.101
 6647* curl http://192.168.1.100
 6648* curl http://192.168.1.100:81
 6649* vagrant up
 6650* vagrant ssh master
 6651* cd ..
 6652* ls
 6653* mkdir pipeline-elite
 6654* cd pipeline-elite
 6655* mkdir docs src 
 6656* ls
 6657* code .
 6658* cd ..
 6659* ls
 6660* cd LAB-Devops
 6661* ls
 6662* vagrant status
 6663* cd ..
 6664* mkdir kubedev
 6665* cd kubedev
 6666* git clone https://github.com/kubedev/pedelgo-catalogo.git
 6667* ls ~/.ssh
 6668* cat ~/.ssh/id_gitlab.pub
 6669* eval "$(ssh-agent -s)"
 6670* ssh-add ~/.ssh/id_gitlab
 6671* clear
 6672* ls ~/.ssh/
 6673* ssh -T git@gitlab.com
 6674* git clone https://github.com/KubeDev/pedelgo-catalogo.git
 6675* git clone git@github.com:KubeDev/pedelgo-catalogo.git
 6676* ls
 6677* git remote -v
 6678* git clone git@github.com:KubeDev/pedelogo-catalogo.git
 6679* clear
 6680* ls
 6681* cd pedelogo-catalogo
 6682* git remote -v
 6683* git remote add origin git@github.com/carlosleosouza/pedelogo-catalogo.git\n: 1744679671:0;gti remote -v
 6684* git remote -v
 6685* git remote add origin git@github.com:carlosleosouza/pedelogo-catalogo.git
 6686* gra remote -v
 6687* git remote remove origin
 6688* git remote -v
 6689* git remote add origin git@github.com:carlosleosouza/pedelogo-catalogo.git
 6690* gra remote -v
 6691* git remote -v
 6692* git add .\ngit commit -m "Ajuste ap
 6693* s mudan
 6694* a de reposit
 6695* rio"\ngit push origin main 
 6696* clear
 6697* ls
 6698* ls src    
 6699* cd ..
 6700* rm -rf pedelogo-catalogo/
 6701* ls
 6702* git clone git@github.com:carlosleosouza/pedelogo-catalogo.git
 6703* git remote -v
 6704* ls 
 6705* cd pedelogo-catalogo
 6706* ls
 6707* git remote -v
 6708* ls src    
 6709* code .
 6710* ls
 6711* docker build -t pedelogo-catalogo:v1.0.0 -f ./src/PedeLogo.Catalogo.Api/Dockerfile
 6712* docker build -t pedelogo-catalogo:v1.0.0 -f ./src/PedeLogo.Catalogo.Api/Dockerfile .
 6713* docker image ls
 6714* docker push pedelogo-catalogo:v1.0.0 carlosleosouza/pedelogo-catalogo:v1.0.0
 6715* docker push carlosleosouza/pedelogo-catalogo:v1.0.0
 6716* docker tag pedelogo-catalogo:v1.0.0 carlosleosouza/pedelogo-catalogo:v1.0.0
 6717* docker push carlosleosouza/pedelogo-catalogo:v1.0.0
 6718* cd ../LAB-Devops/
 6719* cd ../../LAB-Devops/
 6720* ls
 6721* vagrant ssh master
 6722* vagrant status
 6723* vagrant up
 6724* vagrant ssh master
 6725* vagrant up
 6726* vagrant ssh master
 6727* vagrant reload
 6728* vagrant ssh master
 6729* vagrant rsync
 6730* vagrant rsync --archive --verbose
 6731* vagrant rsync master
 6732* vagrant ssh master
 6733* vagrant rsync master
 6734* vagrant rsync --help
 6735* vagrant ssh master
 6736* vagrant rsync-auto
 6737* vagrant rsync_auto
 6738* vagrant rsync rsync-auto
 6739* vagrant ssh master
 6740* vagrant reload master
 6741* vagrant ssh master
 6742* vagrant rsync master
 6743* vagrant ssh master
 6744* cp /home/carlos-leonardo/UTILDISK/Cursos/LABs/kubedev/pedelogo-catalogo/k8s/deploymentapi.yaml .
 6745* ls
 6746* vagrant ssh master
 6747* ls
 6748* vagrant ssh master
 6749* ls
 6750* cd ..
 6751* ls
 6752* cd kubedev
 6753* ls
 6754* cd pedelogo-catalogo
 6755* ls 
 6756* ls k8s
 6757* vim k8s/deploymentapi.yaml
 6758* ls
 6759* cp k8s/deploymentapi.yaml ../../LAB-Devops/
 6760* cd ../../LAB-Devops/
 6761* ls
 6762* cat deploymentapi.yaml
 6763* kubectl apply -f deploymentapi.yaml
 6764* vim deploymentapi.yaml
 6765* vagrant ssh master
 6766* docker image ls
 6767* docker image rmi pedelogo-catalogo:v1.0.0
 6768* docker image rmi devops-app-green:local
 6769* docker image rmi devops-app-blue:local
 6770* docker image ls
 6771* vagrant ssh master
 6772* cd ..
 6773* ls
 6774* cd kubedev
 6775* ls
 6776* cd pedelogo-catalogo
 6777* ls
 6778* cd src
 6779* ls
 6780* cd PedeLogo.Catalogo.Api
 6781* ls
 6782* ls -la
 6783* vagrant status
 6784* ls
 6785* vagrant ssh master
 6786* minikube start
 6787* minikube --help
 6788* minikube node
 6789* minikube add node
 6790* minikube node list
 6791* minikube node --help
 6792* minikube node add --help
 6793* minikube node add --control-plane=false --worker=true
 6794* cd ~/UTILDISK/Cursos/LABs/LAB-Devops/
 6795* vagrant destroy
 6796* cd ~/UTILDISK/Cursos/LABs/kubedev/
 6797* ls
 6798* minikube node add --control-plane=false --worker=true
 6799* kubectl get nodes
 6800* ls
 6801* ls pedelogo-catalogo/
 6802* ls pedelogo-catalogo/k8s/
 6803* cp ~/UTILDISK/Cursos/LABs/LAB-Devops/*.yaml pedelogo-catalogo/k8s/
 6804* ls pedelogo-catalogo/k8s/
 6805* cd pedelogo-catalogo/k8s/
 6806* ls
 6807* rm -f deploy*blue.*
 6808* ls
 6809* rm -f deploy*green.*
 6810* ls
 6811* rm -f service*green.*
 6812* ls
 6813* rm -f service*blue.*
 6814* ls
 6815* mv service_pdelogo.yaml service_pedelogo.yaml
 6816* ls
 6817* rm -f namespace-*.yaml
 6818* df -h
 6819* clear
 6820* ls
 6821* kubectl apply -f \.
 6822* kubectl apply -f metallb-addresses.yaml
 6823* vim metallb-addresses.yaml
 6824* kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.14.9/config/manifests/metallb-native.yaml
 6825* kubectl apply -f \.
 6826* kubectl get nodes -o wide
 6827* kubectl get pods -n metallb-system\n: 1744728515:0;kubectl describe pod controller-7dcb87658-q9r4s -n metallb-system
 6828* kubectl logs controller-7dcb87658-q9r4s -n metallb-system
 6829* kubectl get svc kubernetes -n default
 6830* kubectl get pods -n kube-system
 6831* minikube status
 6832* minikube addons list | grep -E "cni|network"
 6833* ls -l /etc/cni/net.d/
 6834* minikube addons enable calico
 6835* minikube addons list
 6836* kubectl get pods -A -l k8s-app=kube-dns -o jsonpath='{.items[0].spec.containers[0].env[*].name}'
 6837* minikube profile list
 6838* minikube addons enable metallb
 6839* kubectl get pods -n metallb-system
 6840* kubectl delete deployment controller-7dcb87658 -n metallb-system
 6841* kubectl delete deployment controller -n metallb-system
 6842* kubectl get pods -n metallb-system
 6843* kubectl describe pod speaker-dqwwm -n metallb-system
 6844* kubectl get configmap -n metallb-system
 6845* kubectl describe configmap config -n metallb-system
 6846* kubectl apply -f - <<EOF\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  namespace: metallb-system\n  name: config\ndata:\n  config: |\n    address-pools:\n    - name: default\n      protocol: layer2\n      addresses:\n      - 192.168.49.200-192.168.49.250\n: 1744728638:0;kubectl get pods -n metallb-system
 6847* kubectl get deployments,daemonsets -n metallb-system
 6848* kubectl apply -f - <<EOF\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: controller\n  namespace: metallb-system\nspec:\n  selector:\n    matchLabels:\n      app: metallb\n      component: controller\n  template:\n    metadata:\n      labels:\n        app: metallb\n        component: controller\n      annotations:\n        prometheus.io/port: "7472"\n        prometheus.io/scrape: "true"\n    spec:\n      containers:\n      - name: controller\n        image: quay.io/metallb/controller:v0.9.6\n        args:\n        - --port=7472\n        - --config=config\n        ports:\n        - name: monitoring\n          containerPort: 7472\n        resources:\n          limits:\n            cpu: 100m\n            memory: 100Mi\n          requests:\n            cpu: 100m\n            memory: 100Mi\n        securityContext:\n          allowPrivilegeEscalation: false\n          capabilities:\n            drop:\n            - all\n          readOnlyRootFilesystem: true\n      nodeSelector:\n        kubernetes.io/os: linux\n      serviceAccountName: controller\n      terminationGracePeriodSeconds: 0\n: 1744728652:0;kubectl get pods -n metallb-system
 6849* kubectl wait --for=condition=Ready pods --all -n metallb-system --timeout=60s
 6850* kubectl get all --all-namespaces
 6851* kubectl get pods
 6852* kubectl describe pod apideployment-d68697585-tchws
 6853* kubectl logs apideployment-d68697585-tchws
 6854* kubectl describe pod mongodb-deployment-7bd676847b-vg4tr
 6855* kubectl logs mongodb-deployment-7bd676847b-vg4tr
 6856* kubectl describe pod mongodb-deployment-7bd676847b-vg4tr
 6857* kubectl delete pod apideployment-d68697585-tchws
 6858* kubectl delete pod mongodb-deployment-7bd676847b-vg4tr
 6859* kubectl get pods
 6860* kubectl describe pod apideployment-d68697585-8mrqr
 6861* docker run -it catalogo -p 8080:80 --image carlosleosouza/pedelogo-catalogo:v1.0.0
 6862* docker run -it catalogo -p 8080:80 --image=carlosleosouza/pedelogo-catalogo:v1.0.0
 6863* docker run -it --image carlosleosouza/pedelogo-catalogo:v1.0.0 -p 8080:80
 6864* docker run -it -p 8080:80 carlosleosouza/pedelogo-catalogo:v1.0.0
 6865* clear
 6866* docker ps -a
 6867* docker run -dit -p 8080:80 carlosleosouza/pedelogo-catalogo:v1.0.0
 6868* systemctl stop apache2
 6869* systemctl disable apache2
 6870* sudo systemctl disable apache2
 6871* docker run -dit -p 8080:80 carlosleosouza/pedelogo-catalogo:v1.0.0
 6872* docker run -dit -p 8081:80 carlosleosouza/pedelogo-catalogo:v1.0.0
 6873* curl -v http://localhost:8081
 6874* curl -v http://localhost:8080
 6875* docker ps -a
 6876* docker docker rm 75290afa196f
 6877* docker docker rm -f 75290afa196f
 6878* docker stop 88ac220a02d1 16abb21f57b2 ddf8d492e2c8 75290afa196f
 6879* docker rm 88ac220a02d1 16abb21f57b2 ddf8d492e2c8 75290afa196f
 6880* docker ps -a
 6881* docker stop 33b315081ce9 e7134682184b 
 6882* docker rm 33b315081ce9 e7134682184b
 6883* clear
 6884* kubectl get pods
 6885* kubectl describe pod apideployment-d68697585-8mrqr
 6886* ls
 6887* vim deploymentapi.yaml
 6888* kubectl delete -f deploymentapi.yaml
 6889* kubectl apply -f deploymentapi.yaml
 6890* kubectl get pods
 6891* kubectl delete pod mongodb-deployment-7bd676847b-vg4tr
 6892* kubectl delete pod mongodb-deployment-7bd676847b-sqhgk
 6893* kubectl apply -f deploy_mongo.yaml
 6894* kubectl get pods
 6895* netstat -tulnp | grep 80
 6896* kubectl logs apideployment-d68697585-nj5h2
 6897* kubectl describe pod apideployment-d68697585-nj5h2
 6898* clesr
 6899* clear
 6900* kubectl get pods
 6901* docker inspect carlosleosouza/pedelogo-catalogo:v1.0.0\n: 1744736008:0;kubectl run test-api --image=carlosleosouza/pedelogo-catalogo:v1.0.0 -it --rm -- bash
 6902* minikube describe
 6903* minijube status
 6904* minjkube status
 6905* minikube status
 6906* clear
 6907* kubectl get pods
 6908* kubectl logs mongodb-deployment-7bd676847b-498dz
 6909* vim deploy_mongo.yaml
 6910* kubecctl apply -f deploy_mongo.yaml
 6911* kubectl apply -f deploy_mongo.yaml
 6912* kubectl get pods
 6913* kubectl apply -f mongopvc.yaml
 6914* kubectl get pods
 6915* kubectl logs -f mongodb-deployment-9b55777f9-8knlw
 6916* mkdir -p /data/db
 6917* sudo mkdir -p /data/db
 6918* ls /data/db/
 6919* kubectl apply -f mongopvc.yaml
 6920* kubecctl apply -f deploy_mongo.yaml
 6921* kubectl apply -f deploy_mongo.yaml
 6922* kubectl get pods
 6923* kubectl delete pods mongodb-deployment-7bd676847b-498dz mongodb-deployment-9b55777f9-8knlw 
 6924* kubecctl apply -f deploy_mongo.yaml
 6925* kubectl apply -f deploy_mongo.yaml
 6926* kubectl get pv
 6927* kubectl get pvc
 6928* kubectl get pods
 6929* kubectl logs -f mongodb-deployment-7bd676847b-qr2qw
 6930* clear
 6931* kubectl get pods
 6932* kubectl delete deploy -f deploymentapi.yaml
 6933* kubectl delete -f deploymentapi.yaml
 6934* kubectl apply -f deploymentapi.yaml
 6935* kubectl get pods
 6936* kubectl delete pod mongodb-deployment-9b55777f9-kpb24
 6937* kubectl get pods
 6938* vim deploy_mongo.yaml
 6939* ls
 6940* vim deploymentapi.yaml
 6941* kubectl apply -f deploymentapi.yaml
 6942* vim deploymentapi.yaml
 6943* kubectl apply -f deploymentapi.yaml
 6944* kubectl get pods
 6945* kubectl get node
 6946* kubectl get pods
 6947* kubectl delete pods apideployment-f58769c5-bsntr mongodb-deployment-7bd676847b-qr2qw mongodb-deployment-9b55777f9-9cc9h
 6948* kubectl get pods
 6949* vim deploy_mongo.yaml
 6950* kubecctl apply -f deploy_mongo.yaml
 6951* kubectl apply -f deploy_mongo.yaml
 6952* kubectl get pods
 6953* kubectl get pods --watch
 6954* kubectl delete deploy -f deploymentapi.yaml
 6955* kubectl delete -f deploymentapi.yaml
 6956* kubectl delete -f deploy_mongo.yaml
 6957* kubectl get service
 6958* ls\n: 1744753130:0;kubectl delete --all
 6959* kubectl delete pods --all
 6960* kubectl get all --all-namespaces
 6961* kubectl delete service api-service
 6962* kubectl delete service mongo-service
 6963* clear
 6964* kubectl get all --all-namespaces
 6965* vim mongodb-deployment.yaml
 6966* kubectl delete -f deploy_mongoCM.yaml
 6967* kubectl get all --all-namespaces
 6968* kubectl get configmap -A
 6969* kubectl apply -f mongodb-deployment.yaml
 6970* kubectl get deployments
 6971* kubectl describe deployment mongodb
 6972* kubectl get pods
 6973* kubectl get pvc
 6974* kubectl delete pvc mongodb-pvc
 6975* kubectl get pv
 6976* kubectl apply -f mongodb-deployment.yaml
 6977* kubectl get pods
 6978* kubectl logs mongodb-798f56dd9b-gsjvn
 6979* kubectl get pods
 6980* kubectl describe pod mongodb-798f56dd9b-gsjvn
 6981* kubectl delete pod mongodb-798f56dd9b-gsjvn
 6982* kubectl get pods
 6983* kubectl get pvc
 6984* kubectl get pv
 6985* kubectl get volumes
 6986* kubectl get sc\n: 1744753644:0;kubectl get storageclass
 6987* kubectl get sc
 6988* clear
 6989* kubectl get pods
 6990* kubectl logs mongodb-798f56dd9b-twpm5
 6991* kubectl get pod mongodb-798f56dd9b-twpm5
 6992* kubectl describe pod mongodb-798f56dd9b-twpm5
 6993* kubectl get deployment mongodb -o yaml
 6994* kubectl logs mongodb-798f56dd9b-twpm5 --previous
 6995* kubectl edit deployment mongodb
 6996* kubectl get events --sort-by=.metadata.creationTimestamp | grep mongodb
 6997* kubectl apply -f /home/carlos-leonardo/UTILDISK/Cursos/LABs/kubedev/pedelogo-catalogo/k8s/mongodb-deployment.yaml
 6998* kubectl get pods -l app=mongodb -w
 6999* kubectl logs mongodb-786ffbbb6f-277dl
 7000* kubectl apply -f /home/carlos-leonardo/UTILDISK/Cursos/LABs/kubedev/pedelogo-catalogo/k8s/mongodb-deployment.yaml
 7001* kubectl get pods -l app=mongodb -w
 7002* kubectl describe node $(kubectl get pod -l app=mongodb -o jsonpath='{.items[0].spec.nodeName}')
 7003* kubectl apply -f /home/carlos-leonardo/UTILDISK/Cursos/LABs/kubedev/pedelogo-catalogo/k8s/mongodb-deployment.yaml
 7004* kubectl run sysctl-setter --privileged -i --tty --rm --image=alpine -- sh -c 'sysctl -w vm.max_map_count=1677720'
 7005* minikube ssh -n minikube-m02 'sudo sysctl -w vm.max_map_count=1677720'
 7006* kubectl get pods -l app=mongodb -w
 7007* kubectl logs -l app=mongodb --tail=50 --previous
 7008* kubectl logs -l app=mongodb
 7009* kubectl apply -f /home/carlos-leonardo/UTILDISK/Cursos/LABs/kubedev/pedelogo-catalogo/k8s/mongodb-deployment.yaml
 7010* kubectl get pods -l app=mongodb -w
 7011* clear
 7012* ls
 7013* cd ..
 7014* mkdir testes
 7015* cd testes
 7016* git clone https://github.com/fabricioveronez/pedelogo-catalogo.git
 7017* ls
 7018* ls pedelogo-catalogo/k8s/
 7019* kubectl get all --all-namespaces
 7020* kubectl delete all
 7021* kubectl delete all --all-namespaces
 7022* kubectl delete all --all-namespaces --all
 7023* kubectl get all --all-namespaces
 7024* kubectl get nodes
 7025* kubectl delete pods mongodb-5fd9d76f97-f9rrr -f --grace-period=0
 7026* kubectl delete pods mongodb-5fd9d76f97-f9rrr -f --grace-period=0 
 7027* kubectl delete pods mongodb-5fd9d76f97-f9rrr --grace-period=0 -f
 7028* kubectl get pods -A
 7029* kubectl get pods -A --all-namespaces
 7030* celar
 7031* clear
 7032* kubectl get all --all-namespaces
 7033* kubectl get pod -A --all-namespaces
 7034* cleaar
 7035* clear
 7036* ls
 7037* cd pedelogo-catalogo/k8s/
 7038* minikube cluster
 7039* minikube cluster --help
 7040* minikube --help
 7041* minikube status
 7042* minikube stop
 7043* minikube delete --all
 7044* minikube start
 7045* kubectl get nodes
 7046* minikube stop
 7047* minikube delete --all
 7048* minikube cache delete\nrm -rf ~/.minikube\nrm -rf ~/.kube\n: 1744757373:0;minikube cache delete
 7049* minikube start --cpus=2 --memory=4096 --driver=docker
 7050* minikube start --nodes=2 --cpus=2 --memory=4096 --driver=docker
 7051* kubectl get nodes
 7052* minikube node add --worker --nodes=2 --cpus=2 --memory=4096
 7053* minikube node add --worker --cpus=2 --memory=4096
 7054* minikube node add --worker --memory=4096
 7055* minikube stop
 7056* minikube delete --all
 7057* minikube cache delete\nrm -rf ~/.minikube\nrm -rf ~/.kube\n: 1744757702:0;minikube start --nodes=3 --cpus=2 --memory=4096 --driver=docker
 7058* cd ..
 7059* ls
 7060* cd pipeline-elite
 7061* ls
 7062* rm -rf *
 7063* ls
 7064* git clone https://github.com/fabricioveronez/pipeline-elite-iac
 7065* cd pipeline-elite-iac
 7066* ls
 7067* ls k8s/
 7068* ls scripts/
 7069* ls src/
 7070* kubectl get nodes
 7071* cd -
 7072* cd ../../
 7073* ls
 7074* cd testes
 7075* ls
 7076* cd pedelogo-catalogo/k8s/
 7077* ls
 7078* kubectl apply -f api.yaml
 7079* kubectl apply -f mongo.yaml
 7080* kubectl get all
 7081* vim api.yaml
 7082* kubectl apply -f api.yaml
 7083* kubectl get all
 7084* kubectl describe pod api-deployment-5d845d477c-7d96z
 7085* kubectl get all
 7086* kubectl get pods
 7087* vim api.yaml
 7088* kubectl apply -f api.yaml
 7089* kubectl get pods
 7090* kubectl get services
 7091* minikube addons list
 7092* minikube addons metallb
 7093* minikube addons enable metallb
 7094* minikube addons list
 7095* minikube addons configure metallb
 7096* kubectl get nodes -o wide
 7097* ip a
 7098* minikube addons configure metallb
 7099* kubectl get services --all-namespaces
 7100* ping 192.168.49.150
 7101* kubectl get nodes
 7102* kubectl get nodes -o wide
 7103* ping 192.168.49.2
 7104* ping 192.168.49.150
 7105* curl http://192.168.49.150
 7106* curl -v http://192.168.49.150
 7107* minikube ssh --help
 7108* minikube ssh -n minikube
 7109* cat mongo.yaml
 7110* cat api.yaml
 7111* kubectl get node
 7112* kubectl get nodes
 7113* minikube start
 7114* kubectl get nodes
 7115* kubectl get nodes -o wide
 7116* minikube update
 7117* minikube update-check
 7118* minikube config
 7119* minikube config view
 7120* minikube config set driver docker
 7121* minikube delete && minikube start
 7122* kubectl get pods --all-namespaces
 7123* kubectl get nodes
 7124* minikube delete
 7125* history | grep "minikube start"
 7126* minikube start --nodes=2 --cpus=2 --memory=4096 --driver=docker --addons metllb --image-repository=auto
 7127* kubectl get pods --all-namespaces
 7128* kubectl get services --all-namespaces
 7129* minikube addons enable metallb
 7130* kubectl get pods --all-namespaces
 7131* minikube ssh -n minikube
 7132* minikube status
 7133* minikube start
 7134* kubectl get nodes
 7135* kubectl get nodes pods -o wide
 7136* minikube addons enable metallb
 7137* kubectl get pods --all-namespaces
 7138* kubectl get pods
 7139* kubectl get pods --all-namespaces
 7140* clear
 7141* minikube addons list
 7142* ls
 7143* kubectl apply -f \.
 7144* kubectl get pods
 7145* kubectl get services
 7146* kubectl get pods
 7147* kubectl addons enable metallb
 7148* minikube addons enable metallb
 7149* kubectl get pods
 7150* kubectl get pods --all-namespaces
 7151* minikube addons configure metallb
 7152* kubectl get services --all-namespaces
 7153* kubectl get nodes -o wide
 7154* echo -n "mongouser" | base64
 7155* echo -n "mongopwd" | base64
 7156* kubectl apply -f mongodb-secret.yaml
 7157* kubectl get secrets
 7158* kubectl describe secret mongodb-secret
 7159* kubectl apply -f mongo.yaml
 7160* kubectl get pods
 7161* kubectl apply -f api.yaml
 7162* kubectl get pods
 7163* kubectl apply -f api.yaml
 7164* kubectl get pods
 7165* helm repo add hashicorp https://helm.releases.hashicorp.com\nhelm repo update\n# Cria um namespace para o Vault\nkubectl create namespace vault\n# Instala o Vault no modo dev (para testes locais)\nhelm install vault hashicorp/vault \\n  --namespace vault \\n  --set "server.dev.enabled=true"\n: 1744831172:0;helm status vault
 7166* helm list --namespace vault
 7167* helm status vault --namespace vault
 7168* kubectl annotate namespace default \\n  vault.hashicorp.com/agent-injection=enabled\n: 1744831219:0;kubectl exec -it vault-0 -n vault -- /bin/sh\n: 1744831233:0;kubectl exec -it vault-0 -n vault -- /bin/sh -c "vault"
 7169* kubectl get all --all-namespaces
 7170* kubectl exec -it vault-0 -n vault -- /bin/sh\n: 1744832685:0;VAULT_SA_NAME=$(kubectl get sa vault -n vault -o jsonpath="{.secrets[0].name}")\nTOKEN=$(kubectl get secret $VAULT_SA_NAME -n vault -o jsonpath="{.data.token}" | base64 -d)\nCACERT=$(kubectl get secret $VAULT_SA_NAME -n vault -o jsonpath="{.data['ca\.crt']}" | base64 -d)\nK8S_HOST=$(kubectl config view --raw --minify --flatten -o jsonpath='{.clusters[0].cluster.server}')
 7171* kubectl get sa vault -n vault -o jsonpath="{.secrets[0].name}"
 7172* kubectl get secret $(kubectl get sa vault -n vault -o jsonpath="{.secrets[0].name}") -n vault -o jsonpath="{.data.token}" | base64 -d
 7173* kubectl exec -it vault-0 -n vault -- /bin/sh
 7174* kubectl exec -it vault-0 -n vault -- /bin/bash
 7175* kubectl exec -it vault-0 -n vault -- /bin/sh
 7176* echo $TOKEN
 7177* vault auth
 7178* kubectl exec -it vault-0 -n vault -- /bin/sh
 7179* echo $VAULT_SA_NAME
 7180* echo $1
 7181* echo $0
 7182* VAULT_SA_NAME=$(kubectl get sa vault -n vault -o jsonpath="{.secrets[0].name}")\nTOKEN=$(kubectl get secret $VAULT_SA_NAME -n vault -o jsonpath="{.data.token}" | base64 -d)\nCACERT=$(kubectl get secret $VAULT_SA_NAME -n vault -o jsonpath="{.data['ca\.crt']}" | base64 -d)\nK8S_HOST=$(kubectl config view --raw --minify --flatten -o jsonpath='{.clusters[0].cluster.server}')\n: 1744833040:0;echo $TOKEN
 7183* kubectl get sa -n vault
 7184* vim vault-token-secret.yaml
 7185* kubectl apply -f vault-token-secret.yaml\n: 1744837007:0;kubectl get secret -n vault\n: 1744837020:0;VAULT_SA_NAME=vault-token\nTOKEN=$(kubectl get secret $VAULT_SA_NAME -n vault -o jsonpath="{.data.token}" | base64 -d)\nCACERT=$(kubectl get secret $VAULT_SA_NAME -n vault -o jsonpath="{.data['ca\.crt']}" | base64 -d)\nK8S_HOST=$(kubectl config view --raw --minify --flatten -o jsonpath='{.clusters[0].cluster.server}')\n: 1744837026:0;echo $TOKEN
 7186* kubectl exec -it vault-0 -n vault -- /bin/sh
 7187* echo "$TOKEN" > token.txt\necho "$CACERT" > ca.crt\necho "$K8S_HOST" > host.txt\n: 1744837172:0;kubectl cp token.txt vault/vault-0:/tmp/token.txt\nkubectl cp ca.crt vault/vault-0:/tmp/ca.crt\nkubectl cp host.txt vault/vault-0:/tmp/host.txt\n: 1744837185:0;kubectl exec -it vault-0 -n vault -- /bin/sh\n: 1744841834:0;cd ../../../pipeline-elite/
 7188* ls
 7189* git fetch origin
 7190* ls
 7191* cd pipeline-elite-iac
 7192* git fetch origin
 7193* git status
 7194* git fetch
 7195* git status
 7196* git pull
 7197* ls
 7198* kubectl get services --all-namespaces
 7199* kubectl apply -f api.yaml
 7200* kubectl get pods
 7201* kubectl get pods\n: 1744845845:0;kubectl get pods
 7202* cd ..
 7203* git fetch && git merge
 7204* ls
 7205* git status
 7206* git pull
 7207* minikube start
 7208* kubectl get nodes
 7209* kubectl get all -A
 7210* kubectl apply -f api.yaml
 7211* cd k8s
 7212* kubectl apply -f api.yaml
 7213* kubectl get pods
 7214* kubectl describe pod api-deployment-7c5c8c4d4b-2svlz
 7215* kubectl get pods --watch
 7216* kubectl apply -f api.yaml
 7217* kubectl get pods --watch
 7218* kubectl get pods
 7219* kubectl apply -f api.yaml
 7220* kubectl get pods
 7221* kubectl apply -f api.yaml
 7222* kubectl get pods
 7223* ls
 7224* kubectl apply -f deployment-resources.yaml
 7225* minikube status
 7226* minikube start
 7227* kubectl apply -f deployment-resources.yaml
 7228* kubectl get pods
 7229* kubectl apply -f deployment-resources.yaml
 7230* kubectl get pods
 7231* kubectl top pods
 7232* minikube addons enable metrics
 7233* minikube addons list
 7234* minikube enable addons metric-server
 7235* minikube addons enable metric-server
 7236* minikube addons enable metrics-server
 7237* minikube addons list
 7238* kubectl top pods
 7239* minikube addons configure metrics-server
 7240* kubectl apply -f metrics-server-deployment.yaml
 7241* kubectl top pods
 7242* kubectl get pods
 7243* kubectl get pods -A --all-namespaces
 7244* kubectl describe pod metrics-server-c59844bb4-mqpqr -n kube-system
 7245* kubectl logs metrics-server-c59844bb4-mqpqr -n kube-system
 7246* kubectl get events -n kube-system
 7247* kubectl get pods -A --all-namespaces
 7248* clear
 7249* kubectl top pods
 7250* kubectl get service
 7251* kubectl apply -f metrics-server-deployment.yaml
 7252* kubectl apply -f deployment-resources.yaml
 7253* kubectl get service
 7254* curl --data "megabytes=20&durationSec=60" http://192.168.49.101:30080
 7255* curl --data "megabytes=20&durationSec=60" http://192.168.49.101
 7256* curl --data "megabytes=20&durationSec=60" http://192.168.49.101:30080
 7257* curl --data "megabytes=20&durationSec=60" http://192.168.49.101
 7258* curl --data "megabytes=20&durationSec=30" http://192.168.49.101
 7259* curl --data "megabytes=20&durationSec=60" http://192.168.49.101/ConsumeMem
 7260* kubectl top pods
 7261* curl --data "millicores=130&durationSec=60" http://192.168.49.101/ConsumeMem
 7262* curl --data "millicores=130&durationSec=60" http://192.168.49.101/ConsumeCPU
 7263* curl --data "megabytes=20&durationSec=60" http://192.168.49.101/ConsumeMem
 7264* kubectl top pods --watch
 7265* kubectl top pods
 7266* curl --data "megabytes=20&durationSec=60" http://192.168.49.101/ConsumeMem && curl --data "millicores=130&durationSec=60" http://192.168.49.101/ConsumeCPU
 7267* kubectl top pods
 7268* curl --data "megabytes=20&durationSec=60" http://192.168.49.101/ConsumeMem && curl --data "millicores=130&durationSec=60" http://192.168.49.101/ConsumeCPU
 7269* kubectl top pods
 7270* curl --data "megabytes=100&durationSec=60" http://192.168.49.101/ConsumeMem && curl --data "millicores=600&durationSec=60" http://192.168.49.101/ConsumeCPU
 7271* kubectl get pods
 7272* kubectl top pods
 7273* curl --data "megabytes=512&durationSec=60" http://192.168.49.101/ConsumeMem && curl --data "millicores=600&durationSec=60" http://192.168.49.101/ConsumeCPU
 7274* kubectl top pods
 7275* watch kubectl top pods
 7276* kubectl apply -f HPA.yaml
 7277* kubectl get hpa
 7278* curl --data "megabytes=100&durationSec=60" http://192.168.49.101/ConsumeMem
 7279* watch kubectl top pods
 7280* kubectl get hpa
 7281* kubectl get pods
 7282* kubectl get pods --watch
 7283* kubectl get pods
 7284* kubectl get hpa --watch
 7285* kubectl get pods --watch
 7286* kubectl get hpa --watch
 7287* kubectl get pods --watch
 7288* kubectl get pods
 7289* kubectl describe pod api-deployment-577d8b54dc-hlf9t
 7290* kubectl describe pod mongodb-deployment-7c74fc558d-hhhgq
 7291* kubectl get pods
 7292* kubectl describe pod resource-deployment-685f666ccd-4r56m
 7293* kubectl top pods
 7294* kubectl apply -f api.yaml
 7295* kubectl apply -f mongo.yaml
 7296* kubectl get all
 7297* kubectl get pods
 7298* minikube start
 7299* kubectl applpy -f nginx-deploy.yaml
 7300* kubectl apply -f nginx-deploy.yaml
 7301* kubctl apply -f limit-range.yaml
 7302* kubectl apply -f limit-range.yaml
 7303* kubectl get limitranges
 7304* kubectl describe limitrange limite-container
 7305* kubectl get all --all-namespaces
 7306* kubectl get pods
 7307* clear
 7308* kubectl get pods
 7309* kubectl describe pod nginx-576c6b7b6-8qtxs
 7310* kubectl applpy -f nginx-deploy.yaml
 7311* kubectl apply -f nginx-deploy.yaml
 7312* kubectl delete -f nginx-deploy.yaml
 7313* kubectl apply -f nginx-deploy.yaml
 7314* clear
 7315* kubectl get pods
 7316* kubectvl describe pod nginx-576c6b7b6-pxqzj
 7317* kubectl describe pod nginx-576c6b7b6-pxqzj
 7318* kubectl delete -f nginx-deploy.yaml
 7319* kubectl apply -f nginx-deploy.yaml
 7320* kubectl get pods
 7321* kubectl apply -f nginx-deploy.yaml
 7322* kubectl get pods
 7323* kubectl apply -f nginx-deploy.yaml
 7324* kubectl get pods
 7325* kubectl apply -f nginx-deploy.yaml
 7326* kubectl get pods
 7327* kubectl get replicasets
 7328* kubectl describe replicasets nginx-6cc9dd4f66
 7329* git remote -v
 7330* git remote --help
 7331* git remote remove origin
 7332* git remote -v
 7333* kubectl apply -f resource-quota.yaml
 7334* cd ..
 7335* git remote -v
 7336* cd k8s
 7337* kubectl apply -f nginx-deploy.yaml
 7338* kubectl get hpa
 7339* kubectl delete -f HPA.yaml
 7340* kubectl delete -f limit-range.yaml
 7341* kubectl get all --all-namespaces
 7342* kubectl get pod
 7343* kubectl delete -f deployment-resources.yaml
 7344* kubectl get all --all-namespaces
 7345* kubectl get pods
 7346* kubectl apply -f nginx-deploy.yaml
 7347* kuebctl get pods
 7348* kubectl get pods
 7349* clear
 7350* kubectl get pods
 7351* kubectl get pods --all-namespaces
 7352* kubectl delete -f nginx-deploy.yaml
 7353* kubectl apply -f nginx-deploy.yaml
 7354* kubectl get pods
 7355* kubectl get replicasets
 7356* kubectl describe replicasets.apps nginx-7bf8645f6d
 7357* kubectl delete -f nginx-deploy.yaml
 7358* kubectl apply -f nginx-deploy.yaml
 7359* kubectl get pods
 7360* kubectl delete -f nginx-deploy.yaml
 7361* kubectl apply -f nginx-deploy.yaml
 7362* kubectl get pods
 7363* kubectl apply -f resource-quota.yaml
 7364* kubectl get pods
 7365* kubectl apply -f nginx-deploy.yaml
 7366* kubectl delete -f nginx-deploy.yaml
 7367* kubectl apply -f nginx-deploy.yaml
 7368* kubectl get pods
 7369* kubectl get replicasets 
 7370* kubectl describe replicasets.apps nginx-65d65c8cbb
 7371* kubectl delete -f api.yaml
 7372* kubectl get pods
 7373* kubectl delete -f mongo.yaml
 7374* kubectl get pods
 7375* \n: 1744994516:0;kubectl get pods
 7376* kubectl delete -f nginx-deploy.yaml\n: 1744994587:0;kubectl apply -f nginx-deploy.yaml
 7377* kubectl get pods
 7378* kubectl get replicasets 
 7379* kubectl describe replicasets.apps nginx-65d65c8cbb
 7380* kubectl apply -f obj-resource.yaml
 7381* kubectl get pods
 7382* kubectl delete -f nginx-deploy.yaml
 7383* kubectl apply -f nginx-deploy.yaml
 7384* kubectl get pods
 7385* kubectl delete -f resource-quota.yaml
 7386* kubectl delete -f nginx-deploy.yaml
 7387* kubectl apply -f nginx-deploy.yaml
 7388* kubectl get pods
 7389* kubectl delete -f nginx-deploy.yaml
 7390* kubectl delete -f obj-resource.yaml
 7391* kubectl get pods
 7392* minikube start
 7393* minikube update
 7394* minikube update-check
 7395* minikube update-context
 7396* minikbe upgrade
 7397* minikube update
 7398* minikube update --help
 7399* minikube --help
 7400* minikube options
 7401* minikube stop
 7402* curl -LO https://github.com/kubernetes/minikube/releases/latest/download/minikube-linux-amd64\nsudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
 7403* sudo install minikube-linux-amd64 /usr/local/bin/minikube && rm minikube-linux-amd64
 7404* minikube version
 7405* minikube start
 7406* minikube stop
 7407* minikube start --kubernetes-version=v1.32.0
 7408* history | grep "minikube node"
 7409* minikube node add --worker --cpus=2 --memory=4096
 7410* minikube node add --worker --cpu=2 --memory=4096
 7411* minikube node add --help
 7412* minikube node add --control-plane=false --worker=true --cpus=2 --memory=4096
 7413* minikube node add --help
 7414* minikube options
 7415* minikube start --help
 7416* history | grep "minikube start"
 7417* minikube start --nodes=3 --cpus=2 --memory=4096 --driver=docker --addons metallb --image-repository=auto
 7418* kubectl get nodes
 7419* minikube stop
 7420* minikube delete --all
 7421* ls -ltr /usr/local/bin/minikube
 7422* minikube version
 7423* minikube start --nodes=3 --cpus=2 --memory=4096 --driver=docker --addons metallb --image-repository=auto
 7424* kubectl get nodes
 7425* minikube addons enable metrics-server
 7426* minikube addons configure metallb
 7427* kubectl get services --all-namespaces
 7428* kubectl get nodes -o wide\n: 1745005545:0;kubectl get all --all-namespaces
 7429* kubectl apply -f mongo.yaml
 7430* kubectl apply -f .\ -R
 7431* kubectl apply -f . -R
 7432* ls
 7433* kubectl delete -f \.
 7434* ls
 7435* kubectl apply -f mongodb-configmap.yaml -f mongodb-secret.yaml -f mongo.yaml 
 7436* kubectl get all -A --all-namespaces
 7437* ls
 7438* kubectl apply -f api.yaml -f api-configmap.yaml
 7439* kubectl get pods
 7440* cd ../../..
 7441* mkdir projeto-nginx
 7442* cd projeto-nginx
 7443* cp -R ~/Downloads/devops-lab/ .
 7444* ls
 7445* cd devops-lab
 7446* ls
 7447* ./configure && make
 7448* make
 7449* ls
 7450* cat mak    
 7451* cat Makefile
 7452* ls
 7453* cd ..
 7454* ls
 7455* touch index.html nginx.conf Dockerfile docker-compose.yml
 7456* ls
 7457* cat << EOF >> index.html\n<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <title>Meu Site com Nginx</title>\n</head>\n<body>\n  <h1>Bem-vindo ao Servidor Nginx!</h1>\n  <p>Este conte
 7458* do est
 7459*  sendo servido por um container Nginx.</p>\n</body>\n</html>\n: 1745021950:0;cat index.html
 7460* cat << EOF >> nginx.conf\nserver {\n    listen 80;\n    server_name localhost;\n    location / {\n        root /usr/share/nginx/html;\n        index index.html;\n    }\n    location /api {\n        proxy_pass http://host.docker.internal:5000\;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n: 1745022026:0;cat << EOF >> Dockerfile\nFROM nginx:stable\nCOPY nginx.conf /etc/nginx/conf.d/default.conf\nCOPY index.html /usr/share/nginx/html/index.html\n: 1745022033:0;cat Dockerfile
 7461* cat << EOF >> docker-compose.yml\nversion: '3'\nservices:\n  web:\n    build: .\n    ports:\n      - "8080:80"\n: 1745022065:0;cat docker-compose.yml
 7462* docker-compose up --build
 7463* sudo apt install docker-compose
 7464* docker-compose up --build
 7465* docker ps -a
 7466* docker loogs -f projeto-nginx_web_1
 7467* docker logs -f projeto-nginx_web_1
 7468* ls
 7469* cat nginx.conf
 7470* docekr ps -a
 7471* clear
 7472* docker ps -a
 7473* ps aux | grep ":5000"
 7474* cat nginx.conf
 7475* sudo systemctl disable apache2
 7476* sudo systemctl stop apache2
 7477* docker-compose up --build --force-recreate
 7478* docker-compose up --build
 7479* clear
 7480* docker-compose down
 7481* docker-compose up -d
 7482* docker ps -a
 7483* docker logs -f projeto-nginx_web_1
 7484* vim nginx.conf
 7485* docker-compose up --build
 7486* docker ps -a
 7487* docker rm -f 84b9a49b7b70
 7488* docker-compose up --build
 7489* vim nginx.conf
 7490* docker pa -a
 7491* docker ps -a
 7492* docker restart 57ddd5a78c8a
 7493* docker ps -a
 7494* docker logs -f projeto-nginx_web_1
 7495* ls
 7496* cp /dev/null *
 7497* cp /dev/null *.*
 7498* cp /dev/null .
 7499* ls
 7500* cat docker-compose.yml
 7501* cp /dev/null nginx.conf docker-compose.yml Dockerfile
 7502* cp /dev/null nginx.conf
 7503* cp /dev/null Dockerfile
 7504* cp /dev/null docker-compose.yml
 7505* ls
 7506* rm null
 7507* ls devops-lab/
 7508* ls
 7509* vim docker-compose.yml
 7510* vim nginx.conf
 7511* vim Dockerfile
 7512* docker-compose up --build
 7513* vim docker-compose.yml
 7514* docker-compose up --build
 7515* docker ps -a
 7516* docker rm 57ddd5a78c8a
 7517* docker rm 8662b1ca62f9 ce3379a05125
 7518* docker-compose up --build
 7519* cd ~/UTILDISK/Cursos/LABs/
 7520* ls
 7521* cd projeto-nginx
 7522* ls
 7523* docker ps -a
 7524* cat index.html
 7525* ls
 7526* cat nginx.conf
 7527* mkdir servidorweb
 7528* mkdir loadbalancer
 7529* docker ps -a
 7530* clear
 7531* exit
 7532* ls
 7533* mv docker-compose.yml Dockerfile nginx.conf index.html servidorweb/
 7534* ls
 7535* cp servidorweb/* loadbalancer/
 7536* ls loadbalancer/
 7537* cp /dev/null loadbalancer/Dockerfile
 7538* cp /dev/null loadbalancer/docker-compose.yml
 7539* cp /dev/null loadbalancer/nginx.conf
 7540* cp /dev/null loadbalancer/index.html
 7541* vim loadbalancer/nginx.conf
 7542* vim loadbalancer/docker-compose.yml
 7543* vim loadbalancer/index.html
 7544* vim loadbalancer/docker-compose.yml
 7545* vim loadbalancer/Dockerfile
 7546* vim loadbalancer/nginx.conf
 7547* mkdir loadbalancer/app
 7548* vim loadbalancer/app/app.py
 7549* vim loadbalancer/app/requirements.txt
 7550* docker build -f loadbalancer/Dockerfile -t nginx-lb 
 7551* docker build -t nginx-lb -f loadbalancer/Dockerfile .
 7552* ls loadbalancer/app/
 7553* mv loadbalancer/app/requirements.txt loadbalancer/
 7554* docker build -t nginx-lb -f loadbalancer/Dockerfile .
 7555* docker build -t nginx-lb -f loadbalancer/Dockerfile
 7556* docker build -t nginx-lb -f loadbalancer/Dockerfile loadbalancer/
 7557* cd loadbalancer/
 7558* ls
 7559* cp requirements.txt app/
 7560* docker build -t nginx-lb .
 7561* docker image ls
 7562* docker rmi -f f133ac3455e6 0303eb63731c
 7563* clear
 7564* docker image ls
 7565* clear
 7566* ls
 7567* docker-compose up -d 
 7568* docker image ls
 7569* cat docker-compose.yml
 7570* clear
 7571* ls
 7572* cat Dockerfile
 7573* cat docker-compose.yml
 7574* ls
 7575* cat Dockerfile
 7576* docker stop nginx-load-balancer-api1-1
 7577* docke rps -a
 7578* clear
 7579* docker ps -a
 7580* docker stop nginx-load-balancer-api1-1
 7581* docker stop loadbalancer_api1
 7582* docker ps -a
 7583* docker stop 5fae8f30ed4c
 7584* minikube addons enable ingress
 7585* minikube start
 7586* kubectl get nodes
 7587* minikube addons enable ingress
 7588* ls ~/.kube/
 7589* cat ~/.kube/
 7590* cat ~/.kube/config
 7591* ls ~/.vscode
 7592* echo $workspaceFolder
 7593* sudo su
 7594* ls
 7595* cat ~/.zshrc
 7596* pk10 configure
 7597* p10k configure
 7598* ls -l
 7599* sudo p10k configure
 7600* sudo pk10 configure
 7601* clear
 7602* ls
 7603* inxi -FxZ
 7604* minikube start
 7605* cd ../..
 7606* ls
 7607* cd cd testes/pedelogo-catalogo/k8s/
 7608* cd cd testes/pedelogo-catalogo/
 7609* cd cd testes/
 7610* ls
 7611* cd testes
 7612* ls
 7613* cd pedelogo-catalogo/k8s/
 7614* ls
 7615* kubectl apply -f api.yaml
 7616* kubectl apply -f mongo.yaml
 7617* ls
 7618* ls /data/db/
 7619* kubectl apply -f mongo-pv.yaml
 7620* kubectl get pv
 7621* kubectl apply -f mongo-pvc.yaml
 7622* kubectl get pvc
 7623* kubectl describe pvc mongo-pvc
 7624* kubectl get sc
 7625* kubectl get pvc
 7626* kubectl describe pvc mongo-pvc
 7627* kubectl get pv
 7628* kubectl apply -f mongo-pv.yaml
 7629* kubectl get pv
 7630* kubectl get pvc
 7631* kubectl apply -f mongo.yaml
 7632* kubectl get all
 7633* kubectl get pods -o wide
 7634* kubectl delete pod mongodb-deployment-589c479959-ksx5d
 7635* kubectl get pods
 7636* kubectl get pods -o wide
 7637* kubectl get volumes
 7638* kubectl get pc -o wide
 7639* kubectl get pvc -o wide
 7640* kubectl get pv
 7641* kubectl get pv -o wide
 7642* kubectl get pvc -o wide
 7643* kuebctl get sc
 7644* kuebctl get storageclasses
 7645* kuebctl get storageclass
 7646* kubectl get storageclass
 7647* kubectl describe pvc mongo-pvc
 7648* kubectl describe pv mongo-pv
 7649* ls /data/db/
 7650* ls -la /data/db/
 7651* kubectl get pods
 7652* kubectl delete pod mongodb-deployment-589c479959-z5499
 7653* kubectl get pods
 7654* kubectl describe pod mongodb-deployment-589c479959-zpvbb
 7655* kubectl get pod
 7656* kubectl describe pod api-deployment-796ff77b88-8f9hb
 7657* kubectl delete pod api-deployment-796ff77b88-8f9hb
 7658* kubectl get pods
 7659* kubectl delete pod api-deployment-796ff77b88-p24d2
 7660* kubectl get pods
 7661* kubectl describe pod api-deployment-796ff77b88-d5kfp
 7662* kubectl get pods
 7663* kubectl get storageclass
 7664* kubectl apply -f nginx.yaml
 7665* kubectl get pods
 7666* kubectl describe pod nginx-0
 7667* kubectl get pods
 7668* kubectl logs nginx-0
 7669* kubectl describe pod nginx-0
 7670* kubectl apply -f nginx.yaml
 7671* kubectl get pods
 7672* mkdir -p /data/nginx
 7673* mkdir /data/nginx
 7674* sudo mkdir -p /data/nginx
 7675* kubectl apply -f nginx.yaml
 7676* kubectl apply -f nginx-pv.yaml
 7677* kubectl apply -f nginx.yaml
 7678* kubectl get statefulsets.apps
 7679* kubectl delete sts nginx
 7680* kubectl apply -f nginx-pv.yaml
 7681* kubectl apply -f nginx.yaml
 7682* kubectl get pods
 7683* kubectl describe pod nginx-0
 7684* kubectl get pvc
 7685* kubectl describe pvc www-nginx-0
 7686* kubectl delete pvc www-nginx-0
 7687* kubectl apply -f nginx-pv.yaml
 7688* kubectl delete pod nginx-0
 7689* kubectl get pods
 7690* kubectl delete sts nginx
 7691* kubectl get pods
 7692* kubectl apply -f nginx.yaml
 7693* kubectl get pods
 7694* kubectl describe pod nginx-0
 7695* kuebctl get all
 7696* kubectl get all --all-namespaces
 7697* kubectl get sts
 7698* kubectl get pods
 7699* kubectl apply -f nginx.yaml
 7700* kubectl get pods
 7701* kubectl port-forward pod/nginx-0 8080:80
 7702* kubectl get pods
 7703* kubectl delete -f nginx.yaml
 7704* kubectl delete -f nginx-pv.yaml
 7705* kubectl get pods
 7706* kubectl get pv
 7707* kubectl get pvc
 7708* kubectl delete pvc www-nginx-0
 7709* kubectl delete pvc www-nginx-1
 7710* kubectl get pvc
 7711* kubectl get pv
 7712* kubectl get pvc
 7713* kubectl get pv
 7714* kubectl apply -f nginx-pv.yaml
 7715* kubectl apply -f nginx.yaml
 7716* kubectl get pods
 7717* kubectl get pods --watch
 7718* kubectl describe pod nginx-1
 7719* kubectl describe pod nginx-0
 7720* kubectl get pods
 7721* kubectl get pvc
 7722* kubectl get pv
 7723* kubectl delete pvc www-nginx-0
 7724* kubectl describe pod nginx-1
 7725* kubectl delete pvc www-nginx-1
 7726* kubectl delete -f nginx-pv.yaml
 7727* kubectl delete -f nginx.yaml
 7728* kubectl get pv
 7729* kubectl get pvc
 7730* kubectl delete pvc www-nginx-1
 7731* kubectl get pv
 7732* kubectl get pvc
 7733* kubectl get pods
 7734* kubectl apply -f nginx-pv.yaml
 7735* kubectl apply -f nginx.yaml
 7736* kubectl get pods
 7737* kubectl get pods --watch
 7738* kubectl describe pvc www-nginx-1
 7739* kubectl delete pvc www-nginx-1
 7740* kubectl delete pvc www-nginx-0
 7741* kubectl delete pv nginx-pv
 7742* kubectl delete -f nginx.yaml
 7743* kubectl delete -f nginx-pv.yaml
 7744* kubectl get pods
 7745* kubectl get pv
 7746* kubectl get pvc
 7747* kubectl delete pvc www-nginx-1
 7748* kubectl get pvc
 7749* kubectl apply -f nginx-pv.yaml
 7750* kubectl apply -f nginx.yaml
 7751* kubectl get sts
 7752* kubectl apply -f nginx.yaml
 7753* kubectl get pods
 7754* kubectl get pods --watch
 7755* kubectl get pods
 7756* clear
 7757* sudo apt update -y && sudo apt upgrade -y && sudo apt full-upgrade -y
 7758* kubectl get pods
 7759* minikube start
 7760* minikube addons list
 7761* minikube addons enable metallb
 7762* minikube addons enable storage-provisioner
 7763* minikube addons enable ingress
 7764* minikube addons enable ingress-dns
 7765* minikube addons enable default-storageclass
 7766* kubectl get pods -A --all-namespaces
 7767* minikube addons list
 7768* kubectl get storageclass
 7769* kubectl get pods
 7770* clear
 7771* kubectl get sts
 7772* kubectl run -it --image busybox --restart=Never --rm -- /bin/bash
 7773* kubectl run -it --image busybox --restart=Never --rm -- /bin/sh
 7774* kubectl run -it --image=busybox --restart=Never --rm busybox -- sh
 7775* kubectl get pods
 7776* kubectl run -it --image=ubuntu --restart=Never --rm busybox -- sh
 7777* kubectl run -it --image=ubuntu --restart=Never --rm ubuntu -- /bin/bash
 7778* kubectl run -it --image=kubedevio/ubuntu-curl --restart=Never --rm ubuntu-curl -- /bin/bash
 7779* kubectl get service -A --all-namespaces
 7780* kubectl run -it --image=kubedevio/ubuntu-curl --restart=Never --rm ubuntu-curl -- /bin/bash
 7781* kubectl apply -f service-nginx-sts.yaml
 7782* kubectl get svc
 7783* kubectl get endpoints
 7784* kubectl get pods
 7785* kubectl run -it --image=kubedevio/ubuntu-curl --restart=Never ubuntu-curl -- /bin/bash
 7786* kubectl get pods
 7787* ls /data
 7788* ls /data/db
 7789* ls /data/nginx/
 7790* kubectl get pods
 7791* kubectl delete pod nginx-4
 7792* kubectl get pods
 7793* kubectl describe pod nginx-4
 7794* kubectl get daemonsets -A --all-namespaces
 7795* git checkout main
 7796* clear
 7797* minikube start
 7798* kubectl get nodes
 7799* kubectl get nodes -o wide
 7800* kubectl describe node minikube-m02
 7801* minikube start
 7802* sudo apt upgrade -y
 7803* kubectl patch
 7804* minikube start
 7805* minikube addons enable default-storageclass\nminikube addons enable storage-provisioner\n: 1745876517:0;minikube addons list
 7806* minikube addons enable metallb
 7807* minikube addons enable ingress
 7808* minikube addons enable metrics-server
 7809* minikube addons list
 7810* minikube addons enable ingress-dns
 7811* minikube addons list
 7812* kubectl get nodes
 7813* kubectl get nodes -o wide
 7814* minikube ssh -n minikube
 7815* minikube ssh -n minikube-m02
 7816* minikube ssh -n minikube
 7817* kubectl get pods
 7818* kubectl get svc
 7819* minikube addons list
 7820* kubectl top pods --all-namespaces
 7821* helm repo list
 7822* helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update
 7823* helm search repo prometheus-community/prometheus
 7824* helm search repo prometheus
 7825* helm inspect values 
 7826* helm inspect values prometheus-community/prometheus
 7827* helm inspect values prometheus-community/prometheus > values.yaml
 7828* kubectl create ns prometheus
 7829* helm upgrade --install prometheus prometheus-community/prometheus --values values.yaml --namespace prometheus
 7830* kubectl get svc --namespace prometheus prometheus-server -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
 7831* kubectl get pods -n prometheus
 7832* kubectl describe pod prometheus-server-564448f5dc-mnz4m -n prometheus
 7833* kubectl logs prometheus-server-564448f5dc-mnz4m -n prometheus
 7834* kubectl logs prometheus-server-564448f5dc-mnz4m -c prometheus-server -n prometheus
 7835* kubectl get pods -n prometheus
 7836* kubectl delete pod prometheus-server-564448f5dc-mnz4m -n prometheus
 7837* kubectl get pods -n prometheus
 7838* kubectl describe pod prometheus-server-564448f5dc-k5gnt -n prometheus
 7839* kubectl logs prometheus-server-564448f5dc-k5gnt -n prometheus -c prometheus-server
 7840* kubectl exec prometheus-server-564448f5dc-k5gnt -n prometheus -c prometheus-server -- ls -la /data
 7841* kubectl get deployment prometheus-server -n prometheus -o yaml
 7842* kubectl get pvc prometheus-server -n prometheus -o yaml
 7843* kubectl patch deployment prometheus-server -n prometheus --patch-file prometheus-init-container-patch.json
 7844* kubectl get pods -n prometheus -w
 7845* kubectl describe pod prometheus-server-89b5ff4f8-r8d2g -n prometheus
 7846* kubectl patch deployment prometheus-server -n prometheus --patch-file prometheus-init-container-patch-updated.json
 7847* kubectl get pods -n prometheus -w
 7848* kubectl logs prometheus-server-7d87754b65-vr9z9 -n prometheus -c init-chmod-data
 7849* kubectl delete deployment prometheus-server -n prometheus && kubectl delete pvc prometheus-server -n prometheus
 7850* kubectl apply -f prometheus-pvc.yaml -n prometheus && kubectl apply -f prometheus-deployment.yaml -n prometheus
 7851* kubectl get pods -n prometheus
 7852* sleep 10 && kubectl get pods -n prometheus prometheus-server-688cd58c89-284pz
 7853* kubectl logs prometheus-server-688cd58c89-284pz -n prometheus -c prometheus-server
 7854* kubectl get pods -n prometheus prometheus-server-688cd58c89-284pz
 7855* kubectl logs prometheus-server-688cd58c89-284pz -n prometheus -c prometheus-server-configmap-reload
 7856* kubectl describe pod prometheus-server-688cd58c89-284pz -n prometheus
 7857* sleep 30 && kubectl get pods -n prometheus prometheus-server-688cd58c89-284pz
 7858* kubectl get pods -n prometheus
 7859* kubectl get svc
 7860* kubectl get svc -n prometheus
 7861* kubectl apply -f api.yaml
 7862* kubectl get pods
 7863* kubectl apply -f mongo.yaml
 7864* kubectl get pods
 7865* kubectl apply -f mongo.yaml
 7866* kubectl get pods
 7867* kubectl get pos -n prometheus
 7868* kubectl get pods -n prometheus
 7869* kubectl apply -f mongo.yaml
 7870* kubectl get pods
 7871* kubectl logs mongodb-deployment-566d549d95-glhm4
 7872* kubectl delete -f mongo.yaml
 7873* kubectl get pods
 7874* kubectl apply -f mongo.yaml
 7875* kubectl get pods
 7876* kubectl get pv
 7877* kubectl get pvc
 7878* kubectl apply -f mongo.yaml
 7879* kubectl get pods
 7880* kubectl delete -f mongo.yaml
 7881* kubectl apply -f mongo.yaml
 7882* kubectl get pods
 7883* minikube start
 7884* minikube addons list
 7885* kubectl get pods
 7886* kubectl get pods -A --all-namespaces
 7887* kubectl get service
 7888* kubectl get svc -n prometheus
 7889* kubectl get pods
 7890* kubectl logs mongodb-deployment-566d549d95-h7j5d
 7891* kubectl get pods -n monitoring
 7892* kubectl get pods -n prometheus
 7893* minikube status
 7894* minikube addons list
 7895* kubectl top pods
 7896* helm install kube-prometheus \\n  prometheus-community/kube-prometheus-stack \\n  --namespace prometheus
 7897* kubectl --namespace prometheus get pods -l "release=kube-prometheus"
 7898* kubectl --namespace prometheus get secrets kube-prometheus-grafana -o jsonpath="{.data.admin-password}" | base64 -d ; echo
 7899* export POD_NAME=$(kubectl --namespace prometheus get pod -l "app.kubernetes.io/name=grafana,app.kubernetes.io/instance=kube-prometheus" -oname)\n  kubectl --namespace prometheus port-forward $POD_NAME 3000
 7900* kubectl port-forward svc/kube-prometheus-prometheus 9090:9090 -n prometheus
 7901* kubectl get svc -n prometheus
 7902* kubectl get --raw /api/v1/nodes | jq .
 7903* minikube start
 7904* kubectl get pods -A --all-namespaces
 7905* kubectl logs -f kube-prometheus-prometheus-node-exporter-db9bq
 7906* kubectl logs -f kube-prometheus-prometheus-node-exporter-db9bq -n prometheus
 7907* kubectl get pods -n prometheus
 7908* kubectl describe pod kube-prometheus-prometheus-node-exporter-db9bq -n prometheus
 7909* kubectl get pods -n prometheus
 7910* kubectl get svc -n prometheus
 7911* kubectl get ns
 7912* while true; do curl http://192.168.49.100/produto\; sleep 1; done;
 7913* ping 192.168.49.100
 7914* while true; do curl -v http://192.168.49.100/produto\; sleep 1; done;
 7915* while true; do curl http://192.168.49.100/produto\; sleep 1; done\n: 1746018515:0;sudo su
 7916* touch ~/
 7917* rea\ de\ trabalho/mnkbstart.sh && cat << EOF >> #!/bin/bash\n# Inicia o Minikube com o driver desejado (ajuste se necess
 7918* rio)\necho "
 7919*  Iniciando o Minikube..."\nminikube start --driver=docker\n# Lista de addons a serem ativados\nADDONS=(\n  ingress\n  dashboard\n  metrics-server\n  storage-provisioner\n  default-storageclass\n  registry\n# Ativa cada addon\necho "
 7920*  Ativando addons..."\nfor addon in "${ADDONS[@]}"; do\n  echo "
 7921*  Ativando: $addon"\n  minikube addons enable "$addon"\ndone\n# Aguarda alguns segundos antes de abrir o dashboard\necho "
 7922*  Aguardando o Dashboard inicializar..."\nsleep 10\n# Abre o Dashboard no navegador padr
 7923* echo "
 7924*  Abrindo o Dashboard no navegador..."\nminikube dashboard &\necho "
 7925*  Minikube iniciado e addons ativados com sucesso!"\n: 1746171013:0;vim ~/
 7926* rea\ de\ trabalho/mnkbstart.sh
 7927* minikube addons list
 7928* chmod +x ~/
 7929* rea\ de\ trabalho/mnkbstart.sh
 7930* ls
 7931* cd ..
 7932* ls
 7933* cd ..
 7934* ls
 7935* cd ..
 7936* ls
 7937* ls testes
 7938* ls projeto-nginx/
 7939* history | grep "minikube start"
 7940* minikube start
 7941* minikube status
 7942* kubectl get pods -A --all-namespaces
 7943* ls
 7944* cd LAB-Devops
 7945* ls
 7946* cd ..
 7947* cd testes
 7948* ls
 7949* cd pedelogo-catalogo/k8s/
 7950* ls
 7951* kubectl apply -f mongo.yaml 
 7952* kubectl get pods
 7953* ls
 7954* kubectl delete -f nginx.yaml
 7955* kubectl get pods
 7956* kubectl delete pod ubuntu-curl
 7957* kubectl get pods -A --all-namespaces
 7958* kubectl get svc -n prometheus
 7959* history
 7960* kubectl get svc -A --all-namespaces
 7961* while true; do curl http://192.168.49.100/produto\; sleep 1; done;
 7962* history
 7963* minikube start --nodes=2 --cpus=2 --memory=4096 --driver=docker --addons metallb --addons ingress --image-repository=auto --profile ClusterOBSRV
 7964* kubectl get pods -A --all-namespaces
 7965* kubectl get nodes
 7966* kubectl get nodes -o wide
 7967* minikube delete -p ClusterOBSRV
 7968* minikube status
 7969* minikube profile list
 7970* sudo swapoff -a\nsudo sed -i '/ swap / s/^/#/' /etc/fstab
 7971* cat /etc/nsswitch.conf | grep -v '#' | sed -r '/^\s*$/d'fstab
 7972* cat /etc/fstab
 7973* sudo swapoff -a
 7974* free -m
 7975* minikube start --nodes=2 --cpus=2 --memory=4096 --driver=docker --addons metallb --addons ingress --image-repository=auto --profile ClusterOBSRV
 7976* minikube status
 7977* microk8s status
 7978* sudo microk8s status
 7979* snap install microk8s --classic --channel=1.33/stable
 7980* microk8s status
 7981* sudo usermod -a -G microk8s $USER\nsudo chown -f -R $USER ~/.kube\nnewgrp microk8s
 7982* microk8s enable dns storage ingress metrics-server rbac
 7983* microk8s enable ha-cluster
 7984* microk8s enable metallb
 7985* ip --br a
 7986* microk8s add-node
 7987* microk8s enable prometheus grafana
 7988* microk8s enable fluentd
 7989* microk8s enable cert-manager
 7990* microk8s kubectl apply -f - <<EOF\n---\napiVersion: cert-manager.io/v1\nkind: Issuer\nmetadata:\n  name: letsencrypt\nspec:\n  acme:\n    # You must replace this email address with your own.\n    # Let's Encrypt will use this to contact you about expiring\n    # certificates, and issues related to your account.\n    email: me@example.com\n    server: https://acme-v02.api.letsencrypt.org/directory\n    privateKeySecretRef:\n      # Secret resource that will be used to store the account's private key.\n      name: letsencrypt-account-key\n    # Add a single challenge solver, HTTP01 using nginx\n    solvers:\n    - http01:\n        ingress:\n          ingressClassName: nginx\n: 1746665738:0;microk8s enable ingress
 7991* microk8s kubectl create ingress my-ingress \\n    --annotation cert-manager.io/issuer=letsencrypt \\n    --rule 'my-service.example.com/*=my-service:80,tls=my-service-tls'
 7992* microk8s enable community
 7993* microk8s status
 7994* sudo microk8s enable observability
 7995* microk8s kubectl get pods -n observability
 7996* helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\nhelm install kube-state-metrics prometheus-community/kube-state-metrics \\n  --namespace observability \\n  --create-namespace
 7997* microk8s join 192.168.1.9:25000/b8cb131078ba047c65917d7e57433922/70e0a3f8cf2e
 7998* microk8s kubectl get nodes
 7999* microk8s join 192.168.58.2:25000/b8cb131078ba047c65917d7e57433922/70e0a3f8cf2e
 8000* kubectl cluster-info\n: 1746666586:0;echo $KUBECONFIG\n: 1746666600:0;cat ~/.kube/config
 8001* curl -k https://192.168.58.2:8443/version
 8002* vim ~/.kube/config
 8003* ip --br a
 8004* vim ~/.kube/config
 8005* kubectl config get-contexts
 8006* ls ~/.kube
 8007* kubectl config view --minify
 8008* sudo find / -name microk8s.config
 8009* microk8s status --wait-ready\n: 1746667072:0;kubectl config view\nkubectl config current-context\nkubectl cluster-info\n: 1746667094:0;microk8s kubectl config view\nkubectl config current-context\nkubectl cluster-info\n: 1746667134:0;microk8s kubectl config view --minify
 8010* minikube stop
 8011* helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\nhelm install kube-state-metrics prometheus-community/kube-state-metrics \\n  --namespace observability \\n  --create-namespace\n: 1746667252:0;microk8s kubectl get nodes
 8012* microk8s kubectl get pods
 8013* microk8s kubectl get ns
 8014* microk8s kubectl get pods -n observability
 8015* microk8s kubectl config get-contexts
 8016* cat /snap/bin/microk8s.config
 8017* cat /var/snap/microk8s/current/credentials/client.config
 8018* cp /var/snap/microk8s/current/credentials/client.config ~/.kube/microk8s.config
 8019* ls ~/.kube
 8020* KUBECONFIG=~/.kube/microk8s.config helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nKUBECONFIG=~/.kube/microk8s.config helm repo update\nKUBECONFIG=~/.kube/microk8s.config helm install kube-state-metrics prometheus-community/kube-state-metrics \\n  --namespace observability \\n  --create-namespace\n: 1746670640:0;export KUBECONFIG=~/.kube/microk8s.config
 8021* helm install blackbox-exporter prometheus-community/prometheus-blackbox-exporter \\n  --namespace observability\n: 1746670868:0;microk8s add-node
 8022* microk8s cluster-info
 8023* kubectl addons list
 8024* kubectl addon list
 8025* microk8s kubectl addon list
 8026* microk8s addon list
 8027* microk8s addons list
 8028* microk8s addons
 8029* helm install blackbox-exporter prometheus-community/prometheus-blackbox-exporter \\n  --namespace observability\n: 1746671016:0;helm install node-exporter prometheus-community/prometheus-node-exporter \\n  --namespace observability\n: 1746671027:0;kubectl get pods 0A
 8030* kubectl get pods -A
 8031* helm repo add prometheus-community https://prometheus-community.github.io/helm-charts\nhelm repo update\nhelm install monitoring prometheus-community/kube-prometheus-stack \\n  --namespace observability \\n  --create-namespace \\n  -f stack-values.yaml\n: 1746671261:0;vim stack-values.yaml
 8032* vim node-exporter-values.yaml
 8033* vim kube-state-values.yaml
 8034* ls
 8035* cat node-exporter-values.yaml
 8036* vim prometheus-alert-rules.yaml
 8037* vim blackbox-values.yaml
 8038* cat kube-state-values.yaml
 8039* cat node-exporter-values.yaml
 8040* vim grafana-dash-config.yaml
 8041* vim pvc-prometheus.yaml
 8042* vim grafana-dash-config.yaml
 8043* ls -ltR
 8044* cat stack-values.yaml
 8045* mv stack-values.yaml configmap-dash-grafana.yaml
 8046* ls -ltR
 8047* pwd
 8048* microk8s status
 8049* microk8s enable fluentd
 8050* microk8s kubectl get pods -A
 8051* microk8s status
 8052* microk8s enable dashboard
 8053* microk8s enable dashboard-ingress
 8054* microk8s kubectl get pods,svc,ingress -n kubernetes-dashboard
 8055* microk8s kubectl -n kubernetes-dashboard get secret | grep admin-user-token | awk '{print $1}' | xargs microk8s kubectl -n kubernetes-dashboard describe secret
 8056* microk8s kubectl create serviceaccount admin-user -n kubernetes-dashboard && microk8s kubectl create clusterrolebinding admin-user --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-user
 8057* microk8s kubectl -n kubernetes-dashboard get secret $(microk8s kubectl -n kubernetes-dashboard get secret | grep admin-user-token | awk '{print $1}') -o jsonpath='{.data.token}' | base64 -d
 8058* microk8s kubectl get serviceaccount admin-user -n kubernetes-dashboard && echo -e '\n---\n' && microk8s kubectl get secrets -n kubernetes-dashboard | grep admin-user && echo -e '\n---\n' && microk8s kubectl create token admin-user -n kubernetes-dashboard --duration=9999h
 8059* microk8s kubectl -n kubernetes-dashboard apply -f - <<EOF\napiVersion: v1\nkind: Secret\nmetadata:\n  name: admin-user-token\n  annotations:\n    kubernetes.io/service-account.name: admin-user\ntype: kubernetes.io/service-account-token\nEOF\n && microk8s kubectl -n kubernetes-dashboard patch serviceaccount admin-user --patch '{"secrets": [{"name": "admin-user-token"}]}' && microk8s kubectl -n kubernetes-dashboard create token admin-user --duration=9999h
 8060* microk8s kubectl -n kubernetes-dashboard create secret generic admin-user-token --from-literal=token=$(openssl rand -hex 32) --type=kubernetes.io/service-account-token --dry-run=client -o yaml | microk8s kubectl apply -f - && microk8s kubectl -n kubernetes-dashboard annotate secret admin-user-token kubernetes.io/service-account.name=admin-user
 8061* microk8s kubectl -n kubernetes-dashboard create token admin-user --duration=9999h
 8062* microk8s kubectl -n kubernetes-dashboard delete serviceaccount admin-user
 8063* microk8s kubectl get serviceaccount admin-user -n kubernetes-dashboard && echo -e '\n---\n' && microk8s kubectl get secrets -n kubernetes-dashboard | grep admin-user && echo -e '\n---\n' && microk8s kubectl create token admin-user -n kubernetes-dashboard --duration=9999h
 8064* microk8s kubectl create serviceaccount admin-user -n kubernetes-dashboard && microk8s kubectl create clusterrolebinding admin-user --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-user
 8065* microk8s kubectl get serviceaccount admin-user -n kubernetes-dashboard && echo -e '\\n---\\n' && microk8s kubectl get secrets -n kubernetes-dashboard | grep admin-user && echo -e '\\n---\\n' && microk8s kubectl create token admin-user -n kubernetes-dashboard --duration=9999h
 8066* microk8s kubectl get secrets -n kubernetes-dashboard admin-user -o jsonpath='{.data.token}'
 8067* microk8s disable dashboard-ingress
 8068* microk8s enable dashboard-ingress
 8069* microk8s kubectl get pods,svc,ingress -n kubernetes-dashboard
 8070* microk8s kubectl -n kubernetes-dashboard get secret | grep admin-user-token | awk '{print $1}' | xargs microk8s kubectl -n kubernetes-dashboard describe secret
 8071* microk8s kubectl create serviceaccount admin-user -n kubernetes-dashboard && microk8s kubectl create clusterrolebinding admin-user --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-user
 8072* microk8s kubectl get serviceaccount admin-user -n kubernetes-dashboard && echo -e '\\n---\\n' && microk8s kubectl get secrets -n kubernetes-dashboard | grep admin-user && echo -e '\\n---\\n' && microk8s kubectl create token admin-user -n kubernetes-dashboard --duration=9999h
 8073* microk8s kubectl get secrets -n kubernetes-dashboard admin-user -o jsonpath='{.data.token}'
 8074* kubectl get -A
 8075* kubectl get pods -A
 8076* microk8s kubectl status
 8077* export KUBECONFIG=~/.kube/microk8s.config
 8078* kubectl get pods -A
 8079* kubectl get pods -A --all-namespaces
 8080* kubectl describe pod pod/kubernetes-dashboard-api-666f5d499-wngts
 8081* kubectl describe pod kubernetes-dashboard-api-666f5d499-wngts
 8082* kubectl describe pod kubernetes-dashboard-api-666f5d499-wngts -n kubernetes-dashboard
 8083* kubectl -n kubernetes-dashboard create token admin-user
 8084* ls /etc/prometheus
 8085* kubectl create configmap grafana-dashboard-node \\n  --from-file=node-exporter-full.json=./dashboards/node-exporter-full.json \\n  -n observability \\n  --dry-run=client -o yaml > configmap-grafana-dashboard-node.yaml
 8086* kubectl create configmap grafana-dashboard-node \\n  --from-file=node-exporter-full.json=./node-exporter-full.json \\n  -n observability \\n  --dry-run=client -o yaml > configmap-grafana-dashboard-node.yaml
 8087* kubectl create configmap grafana-dashboard-node \\n  --from-file=node-exporter-full.json=node-exporter-full.json \\n  -n observability \\n  --dry-run=client -o yaml > configmap-grafana-dashboard-node.yaml
 8088* cd ../../../Projeto\ Microk8s/
 8089* kubectl create configmap grafana-dashboard-node \\n  --from-file=node-exporter-full.json=./dashboards/node-exporter-full.json \\n  -n observability \\n  --dry-run=client -o yaml > configmap-grafana-dashboard-node.yaml
 8090* kubectl create configmap grafana-dashboard-node \\n  --from-file=node-exporter-full.json=./node-exporter-full.json \\n  -n observability \\n  --dry-run=client -o yaml > configmap-grafana-dashboard-node.yaml
 8091* ls
 8092* microk8s status
 8093* microk8s enable ha-cluster
 8094* microk8s kubectl get nodes
 8095* kubectl -n kubernetes-dashboard create token admin-user
 8096* kubectl get pods -n kubernetes-dashboard
 8097* export KUBECONFIG=~/.kube/microk8s.config
 8098* kubectl get pods -n kubernetes-dashboard
 8099* kubectl -n kubernetes-dashboard create token admin-user
 8100* kubectl get all --all-namespaces
 8101* ls /mnt/data/microk8s-edge-lab/.git
 8102* ls
 8103* cd ..
 8104* ls
 8105* cd microk8s-edge-lab/
 8106* ls
 8107* cat Vagrantfile
 8108* minikube status
 8109* microk8s status
 8110* kubectl get pods -n observability
 8111* free -m
 8112* ls
 8113* vagrant init
 8114* vagrant plugin repair
 8115* vagrant plugin expunge --reinstall
 8116* vagrant init
 8117* vagrant up
 8118* vagrant status
 8119* vagrant up
 8120* vagrant status
 8121* vagrant up node4
 8122* vagrant --help
 8123* vagrant reload lb
 8124* vagrant provision lb
 8125* vagrant provision node1
 8126* vagrant provision node2
 8127* vagrant up
 8128* vagrant provision node2
 8129* clear
 8130* vagrant destroy
 8131* ls
 8132* cd scripts/
 8133* ls
 8134* vim install_microk8s.sh
 8135* vagrant provision lb
 8136* vagrant init
 8137* vagrant provision lb
 8138* vagrant up
 8139* cd ..
 8140* ls
 8141* vagrant init
 8142* vagrant provision lb
 8143* vagrant destroy
 8144* vagrant up
 8145* vagrant status
 8146* vagrant provision node3
 8147* vagrant up node3
 8148* vagrant provision node3
 8149* vagrant ssh node3
 8150* vagrant status
 8151* vagrant up node4
 8152* vagrant ssh node4
 8153* vagrant ssh node1
 8154* ls
 8155* vim Vagrantfile
 8156* Vagrant provision bl node1 node2 node3 node4
 8157* Vagrant provision lb node1 node2 node3 node4
 8158* Vagrant provision node1
 8159* vagrant provision lb node1 node2 node3 node4
 8160* vagrant status
 8161* vagrant up
 8162* vagrant provision lb node1 node2 node3 node4
 8163* sudo swapon
 8164* cat /etc/fstab
 8165* sudo vim /etc/fstab
 8166* sudo swapon
 8167* free -m
 8168* sudo reboot
 8169* htop
 8170* vagrant up
 8171* vagrant provision lb node1 node2 node3 node4
 8172* vagrant ssh node1
 8173* microk8s addons list
 8174* microk8s list addons
 8175* vagrant ssh node1
 8176* microk8s addon
 8177* microk8s addons
 8178* vagrant ssh node1
 8179* vagrant ssh node2
 8180* vagrant ssh node1
 8181* vagrant ssh node2
 8182* vagrant ssh node3
 8183* vagrant ssh node1
 8184* vagrant ssh node3
 8185* vagrant ssh node1
 8186* vagrant ssh node3
 8187* vagrant ssh node1
 8188* vagrant stop
 8189* vagrant halt
 8190* vagrant up
 8191* vagrant ssh node1
 8192* ls
 8193* cat values-atual.yaml
 8194* vagrant ssh node1
 8195* ping 192.168.56.11
 8196* vagrant ssh node1
 8197* vagrant up node1
 8198* vagrant ssh node1
 8199* vagrant up node1
 8200* vagrant ssh node1
 8201* cd ~/UTILDISK/Cursos/LABs
 8202* ls
 8203* cd microk8s-edge-lab/
 8204* ls
 8205* vagrant ssh node2
 8206* vagrant up node2
 8207* vagrant ssh node2
 8208* sudo su
 8209* vagrant up node3
 8210* vagrant plugin repair
 8211* vagrant plugin expunge --reinstall
 8212* vagrant up node3
 8213* vagrant plugin update
 8214* vagrant up node3
 8215* vagrant plugin repair
 8216* vagrant up node3
 8217* ls
 8218* cd ~/UTILDISK/Cursos/LABs/microk8s-edge-lab/
 8219* vagrant up node3
 8220* kubectl create namespace monitoring
 8221* vagrant ssh node3
 8222* vagrant halt node1 \\nvagrant halt node 2 \\nvagrant halt node3
 8223* vagrant halt node1 \\nvagrant halt node2 \\nvagrant halt node3
 8224* vagrant halt node1; vagrant halt node2; vagrant halt node3
 8225* vagrant up node1; vagrant up node2; vagrant up node3
 8226* vagrant ssh node1
 8227* vagrant ssh node2
 8228* vagrant ssh node3
 8229* vagrant ssh node1
 8230* vagrant up node1; vagrant up node2; vagrant up node3
 8231* vagrant ssh node1
 8232* vagrant ssh node2
 8233* vagrant ssh node1
 8234* kubectl run -it --rm net-debug --image=busybox --restart=Never -- sh\nwget http://loki.monitoring.svc.cluster.local/loki/api/v1/status/buildinfo\n: 1747360705:0;kubectl run -it --rm net-debug --image=busybox --restart=Never -- sh\n: 1747360723:0;kubectl
 8235* vagrant ssh node1
 8236* vagrant up node1
 8237* vagrant ssh node1
 8238* vagrant up node1
 8239* vagrant ssh node1
 8240* vagrant halt node1
 8241* history
 8242* vagrant ssh node1
 8243* vagrant up node1
 8244* vagrant ssh node1
 8245* vagrant ssh node2
 8246* vagrant up node2
 8247* vagrant up node3
 8248* vagrant ssh node2
 8249* vagrant ssh node3
 8250* vagrant ssh node1
 8251* vagrant ssh node3
 8252* sudo su
 8253* ls
 8254* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8255* vagrant rsync
 8256* vagrant rsync node1
 8257* vagrant rsync node2
 8258* vagrant rsync node3
 8259* ls
 8260* cd stack-observability/
 8261* ls
 8262* cd stack-persistence/
 8263* ls
 8264* exit
 8265* sudo mkdir /mnt/data/grafana
 8266* sudo su
 8267* pwd
 8268* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8269* cd stack-observability/
 8270* ls
 8271* cd stack-persistence/
 8272* ls
 8273* cd pv_pvcs/
 8274* ls
 8275* cd ..
 8276* ls
 8277* mkdir Grafana18.05
 8278* ls
 8279* cd Grafana18.05/
 8280* ls
 8281* curl -o grafana-pv.yaml https://gist.githubusercontent.com/your-account/grafana-pv/raw/grafana-pv.yaml
 8282* curl -o grafana-pvc.yaml https://gist.githubusercontent.com/your-account/grafana-pvc/raw/grafana-pvc.yaml
 8283* curl -o grafana-deployment-persistent.yaml https://gist.githubusercontent.com/your-account/grafana-deploy/raw/grafana-deployment-persistent.yaml
 8284* ls
 8285* sudo su -
 8286* ls
 8287* sudo su
 8288* vagrant snapshot save node1 snapshot_node1_pronto
 8289* vagrant snapshot save node2 snapshot_node2_pronto
 8290* vagrant snapshot save node3 snapshot_node3_pronto
 8291* cd ..
 8292* vim Vagrantfile
 8293* ls
 8294* vagrant reload
 8295* vagrant ssh node1
 8296* vagrant halt
 8297* sudo apt update && sudo apt install warp-terminal && warp_finish_update HO3BVbq
 8298* vim nodeup.sh
 8299* chmod +x nodes    
 8300* ls
 8301* mv nodesup.sh ~
 8302* sudo chmod +x nodesup.sh
 8303* ls
 8304* chmod +x nodeup.sh
 8305* mv nodesup.sh ~
 8306* mv nodeup.sh ~
 8307* hs ~/nodeup.sh
 8308* sh ~/nodeup.sh
 8309* vagrant ssh node1
 8310* ls /mnt/data/
 8311* ls -ld /mnt/data/
 8312* ls -ld /mnt/data/grafana/
 8313* ls -ld /mnt/data/prometheus/
 8314* ls -ld /mnt/data/prometheus-tsdb/
 8315* sudo chmod -R 777 /mnt/data/prometheus-tsdb/
 8316* vagrant ssh node1
 8317* ping 192.168.56.200
 8318* ping 192.168.56.11
 8319* route add
 8320* sudo ip route add 192.168.56.200 via 192.168.56.11\nsudo ip route add 192.168.56.201 via 192.168.56.11\n: 1747584577:0;sudo ip route add 192.168.56.200/29 via 192.168.56.11\n: 1747584590:0;curl http://192.168.56.200
 8321* curl http://192.168.56.200:3000
 8322* ping 192.168.56.200
 8323* ls
 8324* cd /vagra    
 8325* ping 192.168.56.11
 8326* rote print
 8327* route print
 8328* route -v
 8329* vagrant ssh node1
 8330* curl http://192.168.56.200
 8331* vagrant ssh node1
 8332* ssh node1
 8333* vagrant ssh node2
 8334* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8335* ls
 8336* vagrant ssh node1
 8337* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8338* vim Vagrantfile
 8339* vagrant up win-test
 8340* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8341* vagrant halt node2
 8342* vagrant up node3
 8343* vagrant ssh win-test
 8344* vagrant up node2
 8345* vagrant ssh node2
 8346* vagrant up node3
 8347* vagrant halt win-test
 8348* lsmod | grep ip_vs
 8349* sudo lsmod | grep ip_vs
 8350* vagrant ssh node3
 8351* vagrant ssh node1
 8352* vagrant halt node3
 8353* vagrant up win-test
 8354* vagrant ssh node2
 8355* vagrant ssh node
 8356* vagrant ssh node1
 8357* vagrant up node3
 8358* vagrant halt win-test
 8359* vagrant halt node1
 8360* vagrant halt node2
 8361* vagrant up node1
 8362* vagrant ssh node1
 8363* vagrant up node2
 8364* vagrant up node3
 8365* vagrant ssh node2
 8366* vagrant up node3
 8367* vagrant ssh node3
 8368* vagrant ssh node2
 8369* ping 192.168.1.11
 8370* ping 192.168.1.10
 8371* vagrant up win-test 
 8372* vagrant halt node2
 8373* vagrant halt node3
 8374* vagrant ssh node1
 8375* vagrant halt node1
 8376* exit
 8377* vagrant up node1
 8378* vagrant ssh node1
 8379* vagrant up node2
 8380* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8381* vagrant plugin repair
 8382* vagrant up node2
 8383* ping node1
 8384* vagrant ssh node2
 8385* vagrant ssh node1
 8386* sudo su
 8387* clear
 8388* sh ~/nodeup.sh   
 8389* ls ~
 8390* cat ~/nodeup.sh
 8391* sudo su
 8392* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8393* ls
 8394* cd stack-observability/        
 8395* ls
 8396* sudo su
 8397* cd ..
 8398* cd stack-prometheus/
 8399* ls
 8400* vim cat prometheus.yml
 8401* vim prometheus.yml
 8402* rm -f prometheus-configmap.yaml
 8403* rm -f prometheus-deployment.yaml
 8404* clear
 8405* ls
 8406* ls -l
 8407* cat prometheus\ copy.yaml
 8408* clear
 8409* ls
 8410* kubectl get pods
 8411* clear
 8412* export KUBECONFIG=~/.kube/microk8s.config
 8413* kubectl get pods
 8414* kubectl get pods -n monitoring
 8415* kubectl delete pod grafana-85f9c88fb4-k7bxq -n monitoeing
 8416* kubectl delete pod grafana-85f9c88fb4-k7bxq -n monitoring
 8417* kubectl get pods -n monitoring
 8418* kubectl get pods
 8419* kubectl get all -n monitoring
 8420* ls
 8421* vim prometheus.yml
 8422* vim alertmanager-configmap.yaml
 8423* ls -l
 8424* vim alertmanager-configmap.yaml
 8425* vim alertmanager-statefullset.yaml
 8426* vim alertmanager.yaml
 8427* cd ..
 8428* kubectl get pods
 8429* kubectl get pods -n monitoring
 8430* kubectl scale deploy alertmanager-0 --replicas=0 -n monitoring
 8431* kubectl get pdeploy -n monitoring
 8432* kubectl get deploy -n monitoring
 8433* kubectl scale deploy grafana --replicas=0 -n monitoring    
 8434* kubectl scale deploy kube-state-metrics --replicas=0 -n monitoring
 8435* kubectl scale deploy blackbox-exporter --replicas=0 -n monitoring
 8436* kubectl delete -f stack-prometheus/
 8437* ls
 8438* kubectl get all -n monitoring
 8439* kubectl get pv
 8440* kubectl get pvc -n monitoring
 8441* kubectl delete pvc alertmanager-storage-volume-alertmanager-0 -n monitoring
 8442* kubectl delete pvc prometheus-storage-volume-prometheus-0 -n monitoring
 8443* kubectl delete pv pvc-0cd959dc-ebe7-4472-b57a-452c5a1ceb97
 8444* kubectl get pv
 8445* kubectl apply -f stack-prometheus/
 8446* kubectl get pvc -n monitoring
 8447* cd stack-prometheus/
 8448* ls
 8449* kubectl delete -f compliance-pv.yaml
 8450* rm -f compliance-pv.yaml
 8451* grep -Ri pvc
 8452* vim pvcs.yaml
 8453* kubectl get pv
 8454* vim alertmanager.yaml
 8455* vim alertmanager-statefullset.yaml
 8456* mv pvcs.yaml Services/
 8457* kubectl get pvc -n monitoring
 8458* kubectl delete pvc alertmanager-pvc - monitoring
 8459* kubectl delete pvc alertmanager-pvc -n monitoring
 8460* kubectl delete pvc prometheus-pvc -n monitoring
 8461* kubectl get pvc -n monitoring
 8462* kubectl get pv
 8463* vim sc-stack-prometheus.yaml
 8464* vim alertmanager.yaml
 8465* vim alertmanager-statefullset.yaml
 8466* kubectl apply -f stack-prometheus/    
 8467* kubectl get pods
 8468* kubectl get all -n monitoring
 8469* kubectl get deploy -n monitoring
 8470* kubectl scale deploy grafana --replicas=0 -n monitoring
 8471* kubectl scale deploy blackbox-exporter --replicas=1 -n monitoring
 8472* kubectl scale deploy kube-state-metrics --replicas=1 -n monitoring
 8473* kubectl get deploy -n monitoring
 8474* cd ..
 8475* kubectl apply -f stack-prometheus/
 8476* kubectl get all -n monitoring
 8477* kubectl apply -f stack-prometheus/
 8478* kubectl delete ns monitoring
 8479* kubectl delte -f stack-prometheus/
 8480* kubectl delete -f stack-prometheus/
 8481* kubectl get ns
 8482* kubectl create namespace monitoring
 8483* kubectl apply -f stack-prometheus/
 8484* kubectl delete -f stack-prometheus/
 8485* kubectl get all -n monitoring
 8486* kubectl apply -f stack-prometheus/
 8487* kubectl delete -f stack-prometheus/
 8488* kubectl get all -n monitoring
 8489* kubectl apply -f stack-prometheus/
 8490* kubectl get pvc -n monitoring
 8491* ls
 8492* cd stack-prometheus/
 8493* ls
 8494* mv Services/sc-stack-prometheus.yaml .
 8495* kubectl apply -f sc-stack-prometheus.yaml
 8496* kubectl get pvc -n monitoring
 8497* kubectl get pv -n monitoring
 8498* kubectl get pv
 8499* kubectl get pods -n monitoring
 8500* ls
 8501* ls pvcs.yaml
 8502* cat pvcs.yaml
 8503* kubectl get pv -n monitoring
 8504* kubectl get pvc -n monitoring
 8505* kubectl apply -f sc-stack-prometheus.yaml
 8506* kubectl delete -f sc-stack-prometheus.yaml
 8507* kubectl apply -f sc-stack-grafana.yaml
 8508* ls
 8509* kubectl apply -f sc-stack-prometheus.yaml
 8510* kubectl get pvc
 8511* kubectl get pvc -n monitoring
 8512* kubectl describe pvc grafana-storage -n monitoring
 8513* kubectl delete -f .
 8514* kubectl get all -n monitoring
 8515* kubectl apply -f stack-prometheus/
 8516* kubectl apply -f .
 8517* kubectl get pvc -n monitoring
 8518* cd ..
 8519* vagrant snapshot list
 8520* kubectl get pv
 8521* export KUBECONFIG=~/.kube/microk8s.config
 8522* kubectl get pv
 8523* kubectl get pvc
 8524* kubectl get pvc -n monitoring
 8525* kubectl delete -f stack-prometheus/
 8526* kubectl get all -n monitoring
 8527* kubectl get crd -n monitoring
 8528* kubectl get crds | grep monitoring\nkubectl get all -n monitoring\nkubectl get pvc -n monitoring\n: 1747784139:0;kubectl delete pvc alertmanager-storage-volume-alertmanager-0
 8529* kubectl delete pvc alertmanager-storage-volume-alertmanager-0 -n monitoring
 8530* kubectl delete pvc prometheus-storage-volume-prometheus-0 -n monitoring
 8531* vagrant snapshot restore node1 snapshot_node1_pronto --no-start
 8532* vagrant snapshot restore node2 snapshot_node2_pronto --no-start
 8533* vagrant snapshot restore node3 snapshot_node3_pronto --no-start
 8534* ls
 8535* ls ~
 8536* sh ~
 8537* sh ~/nodeup.sh
 8538* vagrant ssh node1
 8539* vagrant ssh node2
 8540* vagrant ssh node3
 8541* vagrant ssh node1
 8542* vagrant ssh node2
 8543* vagrant ssh node3
 8544* vagrant ssh node1
 8545* vagrant ssh node2
 8546* vagrant ssh node3
 8547* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8548* vagrant halt node3
 8549* vagrant up win-test 
 8550* vagrant halt node3
 8551* vagrant halt node2
 8552* vagrant halt
 8553* helm show values prometheus-community/kube-prometheus-stack > values.yaml
 8554* vim values.yaml
 8555* vagrant up node1
 8556* vagrant up node2
 8557* vagrant up node3
 8558* vagrant ssh node1
 8559* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8560* vagrant up node2
 8561* vagrant ssh node2
 8562* wget https://github.com/ventoy/Ventoy/releases/download/v1.1-05/ventoy-1.1-05-linux.tar.gz -O ventoy.tar.gz
 8563* wget https://github.com/ventoy/Ventoy/releases/download/v1.0.89/ventoy-1.0.89-linux.tar.gz -O ventoy.tar.gz\n: 1747878816:0;cd ~/Downloads/
 8564* git clone https://github.com/ventoy/Ventoy.git
 8565* sudo apt install brasero
 8566* ls
 8567* cd Ventoy
 8568* ls
 8569* cd INSTALL/
 8570* ls
 8571* ./Ventoy2Disk.sh
 8572* sudo ./Ventoy2Disk.sh
 8573* sudo bash ./Ventoy2Disk.sh
 8574* sudo sh Ventoy2Disk.sh
 8575* sudo ./Ventoy2Disk.sh
 8576* ls
 8577* sudo su
 8578* celar
 8579* cd ~/UTILDISK/Cursos/LABs/
 8580* ls
 8581* cd microk8s-edge-lab/
 8582* ls
 8583* vim values.yaml
 8584* ls
 8585* rm -f values.yaml
 8586* ls
 8587* vim values.yaml
 8588* kubectl get pv
 8589* vim values.yaml
 8590* cd ~/
 8591* rea\ de\ trabalho/
 8592* ls
 8593* gravar imagem com o comando dd
 8594* which dd
 8595* ls
 8596* dd if=Win11_22H2_BrazilianPortuguese_x64v1.iso of=/dev/sdb status=progress bs=128M
 8597* sudo dd if=Win11_22H2_BrazilianPortuguese_x64v1.iso of=/dev/sdb status=progress bs=128M
 8598* ls
 8599* ls /dev/sdb
 8600* dd if=Win11_22H2_BrazilianPortuguese_x64v1.iso of=/dev/sdc1 status=progress bs=128M
 8601* sudo dd if=Win11_22H2_BrazilianPortuguese_x64v1.iso of=/dev/sdc1 status=progress bs=128M
 8602* sudo dd if=Win11_22H2_BrazilianPortuguese_x64v1.iso of=/dev/sdc1 status=progress bs=8M
 8603* ls /media
 8604* ls /media/carlos-leonardo
 8605* sudo dd if=Win11_22H2_BrazilianPortuguese_x64v1.iso of=/media/carlos-leonardo status=progress bs=8M
 8606* fdisk -l
 8607* sudo fdisk -l
 8608* sudo dd if=Win11_22H2_BrazilianPortuguese_x64v1.iso of=/dev/sdb status=progress bs=8M
 8609* sudo apt install gpart
 8610* clear
 8611* vagrant up node1
 8612* cd UTILDISK/Cursos
 8613* cd /UTILDISK/Cursos
 8614* cd /UTILDISK/Curso
 8615* ls /UTILDISK
 8616* ls
 8617* vagrant up node1
 8618* vagrant ssh node1
 8619* vagrant up node2
 8620* exit
 8621* vagrant ssh node2
 8622* cd ~/UTILDISK/Cursos/LABs/microk8s-edge-lab/
 8623* vagrant snapshot --help
 8624* vagrant snapshot save node1 snapshot_node1_220520252218
 8625* vagrant ssh node1
 8626* vagrant up node2
 8627* vagrant up node3
 8628* vim Vagrantfile
 8629* vagrant provision
 8630* vim Vagrantfile
 8631* vagrant provision
 8632* vagrant up win-test
 8633* cat Vagrantfile
 8634* vagrant provision
 8635* vagrant provision node1
 8636* vagrant provision node2
 8637* vagrant provision node3
 8638* sudo apt update && sudo apt install warp-terminal && warp_finish_update GRlwSjH
 8639* vagrant provision node1
 8640* vagrant
 8641* vagrant reload node1
 8642* vagrant halt win-test
 8643* cd ~
 8644* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 8645* vagrant halt win-test
 8646* vagrant reload node2
 8647* vagrant reload node3
 8648* vagrant ssh node1
 8649* sudo apt update && sudo apt install warp-terminal && warp_finish_update GRlwSjH
 8650* vagrant ssh node1
 8651* cat Vagrantfile
 8652* vim Vagrantfile
 8653* vagrant provision gateway
 8654* vim Vagrantfile
 8655* vagrant provision gateway
 8656* vim Vagrantfile
 8657* vagrant provision gateway
 8658* vagrant up gateway
 8659* vim Vagrantfile
 8660* vagrant reload node1\n: 1748054747:0;vim Vagrantfile
 8661* ls
 8662* cat Vagrantfile.bkp
 8663* vim Vagrantfile
 8664* :q!
 8665* vim Vagrantfile
 8666* vagrant reload node1
 8667* vagrant reload node2
 8668* vagrant reload node3
 8669* vagrant provision gateway
 8670* vagrant up gateway
 8671* vagrant ssh gateway
 8672* vagrant ssh node1
 8673* vagrant ssh gateway
 8674* ls /root
 8675* sudo ls /root
 8676* sudo ls /root/VirtualBox\ Vms
 8677* vagrant snapshot --help
 8678* vagrant snapshot list
 8679* vagrant snapshot delete snapshot_node1_pronto
 8680* sudo vagrant snapshot delete snapshot_node1_pronto
 8681* vagrant snapshot delete snapshot_node2_pronto
 8682* vagrant snapshot delete --help
 8683* vagrant snapshot delete node2 snapshot_node2_pronto
 8684* vagrant snapshot delete node1 snapshot_node1_pronto
 8685* vagrant snapshot delete node3 snapshot_node3_pronto
 8686* vagrant snapshot list
 8687* vagrant halt win-test
 8688* vagrant ssh node1
 8689* vagrant up node1
 8690* vagrant reset node2
 8691* vagrant reload node2
 8692* vagrant reload node3
 8693* vagrant ssh node1
 8694* RELEASE=<release name>
 8695* NAMESPACE=<namespace>
 8696* kubectl create ns $NAMESPACE
 8697* helm repo add timescale https://charts.timescale.com/
 8698* helm repo update
 8699* vagrant reload node3
 8700* microk8s kubectl get ns
 8701* microk8s kubectl get pods -n monitoring
 8702* helm repo add timescale https://charts.timescale.com/\nhelm repo update\nhelm install --wait --timeout 15m tobs timescale/tobs -n monitoring
 8703* export KUBECONFIG=/snap/microk8s
 8704* ls snap/microk8s/
 8705* ls snap/microk8s/common/
 8706* ls snap/microk8s/current
 8707* ls /snap/microk8s/current
 8708* ls /snap/microk8s/
 8709* ls /snap/microk8s/current/var
 8710* ls /snap
 8711* ls /snap/microk8s 
 8712* ls /snap/microk8s/current/
 8713* export KUBECONFIG=/snap/microk8s/current/client.config
 8714* helm repo add timescale https://charts.timescale.com/\nhelm repo update\nhelm install --wait --timeout 15m tobs timescale/tobs -n monitoring
 8715* helm repo add timescale https://charts.timescale.com/\nhelm repo update\nhelm install --wait tobs timescale/tobs -n monitoring
 8716* microk8s status
 8717* helm repo add timescale https://charts.timescale.com/\nhelm repo update\nhelm install --wait tobs timescale/tobs -n monitoring
 8718* helm version
 8719* $ which kubectl\n$ ls -al /usr/local/bin/kubectl\nlrwxrwxrwx 1 root root 3 Jan  4 20:30 /usr/local/bin/kubectl -> k3s*
 8720* $ which kubectl
 8721* vagrant ssh node1
 8722* microk8s reset
 8723* vagrant status
 8724* sudo microk8s reset
 8725* vagrant status
 8726* vagrant ssh node1
 8727* vagrant
 8728* vagrant destroy
 8729* vagrant global-status
 8730* vagrant global-status --prune
 8731* vagrant global-status
 8732* vim Vagrantfile
 8733* cat Vagrantfile
 8734* vim Vagrantfile
 8735* vagrant up
 8736* vagrant up node1
 8737* vim Vagrantfile
 8738* vagrant up
 8739* vagrant init
 8740* vim Vagrantfile
 8741* vagrant init
 8742* vim Vagrantfile
 8743* vagrant up
 8744* vagrant provision node1
 8745* vagrant ssh node1
 8746* clear
 8747* vagrant status]
 8748* vagrant status
 8749* vagrant up node1
 8750* vagrant ssh node1
 8751* ip --br a
 8752* route
 8753* ping 192.168.56.11
 8754* vim Vagrantfile
 8755* vagrant provision
 8756* vagrant reload
 8757* vagrant ssh node1
 8758* ping 192.168.56.10
 8759* ping 192.168.56.11
 8760* curl http://192.168.5610
 8761* curl http://192.168.56.10
 8762* microk8s status
 8763* microk8s start
 8764* microk8s status
 8765* kubectl get pods -n observability
 8766* ls ~/.kuvbe
 8767* ls ~/.ku
 8768* ls ~/.kube
 8769* microk8s config > ~/.kube/config
 8770* echo "export KUBECONFIG=~/.kube/config" >> ~/.zshrc
 8771* source ~/.zshrc
 8772* kubectl get pods -n observability
 8773* kubectl get ns
 8774* kubectl get pods -n monitoring
 8775* helm
 8776* helm list -A
 8777* helm repo list
 8778* microk8s enable observability
 8779* helm show values kube-prom-stack-grafana > values.yaml
 8780* helm search repo kube-prom-stack-grafana
 8781* helm search repo kube-prom-stack
 8782* kubectl --namespace observability get pods -l "release=kube-prom-stack"
 8783* kubectl --namespace observability get secrets kube-prom-stack-grafana -o jsonpath=\"{.data.admin-password}\" | base64 -d ; echo
 8784* kubectl --namespace observability get secrets kube-prom-stack-grafana -o jsonpath="{.data.admin-password}" | base64 -d; echo
 8785* microk8s disable metrics-server
 8786* kubectl --namespace observability get pods -l "release=kube-prom-stack"
 8787* helm repo list
 8788* helm show values prometheus-community/kube-prometheus-stack > default-values.yaml
 8789* cat default-values.yaml
 8790* mkdir my-helm-chart
 8791* cd my-helm-chart/
 8792* helm create meu-nginx-chart
 8793* ls -l meu-nginx-chart/
 8794* ls
 8795* cd meu-nginx-chart/
 8796* ls
 8797* cd templates/
 8798* ls
 8799* cat NOTES.txt
 8800* ls
 8801* cat deployment.yaml
 8802* ls
 8803* cd ..
 8804* ls
 8805* cat Chart.yaml
 8806* cat values.yaml
 8807* ls
 8808* cd templates/
 8809* ls
 8810* rm -f ingress.yaml hpa.yaml serviceaccount.yaml
 8811* helm inspect prometheuscommunity/kube-prom-stack
 8812* helm inspect all prometheuscommunity/kube-prom-stack
 8813* helm inspect all prometheuscommunity/kube-prometheus-stack
 8814* helm inspect all prometheus-community/kube-prometheus-stack
 8815* helm inspect values prometheus-community/kube-prometheus-stack
 8816* cd ../..
 8817* cd ..
 8818* helm inspect values prometheus-community/kube-prometheus-stack > kube-prom-values.yaml
 8819* code . kube-prom-values.yaml
 8820* ls
 8821* cd ~
 8822* mv .zsh_history .zsh_history_bad\nstrings .zsh_history_bad > .zsh_history\nfc -R .zsh_history\nrm ~/.zsh_history_bad
 8823* ls -la
 8824* cd -
 8825* ls
 8826* cd my-helm-chart/
 8827* ls
 8828* cd meu-nginx-chart/
 8829* l
 8830* vim values.yaml
 8831* helm inspect all nginx
 8832* helm inspect all nginx-ingress/nginx-ingress
 8833* helm inspect all nginx-ingress
 8834* helm inspect all ingress-nginx/ingress-nginx
 8835* helm repo list
 8836* helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
 8837* helm inspect all ingress-nginx/ingress-nginx
 8838* helm inspect all ingress-nginx/ingress-nginx > ingress-nginx.yaml
 8839* vim ingress-nginx.yaml
 8840* helm inspect values ingress-nginx/ingress-nginx > values.yaml
 8841* vim values.yaml
 8842* cd ../..
 8843* vagrant status
 8844* vagrant up
 8845* vagrant ssh node1
 8846* code kb-prom-stk-values.yaml
 8847* kubectl create
 8848* vim stgrclass.yaml
 8849* ls
 8850* vagrant ssh node1
 8851* kubcetl
 8852* kubectl
 8853* kubectl get pods -n observability
 8854* kubectl get svc -n observability
 8855* kubectl describe pod kube-prom-stack-grafana-69d45887b7-gfh6c
 8856* kubectl describe pod kube-prom-stack-grafana-69d45887b7-gfh6c -n observability
 8857* ls
 8858* kubectl get pvc -n observability
 8859* ls
 8860* kubectl get sc
 8861* kubectl get pvc -n observability
 8862* kubectl get sc -n observability
 8863* cat stgrclass.yaml
 8864* cat stack-sc.yaml
 8865* cat stack-pvc-grafana.yaml
 8866* ls /mnt/data/
 8867* hostname
 8868* mkdir /mnt/data/alertmanager && chmod -R 777 /mnt/data/alertmanager
 8869* mkdsudo ir /mnt/data/alertmanager && chmod -R 777 /mnt/data/alertmanager
 8870* sudo mkdir /mnt/data/alertmanager && chmod -R 777 /mnt/data/alertmanager
 8871* ls /mnt/data/
 8872* ls -ltr /mnt/data/
 8873* sudo mkdir /mnt/data/alertmanager && sudo chmod -R 777 /mnt/data/alertmanager
 8874* ls -ltr /mnt/data/
 8875* chmod -R 777 /mnt/data/alertmanager
 8876* sudo chmod -R 777 /mnt/data/alertmanager
 8877* ls -ltr /mnt/data/
 8878* clear
 8879* kubectl apply -f stack-sc.yaml
 8880* ls
 8881* kubectl apply -f stack-pvc-*.yaml
 8882* kubectl apply -f stack-pvc-alertmanager.yaml -f stack-pvc-prometheus.yaml
 8883* kubectl apply -f stack-pvc-grafana.yaml
 8884* cat stack-pvc-grafana.yaml
 8885* celar
 8886* clear
 8887* kubectl get pvc
 8888* kubectl get pvc -n observability
 8889* kubectl get pv -n observability
 8890* kubectl get sc -n observability
 8891* kubectl delete sc sc-stack-prometheus
 8892* history | grep helm    
 8893* ls
 8894* cat values.yaml
 8895* vim values.yaml
 8896* kubectl get pv
 8897* ls
 8898* kubectl apply -f stack-pv-alertmanager.yaml
 8899* sudo mkdir /mnt/data/tempo && sudo chmod -R 777 /mnt/data/tempo
 8900* ls -ltr /mnt/data/
 8901* kubectl apply -f stack-pvc-tempo.yaml
 8902* kubectl gte pvc
 8903* kubectl get pvc
 8904* kubectl get pvc -n monitoring
 8905* kubectl apply -f stack-pvc-alertmanager.yaml -f stack-pvc-prometheus.yaml
 8906* kubectl get pvc -n monitoring
 8907* vim stack-pvc-alertmanager.yaml
 8908* kubectl get ns
 8909* kubectl delete namespace monitoring
 8910* kubectl get all -n monitoring
 8911* kubectl delete namespace monitoring --grace-period=0
 8912* kubectl get ns
 8913* kubectl get pvc -n observability
 8914* kubectl apply -f stack-pvc-tempo.yaml
 8915* vim stack-pvc-tempo.yaml
 8916* kubectl apply -f stack-pvc-tempo.yaml
 8917* kubectl get pvc -n observability
 8918* kubectl get pv
 8919* helm list -A
 8920* kubectl get pods -n observability
 8921* helm repo list
 8922* helm repo add grafana https://grafana.github.io/helm-charts
 8923* helm repo update
 8924* helm upgrade prometheus prometheus-community/kube-prometheus-stack -f Prometheus-stack-values.yaml
 8925* helm list -A
 8926* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -f Prometheus-stack-values.yaml
 8927* helm list -A
 8928* helm upgrade kube-prometheus-stack prometheus-community/kube-prometheus-stack -f Prometheus-stack-values.yaml
 8929* helm list -A
 8930* helm install kube-prom-stack prometheus-community/kube-prometheus-stack -n observability
 8931* microk8s disable observability
 8932* kubectl get ns
 8933* kubectl create namespace monitoring
 8934* helm install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 8935* kubectl get pods -n monitoring
 8936* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 8937* kubectl get pv
 8938* kubectl get pvc -n monitoring
 8939* kubectl apply -f stack-pvc-alertmanager.yaml -f stack-pvc-prometheus.yaml -f stack-pvc-grafana.yaml -f stack-pvc-tempo.yaml
 8940* kubectl get pvc
 8941* kubectl get pvc -n monitoring
 8942* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 8943* kubectl get pods -n monitoring
 8944* kubectl apply -f stack-pv-alertmanager.yaml -f stack-pv-prometheus.yaml -f stack-pv-grafana.yaml -f stack-pv-tempo.yaml
 8945* kubectl get pv
 8946* kubectl apply -f stack-pv-prometheus.yaml
 8947* kubectl get pvc -n monitoring
 8948* kubectl get pv
 8949* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 8950* kubectl get pods -n monitoring
 8951* kubectl describe pod kube-prom-stack-grafana-77d4fb5b7b-7687g -n monitoring
 8952* kubectl get pods
 8953* kubectl get pods -n monitoring
 8954* kubectl logs -f kube-prom-stack-grafana-77d4fb5b7b-7687g -n monitoring
 8955* kubectl delete pod kube-prom-stack-grafana-77d4fb5b7b-7687g -n monitoring
 8956* kubectl get pods -n monitoring
 8957* kubectl describe pod kube-prom-stack-grafana-77d4fb5b7b-xmf7v -n monitoring
 8958* kubectl logs -f kube-prom-stack-grafana-77d4fb5b7b-xmf7v -n monitoring
 8959* clear
 8960* kubectl get pods -n monitoring
 8961* kubectl describe pod prometheus-kube-prom-stack-kube-prome-prometheus-0 -n monitoring
 8962* kubectl logs -f prometheus-kube-prom-stack-kube-prome-prometheus-0 -n monitoring
 8963* kubectl apply -f stack-pv-alertmanager.yaml -f stack-pv-prometheus.yaml -f stack-pv-grafana.yaml -f stack-pv-tempo.yaml
 8964* kubectl delete -f stack-pv-alertmanager.yaml -f stack-pv-prometheus.yaml -f stack-pv-grafana.yaml -f stack-pv-tempo.yaml
 8965* kubectl apply -f stack-pv-alertmanager.yaml -f stack-pv-prometheus.yaml -f stack-pv-grafana.yaml -f stack-pv-tempo.yaml
 8966* kubectl get pods -n monitoring
 8967* kubectl get pv
 8968* kubectl get ns
 8969* ls
 8970* history
 8971* ls
 8972* kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.31/deploy/local-path-storage.yaml
 8973* kubectl get sc
 8974* ls /opt/local-path-provisioner
 8975* kuebctl get pods -n monitoring
 8976* clear
 8977* kubectl get pods -n monitoring
 8978* kubectl get pods -n monitoring -w
 8979* clear
 8980* kubectl -n local-path-storage get pod
 8981* kubectl get pods -n monitoring -w
 8982* kubectl get pv
 8983* kubectl get pv | grep -i bound
 8984* kubectl get pvc -n monitoring | grep -i bound
 8985* kubectl get pvc -n monitoring
 8986* helm repo add grafana https://grafana.github.io/helm-charts
 8987* ls
 8988* helm install loki grafana/loki -f loki-value.yaml
 8989* helm install loki grafana/loki -f loki-values.yaml
 8990* helm upgrade --install loki grafana/loki-stack --version 2.10.2 -f loki-values.yaml -n monitoring
 8991* clear
 8992* helm upgrade -f tempo-values.yaml --install grafana grafana/grafana
 8993* kubectl get pods -n monitoring
 8994* helm list -A
 8995* kubectl get ns
 8996* kubectl get pods
 8997* kubectl logs -f grafana-5bfc98d985-p5scg
 8998* kubectl describe pod grafana-5bfc98d985-p5scg
 8999* kubectl get all
 9000* helm list -A
 9001* helm uninstall grafana
 9002* helm upgrade -f tempo-values.yaml --install tempo grafana/tempo -n monitoring
 9003* kubectl get all -n monitoring
 9004* kubectl get pods -n monitoring
 9005* kubectl get svc -n monitoring
 9006* kubcetl expose service
 9007* kubectl expose service
 9008* kubectl expose
 9009* kubectl expose kube-prom-stack-grafana --name=grafana-external --port=3000 --type=LoadBalancer -n monitoring
 9010* kubectl expose service kube-prom-stack-grafana --port=443 --target-port=8443 --name=kube-prom-stack-grafana-ext --type=LoadBalancer
 9011* kubectl get deploy -n monitoring
 9012* kubectl get sts -n monitoring
 9013* kubectl get daemonsets -n monitoring
 9014* kubectl expose deployment kube-prom-stack-grafana --port=80 --name=kube-prom-stack-grafana-ext --type=LoadBalancer    
 9015* kubectl expose deployment kube-prom-stack-grafana --port=80 --name=kube-prom-stack-grafana-ext --type=LoadBalancer -n monitoring
 9016* kubectl expose deployment kube-prom-stack-kube-prome-operator --port=9090 --name=kube-prom-stack-grafana-ext --type=LoadBalancer -n monitoring
 9017* kubectl expose deployment kube-prom-stack-kube-prome-operator --port=9090 --name=kube-prom-stack-kube-prome-operator-ext --type=LoadBalancer -n monitoring
 9018* kubectl delete svc service/kube-prom-stack-grafana-ext -n monitoring
 9019* kubectl delete svc kube-prom-stack-grafana-ext -n monitoring
 9020* kubectl expose deployment kube-prom-stack-grafana --port=3000 --name=kube-prom-stack-grafana-ext --type=LoadBalancer -n monitoring
 9021* kubectl expose sts alertmanager-kube-prom-stack-kube-prome-alertmanager --port=9093 --name=alertmanager-kube-prom-stack-kube-prome-alertmanager --type=LoadBalancer -n monitoring
 9022* clear
 9023* kubectl get svc -n monitoring
 9024* kubectl describe svc alertmanager-operated -n monitoring
 9025* kubectl get svc alertmanager-operated -n monitoring -o yaml
 9026* kubectl expose svc alertmanager-operator --port=9094 --name=alertmanager-ext --type=LoadBalancer -n monitoring
 9027* kubectl expose svc alertmanager-operated --port=9094 --name=alertmanager-operated-ext --type=LoadBalancer -n monitoring
 9028* kuebctl get svc -n monitoring
 9029* kubectl get svc -n monitoring
 9030* kubectl delete svc kube-prom-stack-kube-prome-operator-ext -n monitoring
 9031* kubectl get svc -n monitoring
 9032* kubectl delete svc alertmanager-operated-ext -n monitoring
 9033* history | grep ext
 9034* kubectl expose svc prometheus-operated --port=9090 --name=prometheus-operated-ext --type=LoadBalancer -n monitoring
 9035* kubeclt get svc
 9036* kubectl get svc -n monitoring
 9037* curl -Lkv http://prometheus-operated.observability.svc.cluster.local:9090/
 9038* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9039* kubeclt get pods -n monitoring
 9040* kubectl get pods -n monitoring
 9041* kubectl get deploy kube-prom-stack-grafana -n monitoring -o yaml
 9042* kubectl delete deploy kube-prom-stack-grafana -n monitoring
 9043* kubectl get configmaps -n monitoring
 9044* kubectl get configmap kube-prom-stack-grafana -n monitoring -o yaml
 9045* kubectl get pods -n monitoring
 9046* helm install --upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9047* helm upgrade --install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9048* kubectl get deploy -n monitoring
 9049* kubectl get pods -n monitoring
 9050* kubectl describe pod kube-prom-stack-grafana-77d4fb5b7b-b2b5t -n monitoring
 9051* kubectl delete pod kube-prom-stack-grafana-77d4fb5b7b-b2b5t -n monitoring
 9052* kubectl get deploy -n monitoring
 9053* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 9054* ls
 9055* kubectl config set-context --current --namespace=monitoring
 9056* kubectl get pods -n monitoring
 9057* kubectl get sts
 9058* kubectl get configmap
 9059* kubectl delete pod kube-prom-stack-grafana-77d4fb5b7b-b2b5t -n monitoring
 9060* kubectl get pods
 9061* kubectl logs -f kube-prom-stack-grafana-77d4fb5b7b-zntp4
 9062* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9063* kubectl get pods
 9064* kubectl get pods -w
 9065* helm install --upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9066* helm upgrade --install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9067* kubectl get pods -n monitoring
 9068* kubectl logs -f kube-prom-stack-grafana-77d4fb5b7b-7687g -n monitoring
 9069* kubectl logs -f kube-prom-stack-grafana-77d4fb5b7b-zntp4 -n monitoring
 9070* helm install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9071* helm upgrade --reuse-values kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9072* kubectl --namespace monitoring get pods -l "release=kube-prom-stack"
 9073* kubectl get pods -n monitoring
 9074* helm upgrade --reset-then-reuse-values kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9075* kubectl get pods -n monitoring
 9076* kubectl get all
 9077* kubectl describe deploy kube-prom-stack-grafana
 9078* kubectl get events
 9079* kubectl delete deploy kube-prom-stack-grafana
 9080* helm install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9081* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9082* kubectl get pods kube-prom-stack-grafana-77d4fb5b7b-mktn7 -n monitoring
 9083* kubectl describe pods kube-prom-stack-grafana-77d4fb5b7b-mktn7 -n monitoring 
 9084* kubectl delete deploy kube-prom-stack-grafana
 9085* kubectl get configmap
 9086* kubectl delete configmap kube-prom-stack-grafana
 9087* kubectl get sts -n monitoring
 9088* kubectl get pv -n monitoring
 9089* kubectl delete pvc pvc-debe6ff5-14bc-41ea-a084-ef2f5018737f
 9090* kubectl delete pv pvc-debe6ff5-14bc-41ea-a084-ef2f5018737f
 9091* kubectl delete pvc kube-prom-stack-grafana
 9092* kubectl get pvc -n monitoring
 9093* ls
 9094* kubectl get daemonsets -n monitoring
 9095* helm install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9096* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9097* kubectl get pvc
 9098* kubectl describe pv kube-prom-stack-grafana
 9099* kubectl describe pvc kube-prom-stack-grafana
 9100* kubectl get pods -n monitoring
 9101* kubectl get svc
 9102* kubectl get pvc
 9103* helm show values prometheus-community/kube-prometheus-stack > Default-Values-Stack.yaml
 9104* kubectl delete pvc kube-prom-stack-grafana
 9105* kubectl delete deploy kube-prom-stack-grafana
 9106* kubectl delete daemonset kube-prom-stack-grafana
 9107* kubectl delete configmap kube-prom-stack-grafana
 9108* kubectl get pv
 9109* kubectl delete pv kube-prom-stack-grafana
 9110* celar
 9111* kubectl get pv | grep -i bound
 9112* kubectl get pvc | grep -i bound
 9113* clear
 9114* kubectl gte pods
 9115* clear
 9116* kubectl get pods
 9117* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9118* kubecctl get pv
 9119* kubectl get pv
 9120* kubectl delete pvc pvc-d187fc44-6ad4-4803-84b5-df2c1b188c62
 9121* kubectl get pods
 9122* kubectl delete pod kube-prom-stack-grafana-77d4fb5b7b-v9kpf
 9123* kubectl get pods
 9124* kubectl describe pod kube-prom-stack-grafana-77d4fb5b7b-mzrjv
 9125* kubectl delete deploy kube-prom-stack-grafana
 9126* kubectl delete configmap kube-prom-stack-grafana
 9127* kubectl get pv
 9128* kubectl delete pv kube-prom-stack-grafana
 9129* kubectl delete pv kube-prom-stack-grafana -n monitoring
 9130* kubectl delete pvc pvc-a1ce1390-b824-4758-9db6-89c9f36173d4
 9131* kubectl delete pvc pvc-a1ce1390-b824-4758-9db6-89c9f36173d4 -n monitoring
 9132* kubectl get pv
 9133* kubectl get daemonsets -n monitoring
 9134* kubectl delete pvc stack-pvc-alertmanager
 9135* kubectl delete pvc stack-pvc-alertmanager stack-pvc-grafana stack-pvc-prometheus stack-pvc-tempo
 9136* kubectl get pvc
 9137* kubectl delete pvc kube-prom-stack-grafana -n monitoring
 9138* kubectl get pv
 9139* kubectl delete pv pvc-825571fb-9d1f-4c27-b5f0-8f3d171b53d1
 9140* kubectl delete pv pvc-a1ce1390-b824-4758-9db6-89c9f36173d4
 9141* kubectl delete pv pvc-d187fc44-6ad4-4803-84b5-df2c1b188c62
 9142* clear
 9143* kubectl gte pv
 9144* kubectl get pv
 9145* helm list -A
 9146* helm uninstall tempo
 9147* helm uninstall loki
 9148* helm uninstall kube-prom-stack
 9149* kubectl get all -n monitoring
 9150* kubectl get pv
 9151* kubectl delete pv pvc-ded59820-0c7d-4bff-8b2c-a584d0d99293
 9152* kubectl delete pv pvc-ee6cd34e-9650-4632-9a0a-37a5d3f76212
 9153* kubectl get pvc
 9154* kubectl delete pvc stack-pvc-prometheus-prometheus-kube-prom-stack-kube-prome-prometheus-0
 9155* kubectl delete pvc storage-tempo-0
 9156* kubectl get pvc
 9157* kubectl get pvc -n monitoring
 9158* kubectl get pvc
 9159* kubectl get pv
 9160* kubectl delete pv stack-pvc-alertmanager
 9161* kubectl delete pv stack-pvc-grafana
 9162* kubectl delete pv stack-pvc-prometheus
 9163* kubectl delete pv stack-pvc-tempo
 9164* kubectl get all -n monitoring
 9165* kubectl get pvc -n monitoring
 9166* kubectl get pv
 9167* kubectl get pv -n monitoring
 9168* clear
 9169* kubectl get sc
 9170* ls
 9171* kubectl apply -f stack-pv-alertmanager.yaml
 9172* kubectl apply -f stack-pv-prometheus.yaml -f stack-pv-grafana.yaml -f stack-pv -tempo
 9173* kubectl apply -f stack-pv-prometheus.yaml -f stack-pv-grafana.yaml -f stack-pv-tempo.yaml
 9174* kubectl get pv
 9175* kubectl apply -f stack-pvc-prometheus.yaml -f stack-pvc-grafana.yaml -f stack-pvc-tempo.yaml -f stack-pvc-alertmanager.yaml
 9176* clear
 9177* kubectl get pvc
 9178* kubectl get pv
 9179* kubectl get pvc
 9180* kubectl get pv
 9181* clear
 9182* helm install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9183* kubectl get pods -w
 9184* history | grep "helm install"
 9185* helm upgrade --install loki grafana/loki-stack --version 2.10.2 -f loki-value.yaml -n monitoring
 9186* helm upgrade --install loki grafana/loki-stack --version 2.10.2 -f loki-values.yaml -n monitoring
 9187* history | grep tempo
 9188* history | grep "grafana/tempo"
 9189* helm upgrade -f tempo-values.yaml --install tempo grafana/tempo -n monitoring
 9190* kubectl get pods -n monitoring
 9191* kubectl get svc
 9192* kuebctl get pv
 9193* kubectl get pv
 9194* kubectl describe pv pvc-5d968959-af7c-4d16-9a6b-d0d6581a281c
 9195* ls /opt/local-path-provisioner
 9196* ls /mnt/data/grafana/
 9197* ls /mnt/data/prometheus/
 9198* ls /mnt/data/tempo/
 9199* clear
 9200* kubectl get pods
 9201* kubectl describe pod kube-prom-stack-grafana-64774f5954-kn4nn
 9202* kubectl delete pod kube-prom-stack-grafana-64774f5954-kn4nn
 9203* kubectl get pods
 9204* kubectl gte ns
 9205* clear
 9206* kubectl get ns
 9207* kubectl get pods -n local-path-storage
 9208* kubectl get deplloy -n local-path-storage
 9209* kubectl get deploy -n local-path-storage
 9210* kubectl describe deploy -n local-path-storage
 9211* kubectl get all -n local-path-storage
 9212* kubectl get sts -n local-path-storage
 9213* kubectl get configmap -n local-path-storage
 9214* kubectl get daemonsets -n local-path-storage
 9215* kubectl get deploy local-path-provisioner -n local-path-storage -o yaml > local-path-provisioner.yml
 9216* kubectl get configmap local-path-config -n local-path-storage -o yaml > local-path-config.yaml
 9217* kubectl get crd -n local-path-storage
 9218* clear
 9219* kubectl get all -n local-path-storage
 9220* kubectl get configmap local-path-config -n local-path-storage -o yaml > local-path-config.yaml
 9221* clear
 9222* kubectl gte pods
 9223* kubectl get pods
 9224* kubectl get svc
 9225* clear
 9226* kubectl get pods
 9227* mkdir app-template
 9228* cd app-template
 9229* mcirok8s status
 9230* microk8s status
 9231* helm --help
 9232* helm create
 9233* helm create fieb-template-chart
 9234* ls fieb-template-chart
 9235* cd fieb-template-chart/
 9236* ls
 9237* code .
 9238* cd ..
 9239* ls
 9240* git status
 9241* git add .\ngit commit -m "Ajustes de sábado"
 9242* git push origin main
 9243* git status
 9244* git remote -v
 9245* git remote add origin git@github.com:carlosleosouza/stack_observability.git
 9246* ls -a
 9247* git branch -M main\ngit add .
 9248* git commit -m "Initial commit"
 9249* git add .
 9250* git push -u origin main
 9251* kubectl get pods
 9252* kubectl describe pod kube-prom-stack-grafana-64774f5954-f6zgp
 9253* kubectl logs -f kube-prom-stack-grafana-77d4fb5b7b-zntp4 -n monitoring
 9254* kubectl logs -f kube-prom-stack-grafana-64774f5954-f6zgp
 9255* kubectl delete pod kube-prom-stack-grafana-64774f5954-f6zgp
 9256* kubectl get pods
 9257* kubectl get pods -n monitoring -w
 9258* ls
 9259* kubectl get pods -n local-path-storage
 9260* kubectl get pods
 9261* kubectl get deploy kube-prom-stack-grafana -o yaml
 9262* ls
 9263* cat Prometheus-stack-values.yaml
 9264* kubectl get pods
 9265* kubectl scale deploy kube-prom-stack-grafana --replicas=0
 9266* kubectl get pods
 9267* kubectl scale deploy kube-prom-stack-grafana --replicas=0
 9268* kubectl delete pod kube-prom-stack-grafana-64774f5954-f6zgp --grace-period=0
 9269* kubectl get pods
 9270* kubectl get configmap
 9271* kubectl get daemonsets
 9272* kubectl get configmap
 9273* kubectl describe configmap kube-prom-stack-grafana
 9274* kubectl get daemonsets
 9275* kubectl get pv
 9276* kubectl get pvc -n monitoring
 9277* kubectl scale deploy kube-prom-stack-grafana --replicas=1
 9278* kubectl get pods 
 9279* kubectl debug -it kube-prom-stack-grafana-64774f5954-54jxb --image=busybox --target=kube-prom-stack-grafana
 9280* kubectl debug -it kube-prom-stack-grafana-64774f5954-54jxb --image=busybox
 9281* kubectl get pods
 9282* kubectl get pods -n default
 9283* kubectl get pods
 9284* kubectl describe deploy kube-prom-stack-grafana 
 9285* kubectl debug -it kube-prom-stack-grafana-64774f5954-54jxb --image=busybox --target=grafana -n monitoring
 9286* kubectl debug -it kube-prom-stack-grafana-64774f5954-54jxb --image=busybox --target=grafana-sc-datasources -n monitoring
 9287* kubectl debug -it kube-prom-stack-grafana-64774f5954-54jxb --image=busybox --target=grafana-sc-dashboards -n monitoring
 9288* ls
 9289* vim Prometheus-stack-values.yaml
 9290* kubectl get pods
 9291* ls
 9292* cat local-path-config.yaml
 9293* kubectl get pods
 9294* helm show values prometheus-community/prometheus-blackbox-exporter > blackbox-default-values.yaml
 9295* cat blackbox-default-values.yaml
 9296* code .
 9297* helm install black prometheus-community/prometheus-blackbox-exporter --values blackbox-default-values.yaml
 9298* kubectl get all
 9299* kubectl get pods -n kube-system
 9300* microk8s status
 9301* microk8s enable metrics-server
 9302* kubectl top nodes
 9303* kubectl get pods -n kube-system
 9304* curl -s --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \\n     --header "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \\n     https://127.0.0.1:10250/stats/summary\n
 9305* curl -k --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \\n     -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" \\n     https://127.0.0.1:10250/metrics/cadvisor\n
 9306* https://127.0.0.1:10250/metrics/cadvisor
 9307* curl -k --cert /var/snap/microk8s/current/certs/server.crt \\n         --key /var/snap/microk8s/current/certs/server.key \\n     https://127.0.0.1:10250/metrics/cadvisor\n
 9308* curl -k https://127.0.0.1:10250/metrics/cadvisor\n
 9309* curl -k https://127.0.0.1:10250/metrics/cadvisor --certs=/var/snap/microk8s/current/certs/server.cr
 9310* curl -k https://127.0.0.1:10250/metrics/cadvisor --certs=/var/snap/microk8s/current/certs/server.crt
 9311* clear
 9312* microk8s kubectl proxy &\n
 9313* curl http://localhost:8001/api/v1/nodes/$\(hostname\)/proxy/metrics/cadvisor\n
 9314* curl http://localhost:8001/api/v1/nodes/Leo-Vostro/proxy/metrics/cadvisor
 9315* vim svc_monitor_prom.yaml
 9316* vim svc_kubelete.yaml
 9317* vim svc_monitor_prom.yaml
 9318* vim svc_kubelete.yaml
 9319* vim svc_monitor_prom.yaml
 9320* ls
 9321* kubectl apply -f svc_kubelete.yaml -f svc_monitor_prom.yaml
 9322* kubectl get svc -n kube-system
 9323* kubectl get servicemonitor -n kube-system
 9324* kubectl get pods -n kube-system
 9325* kubectl get servicemonitor
 9326* vim coleta-du-cronjob.yaml
 9327* kubectl apply -f coleta-du-cronjob.yaml
 9328* vim Prometheus-stack-values.yaml
 9329* ls
 9330* vim Default-Values-Stack.yaml
 9331* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stack-values.yaml
 9332* vim Prometheus-stack-values.yaml
 9333* cat Prometheus-stack-values.yaml
 9334* helm upgrade kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f Prometheus-stk-values.yaml
 9335* kubectl get pods
 9336* kubectl describe pod black-prometheus-blackbox-exporter-54cfcb5d87-prpgc
 9337* kubectl logs -f black-prometheus-blackbox-exporter-54cfcb5d87-prpgc
 9338* ip --br a
 9339* ip --br a | grep UP
 9340* hostname -I
 9341* sudo vim /var/snap/microk8s/current/args/kubelet
 9342* sudo microk8s start
 9343* kubectl get all --all-namespaces > backup_cluster.yaml
 9344* cat backup_cluster.yaml
 9345* kubectl get all --all-namespaces -o yaml > backup_cluster.yaml
 9346* cat backup_cluster.yaml
 9347* kubectl get nodes -o wide
 9348* sudo cp -r /var/snap/microk8s/current/certs /var/snap/microk8s/current/certs.bak\n
 9349* sudo vim /var/snap/microk8s/current/args/kube-apiserver
 9350* microk8s stop
 9351* sudo cat /var/snap/microk8s/current/args/kubelet
 9352* cat sudo nano /var/snap/microk8s/current/args/kubelet\n
 9353* cat /var/snap/microk8s/current/args/kube-apiserver
 9354* sudo rm -rf /var/snap/microk8s/current/certs/*
 9355* sudo microk8s start\n
 9356* sudo microk8s status
 9357* sudo microk8s start
 9358* git status
 9359* git add .
 9360* code .
 9361* git add .
 9362* git commit -m "update"
 9363* git push -u origin main
 9364* git status
 9365* ls
 9366* git remote -v
 9367* git add stack-observability/kube-prometheus
 9368* git commit -m "Update kube-prometheus"
 9369* git add stack-observability/kube-prometheus
 9370* git commit -m "Update kube-prometheus"
 9371* git push -u origin main
 9372* clear
 9373* sudo microk8s status
 9374* microk8s inspect
 9375* sudo systemctl restart docker
 9376* sudo systemctl status docker
 9377* vim /etc/docker/daemon.json
 9378* sudo vim /etc/docker/daemon.json
 9379* sudo systemctl status docker
 9380* sudo systemctl restart docker
 9381* sudo systemctl status docker
 9382* touch /var/snap/microk8s/8205/var/kubernetes/backend/localnode.yaml
 9383* vim /etc/hostname
 9384* sudo vim /etc/hostname
 9385* microk8s inspect
 9386* microk8s refresh-certs
 9387* sudo microk8s refresh-certs
 9388* sudo microk8s refresh-certs --cert ca.crt
 9389* sudo microk8s refresh-certs --cert front-proxy-client.crt
 9390* sudo microk8s refresh-certs --cert ca.crt
 9391* sudo microk8s start
 9392* sudo systemctl restart snap.microk8s.daemon-cluster-agent.service
 9393* systemctl status snap.microk8s.daemon-cluster-agent.service
 9394* journalctl -u snapd.service
 9395* sudo systemctl restart  snapd.service
 9396* sudo systemctl status snapd.service
 9397* reboot
 9398* sudo systemctl status snap.microk8s.daemon-cluster-agent.service
 9399* sudo systemctl restart snap.microk8s.daemon-cluster-agent.service
 9400* sudo systemctl status snap.microk8s.daemon-cluster-agent.service
 9401* journalctl -u snap.microk8s.daemon-cluster-agent.service -n 50
 9402* microk8s status
 9403* microk8s inspect
 9404* sudo apt update && sudo apt install warp-terminal && warp_finish_update GOorHIq
 9405* journalctl -u snap.microk8s.daemon-cluster-agent.service -n 50
 9406* cd /var/snap/microk8s/8205/certs/
 9407* ls
 9408* cd -
 9409* ls
 9410* microk8s inspect
 9411* sudo apt update && sudo apt upgrade && sudo apt dist-upgrade && sudo apt full-upgrade -y
 9412* sudo microk8s status
 9413* sudo microk8s start
 9414* microk8s status
 9415* microk8s reset
 9416* sudo microk8s reset
 9417* sudo microk8s s
 9418* sudo microk8s 
 9419* sudo microk8s refresh-certs
 9420* sudo microk8s leave
 9421* sudo microk8s reset
 9422* sudo snap 
 9423* sudo snap refresh microk8s
 9424* sudo cp -r /var/snap/microk8s/current/certs.bak /var/snap/microk8s/current/certs
 9425* sudo microk8s refresh-certs --cert server.crt
 9426* ls /var/snap/microk8s/current/
 9427* ls /var/snap/microk8s/current/certs
 9428* ls /var/snap/microk8s/current/certs.bak/
 9429* microk8s refresh-certs --cert ca.crt
 9430* sudo microk8s start
 9431* sudo microk8s status
 9432* sudo microk8s inspect
 9433* sudo microk8s start
 9434* microk8s status
 9435* microk8s start
 9436* microk8s status
 9437* microk8s start
 9438* microk8s status
 9439* sudo microk8s inspect
 9440* sudo journalctl -u snap.microk8s.daemon-cluster-agent
 9441* sudo systemctl status snap.microk8s.daemon-cluster-agent.service
 9442* sudo systemctl restart snap.microk8s.daemon-cluster-agent.service
 9443* sudo systemctl status snap.microk8s.daemon-cluster-agent.service
 9444* sudo journalctl -u snap.microk8s.daemon-kubelite
 9445* ip6tables-restore
 9446* sudo ip6tables-restore
 9447* sudo microk8s reset
 9448* snap install microk8s --classic --channel=1.33/stable
 9449* snap uninstall microk8s 
 9450* snap remove microk8s
 9451* sudo microk8s status
 9452* snap install microk8s --classic --channel=1.33/stable
 9453* sudo microk8s status
 9454* sudo microk8s start
 9455* sudo microk8s status
 9456* microk8s enable metrics-server
 9457* sudo apt update && sudo apt upgrade && sudo apt dist-upgrade && sudo apt full-upgrade -y
 9458* /sbin/ModemManager    
 9459* microk8s status
 9460* microk8s enable hostpath-storage
 9461* microk8s status
 9462* kubectl get pods -A
 9463* microk8s kubectl config
 9464* microk8s kubectl config view > ~/.kube/config
 9465* alias kubectl='microk8s kubectl'
 9466* kubectl get pods -A
 9467* kubectl get all --all-namespaces
 9468* ls
 9469* cat Prometheus-stack-values.yaml
 9470* sudo flatpak install flathub com.google.Chrome
 9471* clear
 9472* ls
 9473* vim prometheusstk-values.yaml
 9474* kubectl get pv
 9475* kubectl get pvc
 9476* microk8s status
 9477* sudo export KUBECONFIG=~/.kube/config
 9478* export
 9479* kuebctl config view 
 9480* kubectl config view
 9481* kuebctl config view > ~/.kube/config
 9482* kubectl config view > ~/.kube/config
 9483* sudo export KUBECONFIG=~/.kube/config
 9484* export KUBECONFIG=~/.kube/config
 9485* kubectl get pods
 9486* ls ~/.kube
 9487* rm -rf ~/.kube/*
 9488* microk8s status
 9489* kuebctl config view > ~/.kube/config
 9490* kubectl config view > ~/.kube/config
 9491* sudo export KUBECONFIG=~/.kube/config
 9492* export KUBECONFIG=~/.kube/config
 9493* kubectl get pods
 9494* ls /var/snap/microk8s/current/c
 9495* ls /var/snap/microk8s/current/
 9496* cat /var/snap/microk8s/current/credentials/client.config > ~/.kube/config
 9497* export KUBECONFIG=~/.kube/config
 9498* kubectl get pods
 9499* ls
 9500* cat local-path-config.yaml   
 9501* vim local-path-config.yaml
 9502* ls
 9503* cat local-path-config.yaml
 9504* cat local-path-provisioner.yml
 9505* kubectl apply -f local-path-config -f local-path-provisioner.yml
 9506* cat local-path-provisioner.yml
 9507* ls /mnt/data/
 9508* kubectl apply -f local-path-config.yaml
 9509* kubectl create namespace local-path-storage
 9510* kubectl apply -f local-path-config -f local-path-provisioner.yml
 9511* kubectl apply -f local-path-config.yaml
 9512* kubectl apply -f local-path-provisioner.yml
 9513* clear
 9514* kubectl get pods -n local-path-storage
 9515* kubectl get all -n local-path-storage
 9516* clear
 9517* ls
 9518* ls prometheusstk-values.yaml
 9519* cat prometheusstk-values.yaml
 9520* kubectl get all -n monitoring
 9521* kubectl create namespace monitoring
 9522* kubectl get all -n monitoring
 9523* kubectl get all -n local-path-storage
 9524* kubectl get pods -n local-path-storage
 9525* kubectl describe deploy local-path-provisioner -n local-path-storage
 9526* vim local-path-config.yaml
 9527* kubectl apply -f local-path-config -f local-path-provisioner.yml
 9528* ls
 9529* kubectl apply -f local-path-config.yaml 
 9530* kubectl apply -f local-path-provisioner.yaml
 9531* kubectl apply -f local-path-provisioner.yml
 9532* kubectl delete -f local-path-config -f local-path-provisioner.yml
 9533* kubectl delete -f local-path-config.yaml -f local-path-provisioner.yaml
 9534* kubectl delete -f local-path-config.yaml -f local-path-provisioner.yml
 9535* kubectl apply -f local-path-config.yaml -f local-path-provisioner.yml
 9536* kubectl get pods -n local-path-storage
 9537* kubectl get all -n local-path-storage
 9538* ls
 9539* kubectl apply -f stack-sc.yaml
 9540* cp /dev/null prometheusstk-values.yaml
 9541* vim prometheusstk-values.yaml
 9542* helm upgrade --install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f prometheusstk-values.yaml
 9543* ls
 9544* kubectl apply -f stack-pv-grafana.yaml -f stack-pv-prometheus.yaml -f stack-pv-tempo.yaml
 9545* kubectl get pvc
 9546* kubectl get pvc -n monitoring
 9547* kubectl get pv
 9548* kubectl edit pvc kube-prom-stack-grafana -n monitoring
 9549* vim prometheusstk-values.yaml
 9550* helm upgrade --install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f prometheusstk-values.yaml
 9551* kubectl get pvc -n monitoring
 9552* kubectl delete pvc kube-prom-stack-grafana -n monitoring
 9553* helm upgrade --install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f prometheusstk-values.yaml
 9554* kubectl get pvc -n monitoring
 9555* kubectl get pv -n monitoring
 9556* kubectl get all -n monitoring
 9557* kubectl get pods -n local-path-storage
 9558* ls /opt/local-path-provisioner
 9559* kubectl get all -n monitoring
 9560* ls
 9561* kubectl apply -f stack-pv-alertmanager.yaml -f stack-pv-grafana.yaml -fstack-pv-tempo.yaml -f stack-pv-prometheus.yaml
 9562* kubectl get all -n monitoring
 9563* kubectl get sc
 9564* ls /opt/local-path-provisioner
 9565* kubectl get all -n local-path-storage
 9566* kubectl kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.31/deploy/local-path-storage.yaml
 9567* kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.31/deploy/local-path-storage.yaml
 9568* kubectl get all -n local-path-storage
 9569* kubectl get all -n default
 9570* kubectl get all -n local-path-storage
 9571* kubectl get all -n monitoring
 9572* kubectl get all -n monitoring -w
 9573* kubectl get pod -n monitoring 
 9574* kubectl get pv
 9575* kubectl delete pv stack-pv-alertmanager
 9576* kubectl delete pv stack-pv-grafan
 9577* kubectl delete pv stack-pv-grafana
 9578* kubectl delete pv stack-pv-prometheus
 9579* kubectl delete pv stack-pv-tempo
 9580* clear
 9581* kubectl get pv
 9582* kubectl get pvc -n monitoring
 9583* clear
 9584* ls
 9585* helm install black prometheus-community/prometheus-blackbox-exporter --values blackbox-default-values.yaml
 9586* vim loki-values.yaml
 9587* helm install --upgrade loki grafana/loki -f loki-values.yaml
 9588* helm install loki grafana/loki -f loki-values.yaml
 9589* helm upgrade --install loki --version 2.6.5 --namespace monitoring grafana/loki-stack
 9590* helm upgrade --install loki --version 2.6.5 --namespace monitoring grafana/loki-stack -f loki-values.yaml
 9591* helm upgrade --install loki grafana/loki -f loki-values.yaml -n monitoring
 9592* vim loki-values.yaml
 9593* helm upgrade --install loki grafana/loki -f loki-values.yaml -n monitoring
 9594* vim loki-values.yaml
 9595* ls
 9596* touch values-loki.yaml
 9597* vim values-loki.yaml
 9598* helm upgrade --install loki grafana/loki -f values-loki.yaml -n monitoring
 9599* cp /dev/null values-loki.yaml
 9600* vim values-loki.yaml
 9601* helm upgrade --install loki grafana/loki-stack --version 2.6.5 --namespace monitoring -f values-loki.yaml\n
 9602* cd ~/Downloads/anydesk-7.0.0/
 9603* chmod +x install.sh
 9604* ./install.sh
 9605* ./install.sh --install
 9606* cd -
 9607* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 9608* cd ..
 9609* ls
 9610* ls ..
 9611* mkdir PUCMINAS
 9612* cd PUCMINAS
 9613* ls ~/.ssh
 9614* git@github.com:carlosleosouza/pucminas-ep.git
 9615* echo "# pucminas-ep" >> README.md\ngit init\ngit add README.md\ngit commit -m "first commit"\ngit branch -M main\ngit remote add origin git@github.com:carlosleosouza/pucminas-ep.git\ngit push -u origin main
 9616* microk8s status
 9617* ls
 9618* history | grep "grafana/tempo"
 9619* kubectl get pods -n monitoring 
 9620* kubectl describe pod kube-prom-stack-grafana-77d4fb5b7b-fckn4 -n monitoring
 9621* kubectl get pods -n monitoring
 9622* cd ..
 9623* ls
 9624* cd microk8s-edge-lab
 9625* ls
 9626* cat prometheusstk-values.yaml
 9627* cat prometheusstk-values.yaml | grep init
 9628* cat Prometheus-stack-values.yaml | grep init
 9629* vim prometheusstk-values.yaml
 9630* vim Prometheus-stack-values.yaml
 9631* vim prometheusstk-values.yaml
 9632* helm upgrade --install kube-prom-stack prometheus-community/kube-prometheus-stack -n monitoring -f prometheusstk-values.yaml
 9633* kubectl get pods -n monitoring
 9634* kubectl get pods -n observability
 9635* kubectl get pods -n monitoring
 9636* kubectl delete pod kube-prom-stack-grafana-77d4fb5b7b-fckn4 --grace-period=0
 9637* kubectl get pods -n monitoring
 9638* kubectl get svc
 9639* kubectl get svc -n default
 9640* kubectl get svc -n monitoring
 9641* kubectl get pods
 9642* kubectl delete svc black-prometheus-blackbox-exporter
 9643* ls
 9644* cat blackbox-default-values.yaml
 9645* clear
 9646* ls
 9647* vim blackbox-default-values.yaml
 9648* cp blackbox-default-values.yaml blackbox-values.yaml
 9649* vim blackbox-values.yaml
 9650* kubectl get pods
 9651* kubectl get svc -n default
 9652* kubectl delete pods black-prometheus-blackbox-exporter-54cfcb5d87-zlv9j -n monitoring
 9653* kubectl delete pods black-prometheus-blackbox-exporter-54cfcb5d87-zlv9j -n observability
 9654* kubectl get ns
 9655* kubectl delete pods black-prometheus-blackbox-exporter-54cfcb5d87-zlv9j -n monitoring
 9656* kubectl get pods -n monitoring
 9657* microk8s status
 9658* microk8s disable observability
 9659* microk8s status
 9660* microk8s disable observability
 9661* kubectl get pods -n monitoring
 9662* helm list -A
 9663* helm uninstall kube-prom-stack
 9664* helm uninstall kube-prom-stack -n monitoring
 9665* helm uninstall black -n default
 9666* helm list -A
 9667* kubectl get pods -n monitoring
 9668* kubectl get pods -n observability
 9669* kubectl get ns
 9670* kubectl get all -n monitoring 
 9671* kubectl delete ns monitoring
 9672* echo $SNAP
 9673* ls
 9674* kubectl get pvc
 9675* kubectl get pv
 9676* kubectl get sc
 9677* kubectl get ns
 9678* helm upgrade -n observability --create-namespace kube-prom-stack kube-prometheus-stack --repo https://prometheus-community.github.io/helm-charts --kube-prometheus-stack-values=Prometheus-stack-values.yaml
 9679* kubectl get endpoints --al-namespace
 9680* kubectl get endpoints --all-namespace
 9681* kubectl get endpoints --all-namespaces
 9682* kubectl get nodes -o jsonpath={.items[*].status.addresses[?\(@.type==\"InternalIP\"\)].address}
 9683* ls/
 9684* ls /snap/
 9685* vim observability.sh
 9686* chmod +x observability.sh
 9687* ls
 9688* ./enable-observability.sh \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-prometheus-stack-version=71.0.0 \\n  --loki-stack-values=valuesloki.yaml \\n  --loki-stack-version=3.0.0 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=2.0.0 \\n  --without-tempo
 9689* ./observability.sh \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-prometheus-stack-version=71.0.0 \\n  --loki-stack-values=valuesloki.yaml \\n  --loki-stack-version=3.0.0 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=2.0.0 \\n  --without-tempo
 9690* ls /snap/microk8s/current/actions/common/
 9691* vim /snap/microk8s/current/actions/common/utils.sh
 9692* export SNAP=/snap/microk8s/current
 9693* echo $SNAP
 9694* ./observability.sh \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-prometheus-stack-version=71.0.0 \\n  --loki-stack-values=valuesloki.yaml \\n  --loki-stack-version=3.0.0 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=2.0.0 \\n  --without-tempo
 9695* vim /snap/microk8s/current/actions/common/utils.sh
 9696* ./observability.sh \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-prometheus-stack-version=71.0.0 \\n  --loki-stack-values=valuesloki.yaml \\n  --loki-stack-version=3.0.0 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=2.0.0 \\n  --without-tempo
 9697* ls /usr/bin/
 9698* ls /usr/bin/ | morew
 9699* ls /usr/bin/ | more
 9700* /usr/bin/env
 9701* env
 9702* vim /snap/microk8s/current/actions/common/utils.sh
 9703* vim
 9704* source ~/.zshrc
 9705* vim /snap/microk8s/current/actions/common/utils.sh
 9706* sudo vim /snap/microk8s/current/actions/common/utils.sh
 9707* sudo su]
 9708* sudo su
 9709* source ~/.zshrc
 9710* echo $SNAP
 9711* sudo ./observability.sh \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-prometheus-stack-version=71.0.0 \\n  --loki-stack-values=valuesloki.yaml \\n  --loki-stack-version=3.0.0 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=2.0.0 \\n  --without-tempo
 9712* microk8s enable observability \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-prometheus-stack-version=71.0.0 \\n  --loki-stack-values=valuesloki.yaml \\n  --loki-stack-version=3.0.0 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=2.0.0\n
 9713* microk8s disable observability
 9714* kubectl get ns
 9715* kubectl get pod -n observability
 9716* helm list -A
 9717* helm uninstall kube-prom-stack
 9718* helm list -A
 9719* helm uninstall kube-prom-stack
 9720* helm uninstall kube-prom-stack -n observability
 9721* helm list -A
 9722* kubectl get pod -n observability
 9723* kubectl get ns
 9724* kubectl get pod -n observability
 9725* kubectl delete ns observability
 9726* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 9727* ls
 9728* code tempo-values.yaml
 9729* microk8s enable observability \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-prometheus-stack-version=73.2.0 \\n  --loki-stack-values=valuesloki.yaml \\n  --loki-stack-version=2.10.2 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=1.2.1
 9730* microk8s disable observability
 9731* helm uninstall kube-prom-stack -n observability
 9732* kubectl get pods -n observability
 9733* kubectl get ns
 9734* kubectl delete ns observability
 9735* microk8s enable observability \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-pro\n  --loki-stack-values=valuesloki.yaml \\n  --tempo-values=tempo-values.yaml
 9736* kubectl get ns
 9737* microk8s enable observability \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --loki-stack-values=valuesloki.yaml \\n  --tempo-values=tempo-values.yaml
 9738* microk8s enable observability \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --tempo-values=tempo-values.yaml
 9739* kubectl get pods -n observability
 9740* microk8s disable observability
 9741* helm uninstall kube-prom-stack -n observability
 9742* helm list -A
 9743* kubectl get pods -n observability
 9744* kubectl delete ns observability
 9745* microk8s enable observability \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml 
 9746* kubectl get pods -n observability
 9747* kubectl get pvc -n observability
 9748* kubectl get svc -n observability
 9749* export POD_NAME=$(kubectl --namespace observability get pod -l "app.kubernetes.io/name=grafana,app.kubernetes.io/instance=kube-prom-stack" -oname)\n  kubectl --namespace observability port-forward $POD_NAME 3000
 9750* kubectl --namespace observability get secrets kube-prom-stack-grafana -o jsonpath="{.data.admin-password}" | base64 -d ; echo
 9751* kubectl get pods -n observability
 9752* cta prometheusstk-values.yaml
 9753* cat prometheusstk-values.yaml
 9754* code prometheusstk-values.yaml
 9755* helm show values grafana/loki-stack > loki-stack-values.yaml
 9756* code loki-stack-values.yaml
 9757* kubectl get pods -n observability
 9758* microk8s disable observability
 9759* kubectl get ns
 9760* microk8s status
 9761* microk8s enable observability \\n  --kube-prometheus-stack-values=prometheusstk-values.yaml \\n  --kube-prometheus-stack-version=73.2.0 \\n  --loki-stack-values=loki-stack-values.yaml \\n  --loki-stack-version=2.10.2 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=1.21.1
 9762* kubectl --namespace observability get secrets kube-prom-stack-grafana -o jsonpath="{.data.admin-password}" | base64 -d ; echo
 9763* export POD_NAME=$(kubectl --namespace observability get pod -l "app.kubernetes.io/name=grafana,app.kubernetes.io/instance=kube-prom-stack" -oname)\n  kubectl --namespace observability port-forward $POD_NAME 3000
 9764* kubectl get svc -n observability
 9765* kubectl logs -f loki-0 -n observability
 9766* kubectl get pods -n observability
 9767* microk8s disable observability
 9768* helm list -A
 9769* microk8s enable observability
 9770* helm list -A
 9771* helm get values kube-prom-stack -n observability --output yaml
 9772* microk8s status
 9773* kubectl get pods -A
 9774* kubectl describe pod loki-0 -n observability
 9775* kubectl get pods -n kube-system | grep calico
 9776* kubectl describe pod loki-0 -n observability
 9777* kubectl get pods -n observability
 9778* kubectl get svc
 9779* kubectl get svc -n observability
 9780* kubectl get pods
 9781* kubectl get pods -n observability
 9782* kubectl describe pod kube-prom-stack-grafana-69d45887b7-zhzfx -n observability
 9783* vim prom-stack-values.yaml
 9784* kubectl get sc
 9785* vim prom-stack-values.yaml
 9786* ls
 9787* vim Prometheus-stack-values.yaml
 9788* vim prom-stack-values.yaml
 9789* microk8s enable observability \\n  --kube-prometheus-stack-values=prom-stack-values.yaml \\n  --kube-prometheus-stack-version=73.2.0 \\n  --loki-stack-values=loki-stack-values.yaml \\n  --loki-stack-version=2.10.2 \\n  --tempo-values=tempo-values.yaml \\n  --tempo-version=1.21.1
 9790* helm upgrade -n observability kube-prom-stack kube-prometheus-stack --repo https://prometheus-community.github.io/helm-charts --reuse-values -f prom-stack-values.yaml
 9791* kubectl get pods
 9792* helm list -A
 9793* kubectl get pods -n observability
 9794* helm list -n observability\nhelm search repo prometheus-community/kube-prometheus-stack --versions
 9795* vim prom-stack-values.yaml
 9796* cat prom-stack-values.yaml
 9797* cp prom-stack-values.yaml prom-stack-values.yaml.backup
 9798* cp /dev/null prom-stack-values.yaml
 9799* vim prom-stack-values.yaml
 9800* # Atualizar sem reutilizar valores para ver o que quebra\nhelm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml --dry-run
 9801* cp /dev/null prom-stack-values.yaml
 9802* vim prom-stack-values.yaml
 9803* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml --dry-run
 9804* vim prom-stack-values.yaml
 9805* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml --dry-run
 9806* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml
 9807* cp /dev/null prom-stack-values.yaml
 9808* vim prom-stack-values.yaml
 9809* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml --dry-run
 9810* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml 
 9811* vim prom-stack-values.yaml
 9812* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml
 9813* kubectl get pods -n observability
 9814* kubectl --namespace observability get pods -l "release=kube-prom-stack"
 9815* kubectl --namespace observability get secrets kube-prom-stack-grafana -o jsonpath="{.data.admin-password}" | base64 -d ; echo
 9816* export POD_NAME=$(kubectl --namespace observability get pod -l "app.kubernetes.io/name=grafana,app.kubernetes.io/instance=kube-prom-stack" -oname)\n  kubectl --namespace observability port-forward $POD_NAME 3000
 9817* kubectl get svc
 9818* kubectl get svc -n observability
 9819* history | grep loki
 9820* helm upgrade -n observability \\n  kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml \\n  -f loki-stack-values.yaml \\n  -f tempo-values.yaml 
 9821* helm upgrade -n observability \\n  kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml \\n  -f loki-stack-values.yaml \\n  -f tempo-values.yaml
 9822* kubectl --namespace observability get pods -l "release=kube-prom-stack"
 9823* kubectl --namespace observability get secrets kube-prom-stack-grafana -o jsonpath="{.data.admin-password}" | base64 -d ; echo
 9824* kubectl get pods
 9825* kubectl get pods -n observability
 9826* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml
 9827* kubectl get pods -n observability
 9828* kubectl get svc
 9829* kubectl get svc -n observability
 9830* kubectl
 9831* kubectl port-forward svc/kube-prom-stack-grafana 3000:80 -n observability
 9832* clear
 9833* kubectl get svc
 9834* kubectl get svc -n observability
 9835* kubectl describe svc loki -n observability
 9836* history | grep loki
 9837* ls
 9838* git checkout main
 9839* helm repo add grafana https://grafana.github.io/helm-charts
 9840* helm repo update
 9841* helm install loki-stack grafana/loki-stack -f loki-values.yaml --namespace observability --create-namespace
 9842* kubectl get pods -n observability | grep loki
 9843* kubectl get pods -n observability | grep loki -w
 9844* kubectl get svc -n observability | grep loki
 9845* cat loki-values.yaml
 9846* kubectl get pods -n observability | grep loki -o -w
 9847* kubectl logs loki-0 -n observability
 9848* kubectl logs loki-promtail-jf2z9 -n observability
 9849* kubectl get pods -n observability
 9850* kubectl get svc -n observability
 9851* kubectl get pods -n observability
 9852* kubectl delete pods kube-prom-stack-grafana-77d4fb5b7b-hp9ds -n observability
 9853* kubectl get pods -n observability
 9854* vim prom-stack-values.yaml
 9855* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml --dry-run
 9856* helm upgrade -n observability kube-prom-stack kube-prometheus-stack \\n  --repo https://prometheus-community.github.io/helm-charts \\n  -f prom-stack-values.yaml 
 9857* kubectl port-forward svc/kube-prom-stack-grafana 3000:80 -n observability
 9858* microk8s status
 9859* kubectl get pods -A
 9860* kubectl get svc -n observability
 9861* kubectl port-forward svc/prometheus-operated 9090:8088 -n observability
 9862* kubectl port-forward svc/prometheus-operated 9090:9090 -n observability
 9863* kubectl get svc
 9864* kubectl get svc -n observability
 9865* kubectl delete svc loki -n observability
 9866* kubectl delete svc loki-headless -n observability
 9867* kubectl delete svc loki-memberlist -n observability
 9868* kubectl get pods -n observability
 9869* kubectl delete pod loki-0 loki-promtail-jf2z9 -n observability
 9870* kubectl get pods -n observability
 9871* kubectl get deployments -n observability
 9872* kubectl get configmaps -n observability
 9873* kubectl get daemonset -n observability
 9874* kubectl delete daemonset loki-promtail -n observability
 9875* kubectl get all --all-namespaces | grep -i loki
 9876* kubectl delete sts loki -n observability
 9877* kubectl delete pod loki-0 -n observability
 9878* kubectl get pod -n observability
 9879* cat loki-values.yaml
 9880* cat lokivalues.yaml
 9881* ls loki
 9882* ls
 9883* ls *loki
 9884* cat values-loki
 9885* cat values-loki.yaml
 9886* ls
 9887* cat lokivalues.yaml
 9888* cat values-loki.yaml
 9889* # Verificar se Loki está rodando\ncurl http://localhost:3100/ready\n\n# Ver labels disponíveis diretamente na API\ncurl http://localhost:3100/loki/api/v1/labels\n\n# Ver series disponíveis\ncurl http://localhost:3100/loki/api/v1/series
 9890* # Verificar processos do Loki\nps aux | grep loki\n\n# Verificar se está rodando em outra porta\nnetstat -tlnp | grep loki\n# ou\nss -tlnp | grep loki\n\n# Verificar portas em uso\nnetstat -tlnp | grep :3100
 9891* # Verificar processos do Loki\nps aux | grep loki\n\n# Verificar se está rodando em outra porta\nsudo netstat -tlnp | grep loki\n# ou\nsudo ss -tlnp | grep loki\n\n# Verificar portas em uso\nsudo netstat -tlnp | grep :3100
 9892* # Verificar em qual porta o Loki está escutando\nsudo netstat -tlnp | grep loki\n\n# ou se não tiver netstat\nsudo ss -tlnp | grep loki\n\n# Verificar a configuração do Loki\nsudo cat /etc/loki/loki.yaml | grep -A5 -B5 "http_listen_port\|server:"
 9893* sudo netstat -tlnp | grep loki
 9894* sudo ss -tlnp | grep loki
 9895* sudo cat /etc/loki/loki.yaml | grep -A5 -B5 "http_listen_port\|server:"
 9896* # Listar port-forwards ativos\nps aux | grep "kubectl.*port-forward"\n\n# Se não houver, criar um port-forward\nkubectl port-forward svc/<nome-do-servico-loki> 3100:3100\n# ou\nkubectl port-forward pod/<nome-do-pod-loki> 3100:3100
 9897* kubectl get svc -n observability
 9898* # Listar port-forwards ativos\nps aux | grep "kubectl.*port-forward"\n\n# Se não houver, criar um port-forward\nkubectl port-forward svc/loki-stack 3100:3100\n# ou\nkubectl port-forward pod/loki-stack-0 3100:3100
 9899* # Listar port-forwards ativos\nps aux | grep "kubectl.*port-forward"\n\n# Se não houver, criar um port-forward\nkubectl port-forward svc/loki-stack 3100:3100 -n observability\n# ou\nkubectl port-forward pod/loki-stack-0 3100:3100 -n observability
 9900* cd UTILDISK/Cursos/LABs/microk8s-edge-lab
 9901* kubectl exec -it loki-stack-0 -- wget -qO- http://localhost:3100/ready
 9902* kubectl exec -it loki-stack-0 -n observability -- wget -qO- http://localhost:3100/ready
 9903* kubectl exec -it loki-stack-1 -n observability -- wget -qO- http://localhost:3100/ready
 9904* kubectl get pods
 9905* kubectl get pods -n observability
 9906* kubectl get svc -n observability | grep loki\nkubectl describe svc -n observability loki-stack
 9907* # Se Grafana estiver no mesmo namespace\nkubectl exec -n observability kube-prom-stack-grafana-64774f5954-cbz27 -- curl http://loki-stack:3100/ready\n\n# Ou teste com o service completo\nkubectl exec -n observability kube-prom-stack-grafana-64774f5954-cbz27 -- curl http://loki-stack.observability.svc.cluster.local:3100/ready
 9908* # Ver logs do Loki para verificar se está recebendo dados\nkubectl logs -n observability loki-stack-0 | tail -20\n\n# Verificar se há algum agente enviando logs (Promtail, Fluent Bit, etc.)\nkubectl get pods -n observability | grep -E "(promtail|fluent|log)"
 9909* # Ver labels disponíveis\nkubectl exec -n observability loki-stack-0 -- wget -qO- http://localhost:3100/loki/api/v1/labels\n\n# Ver series (streams de logs)\nkubectl exec -n observability loki-stack-0 -- wget -qO- http://localhost:3100/loki/api/v1/series\n\n# Verificar métricas do Loki\nkubectl exec -n observability loki-stack-0 -- wget -qO- http://localhost:3100/metrics | grep loki_ingester_streams
 9910* # Procurar por coletores de logs\nkubectl get pods -n observability -o wide\nkubectl get daemonset -n observability\nkubectl get deployment -n observability | grep -E "(promtail|fluent|log|agent)"
 9911* kubectl logs -n observability loki-stack-promtail-cq8hx | tail -20
 9912* kubectl get pods -n observability -o wide\nkubectl get daemonset -n observability\nkubectl get deployment -n observability
 9913* kubectl get svc -n observability | grep loki
 9914* kubectl get configmap -n observability | grep promtail
 9915* kubectl get sts -n observability | grep promtail
 9916* kubectl get deployment -n observability | grep promtail
 9917* kubectl get all -n observability | grep promtail
 9918* kubectl edit daemonset -n observability oki-stack-promtail
 9919* kubectl edit daemonset -n observability loki-stack-promtail
 9920* vim loki-values.yaml
 9921* history | grep loki-stack
 9922* helm upgrade loki-stack grafana/loki-stack -f loki-values.yaml --namespace observability --create-namespace
 9923* kubectl port-forward svc/loki-stack 3100:3100 -n observability
 9924* kubectl get all -n observability | grep promtail
 9925* kubectl get all -n observability | grep promtail -w
 9926* helm upgrade loki-stack grafana/loki-stack -f loki-values.yaml --namespace observability --create-namespace
 9927* kubectl get all -n observability | grep promtail -w
 9928* sudo apt update -y && sudo apt upgrade -y && sudo apt full-upgrade -y
 9929* sudo apt update && sudo apt install warp-terminal && warp_finish_update G77OjLk
 9930* kubectl get pods
 9931* kubectl get pods -n observability
 9932* pwd
 9933* git clone git@github.com:carlosleosouza/site-poc.git
 9934* git clone git@github.com:carlosleosouza/deploy-applications.git
 9935* kubectl get pods -n argocd
 9936* kubectl get ns
 9937* kubectl create ns argocd
 9938* kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
 9939* curl -L https://github.com/argoproj/argo-cd/releases/download/v2.11.2/argocd-linux-amd64 -o argocd\nsudo chmod +x argocd\nsudo mv argocd /usr/local/bin/argocd
 9940* kubectl get pods -n argocd
 9941* kubectl get svc
 9942* kubectl get svc -n argocd
 9943* kubectl port-forward svc/argocd-server -n argocd 8080:80
 9944* kubectl get secret -n argocd
 9945* kubectl get secret argocd-initial-admin-secret -n argocd
 9946* kubectl describe secret argocd-initial-admin-secret -n argocd
 9947* kubectl describe secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d; echo 
 9948* kubectl get secret argocd-initial-admin-secret -n argocd -o jsonpath="{.data.password}" | base64 -d; echo
 9949* kubectl get ns
 9950* kubectl get pods -n uzi-space
 9951* kubectl port-forward svc/site-poc-uze -n uzi-space -p 8082:80
 9952* kubectl port-forward svc/site-poc-uze -n uzi-space 8082:80
 9953* kubectl port-forward svc/site-poc-uzi -n uzi-space 8082:80
 9954* kubectl get pods -n uzi-space
 9955* kubectl get ns
 9956* ls
 9957* cd site-poc/
 9958* ls
 9959* cd ..
 9960* ls
 9961* cd deploy-applications/
 9962* ls
 9963* cd site-helm/
 9964* ls
 9965* cd ..
 9966* ls
 9967* cd site-poc/
 9968* ls
 9969* cd ..
 9970* ls
 9971* cd deploy-applications/
 9972* ls
 9973* kubectl apply -f site-application.yml
 9974* kubectl get applications -n argocd
 9975* kubectl delete -f site-application.yml
 9976* vim site-application.yml
 9977* kubectl delete -f site-application.yml
 9978* kubectl apply -f site-application.yml
 9979* cd ..
 9980* code .
 9981* ls
 9982* cd deploy-applications/
 9983* kubectl apply -f drone-application.yml
 9984* kubectl get applications
 9985* cd ..
 9986* ls
 9987* ls my-helm-chart/
 9988* cd app-template
 9989* ls
 9990* cd fieb-template-chart/
 9991* ls
 9992* code .
 9993* helm template sgia ./Chart.yaml
 9994* ls
 9995* ls /var/snap/microk8s/common
 9996* ls /var/snap/microk8s/common/args
 9997* ls /var/snap/microk8s/common/
 9998* ls
 9999* cd /var/snap/microk8s/common/
10000* ls
10001* ls devops-lab/
10002* ls etc/
10003* ls hooks
10004* ls plugins
10005* ls var
10006* ls var/    
10007* ls
10008* cd var/
10009* ls
10010* sudo ls var    
10011* sudo ls /var/snap/microk8s/common/var
10012* ls run
10013* cd ..
10014* ls run
10015* cd ..
10016* ls current/
10017* ls current/args/
10018* ls current/args/kube-apiserver
10019* cat current/args/kube-apiserver
10020* vim current/args/kube-apiserver
10021* sudo vim current/args/kube-apiserver
10022* sudo vim /var/snap/microk8s/current/args/etcd
10023* sudo microk8s stop\nsudo microk8s start
10024* microk8s status
10025* # Verificar se o API server está rodando\nmicrok8s status\n\n# Verificar os processos\nps aux | grep kube-apiserver | grep tls-cipher
10026* ps aux | grep kube-apiserver | grep tls-cipher
10027* microk8s kubectl get pods -A
10028* kubectl logs -f loki-stack-0
10029* kubectl logs -f loki-stack-0 -n observability
10030* kubectl logs -f loki-stack-1 -n observability
10031* history | grep loki-stack
10032* # Testar conexão SSL\nopenssl s_client -connect localhost:16443 -cipher 'MEDIUM' < /dev/null\n\n# Verificar cipher suites suportadas\nnmap --script ssl-enum-ciphers -p 16443 localhost
10033* openssl s_client -connect localhost:16443 -cipher 'MEDIUM' < /dev/null\n
10034* sudo journalctl -u snap.microk8s.daemon-apiserver -f\n
10035* kubectl get pods -n kube-system
10036* kubectl get ns
10037* kubectl get all -n observability
10038* kubectl get pods -A
10039* kubectl get pods
10040* kubectl get pods -A
10041* microk8s status
10042* microk8s start
10043* microk8s status
10044* kubectl get pods -A
10045* kubectl get svc -A
10046* sudo apt update -y && sudo apt upgrade -y && sudo apt full-upgrade -y
10047* cd ..
10048* mkdir Alura
10049* cd Alura
10050* mkdir observabilidade
10051* cd observabilidade/
10052* mv ~/Downloads/prometheus-grafana.zip .
10053* clear
10054* ls
10055* cd prometheus-grafana/
10056* ls
10057* docker -v
10058* dcoker compose
10059* docker compose
10060* docker compose -v
10061* docker compose --version
10062* docker-compose --version
10063* java -version
10064* java --version
10065* sudo apt install openjdk-17-jdk
10066* java -version
10067* docker-compose up -d
10068* docker ps
10069* docker logs mysql-forum-api
10070* docker logs redis-forum-api
10071* docker ps
10072* cd app
10073* mvn clean package
10074* pip install maven
10075* sudo apt install maven
10076* mvn clean package
10077* java -jar -Xms128M -Xmx128M -XX:PermSize=64m -XX:MaxPermSize=128m -Dspring.profiles.active=prod target/forum.jar
10078* cd target/
10079* ls
10080* java -jar -Xms128M -Xmx128M -XX:PermSize=64m -XX:MaxPermSize=128m -Dspring.profiles.active=prod target/forum.jar
10081* java -jar forum.jar
10082* ps aux |grep 8080
10083* microk8s stop
10084* java -jar -Xms128M -Xmx128M -XX:PermSize=64m -XX:MaxPermSize=128m -Dspring.profiles.active=prod target/forum.jar
10085* java -jar -Xms128M -Xmx128M -XX:PermSize=64m -XX:MaxPermSize=128m -Dspring.profiles.active=prod forum.jar
10086* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod forum.jar
10087* mavem
10088* maven
10089* mvn -version
10090* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod forum.jar
10091* docekr ps
10092* docker ps
10093* docker restart 35814f5232bf 4ada4c085133
10094* docker ps
10095* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod forum.jar
10096* mvn clean package
10097* cd ..
10098* ls
10099* mvn clean package
10100* java -jar -Xms128M -Xmx128M -XX:PermSize=64m -XX:MaxPermSize=128m -Dspring.profiles.active=prod target/forum.jar
10101* java -jar -Xms128M -Xmx128M -XX:MaxPermSize=128m -Dspring.profiles.active=prod target/forum.jar
10102* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod target/forum.jar
10103* mvn clean package
10104* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod target/forum.jar
10105* mvn clean package
10106* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod target/forum.jar
10107* mvn clean package
10108* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod target/forum.jar
10109* mvn clean package
10110* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod target/forum.jar
10111* mvn clean package
10112* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod target/forum.jar
10113* mvn -versioncd ../Alura/observabilidade/prometheus-grafana/app/
10114* cd ../Alura/observabilidade/aula_3/app/
10115* mvn clean install
10116* java -jar -Xms128M -Xmx128M -XX:MaxPermSize=128m -Dspring.profiles.active=prod target/forum.jar
10117* java -jar -Xms128M -Xmx128M -Dspring.profiles.active=prod target/forum.jar
10118* ls
10119* java -jar -Xms128M -Xmx128M -XX:MaxPermSize=128m -Dspring.profiles.active=prod target/forum.jar
10120* java -jar -Xms128M -Xmx128M target/forum.jar -Dspring.profiles.active=prod
10121* ls
10122* ./start.sh
10123* chdmo +x start.sh
10124* chmos +x start.sh
10125* chmod +x start.sh
10126* ./start.sh
10127* vim start.sh
10128* ./start.sh
10129* mvn clean package
10130* mvn clean install
10131* mvn clean package
10132* java -jar -Xms128M -Xmx128M target/forum.jar -Dspring.profiles.active=prod
10133* cd..
10134* cd ..
10135* cd ../../
10136* cd ../microk8s-edge-lab/
10137* ls
10138* git status
10139* git remote -v
10140* git add .
10141* git commit -m "Persistência no Addon Obervability"
10142* git push
10143* exit
10144  ls
10145  cat observability.txt
10146  history 
